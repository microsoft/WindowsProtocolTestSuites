<Page
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
    xmlns:wfi="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration"
	x:Class="Microsoft.Protocols.TestManager.UI.RunPage"
	x:Name="Page"
	WindowTitle="Page"
    Foreground="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
	FlowDirection="LeftToRight" MinWidth="490"
	WindowWidth="630" WindowHeight="480">

    <Page.Resources>
        <Style x:Key="styleTreeView" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Tag" Value="{Binding Name}" />
            <Setter Property="AutomationProperties.Name" Value="{Binding Name}"/>
            <EventSetter Event="GotFocus" Handler="TreeViewItem_GotFocus" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Margin="0,0,0,0">
                            <ContentPresenter x:Name="PART_Header"
                                                ContentSource="Header"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true"/>
                                    <Condition Property="IsSelectionActive"
                                               Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="TestCaseTemplate">
            <Grid>
                <CheckBox VerticalAlignment="Center" Focusable="False" IsChecked="{Binding IsChecked}"/>
                <Image Name="StatusIcon" Height="19" Margin="16,2,0,2" HorizontalAlignment="Left" VerticalAlignment="Center"></Image>
                <TextBlock Text="{Binding Name}" ToolTip="{Binding ToolTipOnUI}" Width="Auto" TextTrimming="CharacterEllipsis" Focusable="False"
                           TextAlignment="Left" FontSize="9 pt" FontFamily="Segoe UI" VerticalAlignment="Bottom" Margin="35,2,0,2" HorizontalAlignment="Left">
                </TextBlock>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="NotRun">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/not-run-test.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Passed">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/passed-test.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Failed">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/failed-test.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Other">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/warning-yellow.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Running">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/running-test.png"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="Waiting">
                    <Setter TargetName="StatusIcon" Property="Source" Value="pack://application:,,,/images/sandglass.png"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Page.Resources>
    
    <Grid x:Name="LayoutRoot" KeyboardNavigation.IsTabStop="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="330" MaxWidth="600" Width="330"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Column="0"
            Name="GroupByLable" Text="Group by" 
            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,3,0,0" />
        <ComboBox Name="GroupingMethod" AutomationProperties.Name="Grouping method" HorizontalAlignment="Left" Margin="58,0,0,0" VerticalAlignment="Top" Width="85" SelectedIndex="0" 
                  SelectionChanged="ComboBox_SelectionChanged">
            <ComboBox.Items>
                <ComboBoxItem Name="Outcome" Content="Outcome"/>
                <ComboBoxItem Name="Category" Content="Category"/>
            </ComboBox.Items>
        </ComboBox>
        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="150,3,0,0">Find</TextBlock>
        <TextBox AutomationProperties.Name="Filter keywords" Name="Keywords" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="180,3,0,0" Width="130" KeyDown="Keywords_KeyDown"></TextBox>
        <Button AutomationProperties.Name="Apply or remove filter" Name="FilterButton" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,0,0" Width="20" Height="20" Click="FilterButton_Click" Background="Transparent" BorderBrush="Transparent">
            <Image Name="ButtonIcon" Source="pack://application:,,,/images/find.png" />
        </Button>
        <TreeView x:Name="TestOutcome" Margin="0,25,0,28" 
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    KeyboardNavigation.ControlTabNavigation="Contained"
                    KeyboardNavigation.IsTabStop="True"
                    KeyDown="TestOutcome_KeyDown">
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Uncheck All" Click="UncheckAll_Click"/>
                    <Separator/>
                    <MenuItem Header="Run Selected Cases" Name="RunSelectedMenuItem" Click="RunTest_Click"/>
                    <MenuItem Header="Run All Cases" Click="RunAll_Click"/>
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <TextBlock Name="RunAll" HorizontalAlignment="Left" Margin="0,0,0,7" VerticalAlignment="Bottom" >
            <Hyperlink Name="RunAllLink" Click="RunAll_Click">Run All</Hyperlink>
        </TextBlock>
        <TextBlock Name="RunSelected" HorizontalAlignment="Left" Margin="49,0,0,7" VerticalAlignment="Bottom">
            <Hyperlink Name="RunSelectedLink" Click="RunTest_Click">
                <TextBlock x:Name="RunSelectedLinkText">Run Selected Cases</TextBlock>
            </Hyperlink>
        </TextBlock>
        <TextBlock Name="AbortExecution" HorizontalAlignment="Left" Margin="10,0,0,7" Visibility="Collapsed" VerticalAlignment="Bottom">
            <Hyperlink Name="AbortExecutionLink" Focusable="False" Click="AbortExecution_Click">Abort Execution</Hyperlink>
        </TextBlock>
        <Menu Name="ExportImportMenu" Margin="0,0,7,5" VerticalAlignment="Bottom" HorizontalAlignment="Right">
            <MenuItem Header="Export / Import">
                <MenuItem x:Name="ExportAllPlaylist" Header="Export All Test Cases to Playlist ..." Click="ExportAllPlaylist_Click"/>
                <MenuItem x:Name="ExportCheckedPlaylist" Header="Export Checked Test Cases to Playlist ..." Click="ExportCheckedPlaylist_Click"/>
                <MenuItem x:Name="ImportPlaylist" Header="Import Playlist ..." Click="ImportPlaylist_Click"/>
                <Separator />
                <MenuItem x:Name="SaveProfile" Header="Save Profile ..." Click="SaveProfile_Click"/>
                <Separator />
                <MenuItem x:Name="ExportTextCaseList" Header="Export Plain Text Report ..." Click="GenerateTextReport_Click"/>
            </MenuItem>
        </Menu>
        <GridSplitter Grid.Column="1" Width="5" AutomationProperties.Name="Splitter" Margin="0,21,0,0" HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
        <wfi:WindowsFormsHost x:Name="c_wfh" Margin="0,25,1,0" HorizontalAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Auto" KeyboardNavigation.IsTabStop="False" Grid.Column="2">
            <wf:WebBrowser x:Name="WebBrowserLog"/>
        </wfi:WindowsFormsHost>
        <TextBlock Grid.Column="2" x:Name ="TotalResults" Margin="0,0,10,0" TextWrapping="Wrap" 
                   VerticalAlignment="Top" FontSize="9pt" FontFamily="Segoe UI" TextAlignment="Left" Visibility="Collapsed" KeyboardNavigation.IsTabStop="False" HorizontalAlignment="Right">
            <Hyperlink Name="TotalResultsLink" Focusable="False"><TextBlock Name="TotalResultsLinkText"></TextBlock></Hyperlink>
        </TextBlock>
    </Grid>
</Page>