// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

config FlushCachedDataConfig : Actions_Coverage 
{
    switch TestMethodAttribute = "Microsoft.VisualStudio.TestTools.UnitTesting.TestMethod, Microsoft.VisualStudio.TestTools.UnitTesting.TestCategory(Microsoft.Protocols.TestSuites.FileSharing.Common.Adapter.TestCategories.Model), Microsoft.VisualStudio.TestTools.UnitTesting.TestCategory(Microsoft.Protocols.TestSuites.FileSharing.Common.Adapter.TestCategories.Fsa), Microsoft.VisualStudio.TestTools.UnitTesting.TestCategory(Microsoft.Protocols.TestSuites.FileSharing.Common.Adapter.TestCategories.FlushCachedData)";
}

// Scenario of [MS-FSA] 2.1.5.6   Server Requests Flushing Cached Data
machine FlushCachedDataScenario() : FlushCachedDataConfig
{
    (
        FsaInitial;
        GetSystemConfig;
        CreateFile(
             FileAttribute.NORMAL,
             CreateOptions.NON_DIRECTORY_FILE,
             StreamTypeNameToOPen.NULL,
             FileAccess.GENERIC_WRITE,
             ShareAccess.FILE_SHARE_WRITE,
             CreateDisposition.OPEN_IF,
             StreamFoundType.StreamIsFound,
             SymbolicLinkType.IsNotSymbolicLink,
             FileType.DataFile,
             FileNameStatus.PathNameValid);
        FlushCachedData;
    )
    ||
    FSAModelProgramCoverage 
}

// Test case of [MS-FSA] 2.1.5.6   Server Requests Flushing Cached Data
// The exploration time for this machine is about 5 seconds
machine FlushCachedDataTestCase() : FlushCachedDataConfig where TestEnabled = true
{
    construct requirement coverage where strategy = "full"
    for (
        construct test cases where strategy = "longtests", AllowUndeterminedCoverage = true for 
        FlushCachedDataScenario
    )
}