// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using Microsoft.Protocols.TestTools.StackSdk.Networking.Rpce;

namespace Microsoft.Protocols.TestTools.StackSdk.Security.Nrpc
{
    /// <summary>
    /// NRPC format string generated by midl
    /// </summary>
    public static class NrpcRpcStubFormatString
    {
        // NRPC type format string generated by midl, converted to byte array.
        public static byte[] TypeFormatString
        {
            get
            {
                return RpceStubHelper.CreateFormatStringByteArray(RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86 ? X86_TYPE_FORMAT_STRING : X64_TYPE_FORMAT_STRING);
            }
        }

        // NRPC proc format string generated by midl, converted to byte array.
        public static byte[] ProcFormatString
        {
            get
            {
                return RpceStubHelper.CreateFormatStringByteArray(RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86 ? X86_PROC_FORMAT_STRING : X64_PROC_FORMAT_STRING);
            }
        }

        // NRPC offset of proc format string for every procedure, copied from MIDL generated stub.
        public static ushort[] ProcFormatStringOffsetTable
        {
            get
            {
                if (RpceStubHelper.GetPlatform() == RpceStubTargetPlatform.X86)
                    return X86_ProcFormatStringOffsetTable;
                else
                    return X64_ProcFormatStringOffsetTable;
            }
        }

        #region X86
        // NRPC offset of proc format string for every procedure, copied from MIDL generated stub.
        internal static readonly ushort[] X86_ProcFormatStringOffsetTable = new ushort[]
        {
            0,
            60,
            120,
            210,
            282,
            342,
            414,
            492,
            576,
            660,
            768,
            876,
            930,
            990,
            1044,
            1110,
            1188,
            1278,
            1356,
            1422,
            1470,
            1542,
            1614,
            1668,
            1722,
            1794,
            1866,
            1950,
            2022,
            2070,
            2148,
            2226,
            2304,
            2376,
            2436,
            2520,
            2574,
            2622,
            2682,
            2730,
            2812,
            2866,
            2932,
            3016,
            3076,
            3148,
            3244,
            3334,
            3368,
            3446
        };


        // NRPC proc format string generated by midl
        private const string X86_PROC_FORMAT_STRING = @"
		/* Procedure NetrLogonUasLogon */

			0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/*  2 */	NdrFcLong( 0x0 ),	/* 0 */
/*  6 */	NdrFcShort( 0x0 ),	/* 0 */
/*  8 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 10 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 12 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 14 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 16 */	NdrFcShort( 0x0 ),	/* 0 */
/* 18 */	NdrFcShort( 0x8 ),	/* 8 */
/* 20 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 22 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 24 */	NdrFcShort( 0x0 ),	/* 0 */
/* 26 */	NdrFcShort( 0x0 ),	/* 0 */
/* 28 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 30 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 32 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 34 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter UserName */

/* 36 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 38 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 40 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Workstation */

/* 42 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 44 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 46 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ValidationInformation */

/* 48 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 50 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 52 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Return value */

/* 54 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 56 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 58 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonUasLogoff */

/* 60 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 62 */	NdrFcLong( 0x0 ),	/* 0 */
/* 66 */	NdrFcShort( 0x1 ),	/* 1 */
/* 68 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 70 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 72 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 74 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 76 */	NdrFcShort( 0x0 ),	/* 0 */
/* 78 */	NdrFcShort( 0x8 ),	/* 8 */
/* 80 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 82 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 84 */	NdrFcShort( 0x0 ),	/* 0 */
/* 86 */	NdrFcShort( 0x0 ),	/* 0 */
/* 88 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 90 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 92 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 94 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter UserName */

/* 96 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 98 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 100 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Workstation */

/* 102 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 104 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 106 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter LogoffInformation */

/* 108 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 110 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 112 */	NdrFcShort( 0x56 ),	/* Type Offset=86 */

	/* Return value */

/* 114 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 116 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 118 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogon */

/* 120 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 122 */	NdrFcLong( 0x0 ),	/* 0 */
/* 126 */	NdrFcShort( 0x2 ),	/* 2 */
/* 128 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 130 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 132 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 134 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 136 */	NdrFcShort( 0xac ),	/* 172 */
/* 138 */	NdrFcShort( 0x71 ),	/* 113 */
/* 140 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 142 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 144 */	NdrFcShort( 0x1 ),	/* 1 */
/* 146 */	NdrFcShort( 0x1 ),	/* 1 */
/* 148 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 150 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 152 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 154 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 156 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 158 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 160 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 162 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 164 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 166 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 168 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 170 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 172 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter LogonLevel */

/* 174 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 176 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 178 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 180 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 182 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 184 */	NdrFcShort( 0x84 ),	/* Type Offset=132 */

	/* Parameter ValidationLevel */

/* 186 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 188 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 190 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationInformation */

/* 192 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 194 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 196 */	NdrFcShort( 0x23e ),	/* Type Offset=574 */

	/* Parameter Authoritative */

/* 198 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 200 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 202 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Return value */

/* 204 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 206 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 208 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogoff */

/* 210 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 212 */	NdrFcLong( 0x0 ),	/* 0 */
/* 216 */	NdrFcShort( 0x3 ),	/* 3 */
/* 218 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 220 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 222 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 224 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 226 */	NdrFcShort( 0xa6 ),	/* 166 */
/* 228 */	NdrFcShort( 0x58 ),	/* 88 */
/* 230 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 232 */	0x8,		/* 8 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 234 */	NdrFcShort( 0x0 ),	/* 0 */
/* 236 */	NdrFcShort( 0x1 ),	/* 1 */
/* 238 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 240 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 242 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 244 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 246 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 248 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 250 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 252 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 254 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 256 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 258 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 260 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 262 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter LogonLevel */

/* 264 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 266 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 268 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 270 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 272 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 274 */	NdrFcShort( 0x74a ),	/* Type Offset=1866 */

	/* Return value */

/* 276 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 278 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 280 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerReqChallenge */

/* 282 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 284 */	NdrFcLong( 0x0 ),	/* 0 */
/* 288 */	NdrFcShort( 0x4 ),	/* 4 */
/* 290 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 292 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 294 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 296 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 298 */	NdrFcShort( 0x3c ),	/* 60 */
/* 300 */	NdrFcShort( 0x44 ),	/* 68 */
/* 302 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 304 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 306 */	NdrFcShort( 0x0 ),	/* 0 */
/* 308 */	NdrFcShort( 0x0 ),	/* 0 */
/* 310 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 312 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 314 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 316 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 318 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 320 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 322 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientChallenge */

/* 324 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 326 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 328 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter ServerChallenge */

/* 330 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 332 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 334 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Return value */

/* 336 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 338 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 340 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate */

/* 342 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 344 */	NdrFcLong( 0x0 ),	/* 0 */
/* 348 */	NdrFcShort( 0x5 ),	/* 5 */
/* 350 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 352 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 354 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 356 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 358 */	NdrFcShort( 0x42 ),	/* 66 */
/* 360 */	NdrFcShort( 0x44 ),	/* 68 */
/* 362 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 364 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 366 */	NdrFcShort( 0x0 ),	/* 0 */
/* 368 */	NdrFcShort( 0x0 ),	/* 0 */
/* 370 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 372 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 374 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 376 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 378 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 380 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 382 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 384 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 386 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 388 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 390 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 392 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 394 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 396 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 398 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 400 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter ServerCredential */

/* 402 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 404 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 406 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Return value */

/* 408 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 410 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 412 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordSet */

/* 414 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 416 */	NdrFcLong( 0x0 ),	/* 0 */
/* 420 */	NdrFcShort( 0x6 ),	/* 6 */
/* 422 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 424 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 426 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 428 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 430 */	NdrFcShort( 0xca ),	/* 202 */
/* 432 */	NdrFcShort( 0x58 ),	/* 88 */
/* 434 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 436 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 438 */	NdrFcShort( 0x0 ),	/* 0 */
/* 440 */	NdrFcShort( 0x0 ),	/* 0 */
/* 442 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 444 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 446 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 448 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 450 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 452 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 454 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 456 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 458 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 460 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 462 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 464 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 466 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 468 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 470 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 472 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 474 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 476 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 478 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter UasNewPassword */

/* 480 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 482 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 484 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Return value */

/* 486 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 488 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 490 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseDeltas */

/* 492 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 494 */	NdrFcLong( 0x0 ),	/* 0 */
/* 498 */	NdrFcShort( 0x7 ),	/* 7 */
/* 500 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 502 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 504 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 506 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 508 */	NdrFcShort( 0xec ),	/* 236 */
/* 510 */	NdrFcShort( 0x94 ),	/* 148 */
/* 512 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 514 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 516 */	NdrFcShort( 0x1 ),	/* 1 */
/* 518 */	NdrFcShort( 0x0 ),	/* 0 */
/* 520 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 522 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 524 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 526 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 528 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 530 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 532 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 534 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 536 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 538 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 540 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 542 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 544 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter DatabaseID */

/* 546 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 548 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 550 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainModifiedCount */

/* 552 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 554 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 556 */	NdrFcShort( 0x76c ),	/* Type Offset=1900 */

	/* Parameter DeltaArray */

/* 558 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 560 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 562 */	NdrFcShort( 0x776 ),	/* Type Offset=1910 */

	/* Parameter PreferredMaximumLength */

/* 564 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 566 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 568 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 570 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 572 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 574 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseSync */

/* 576 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 578 */	NdrFcLong( 0x0 ),	/* 0 */
/* 582 */	NdrFcShort( 0x8 ),	/* 8 */
/* 584 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 586 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 588 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 590 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 592 */	NdrFcShort( 0xcc ),	/* 204 */
/* 594 */	NdrFcShort( 0x74 ),	/* 116 */
/* 596 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 598 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 600 */	NdrFcShort( 0x1 ),	/* 1 */
/* 602 */	NdrFcShort( 0x0 ),	/* 0 */
/* 604 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 606 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 608 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 610 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 612 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 614 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 616 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 618 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 620 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 622 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 624 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 626 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 628 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter DatabaseID */

/* 630 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 632 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 634 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SyncContext */

/* 636 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 638 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 640 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 642 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 644 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 646 */	NdrFcShort( 0x776 ),	/* Type Offset=1910 */

	/* Parameter PreferredMaximumLength */

/* 648 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 650 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 652 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 654 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 656 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 658 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrAccountDeltas */

/* 660 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 662 */	NdrFcLong( 0x0 ),	/* 0 */
/* 666 */	NdrFcShort( 0x9 ),	/* 9 */
/* 668 */	NdrFcShort( 0x34 ),	/* x86 Stack size/offset = 52 */
/* 670 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 672 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 674 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 676 */	NdrFcShort( 0x104 ),	/* 260 */
/* 678 */	NdrFcShort( 0xdc ),	/* 220 */
/* 680 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xd,		/* 13 */
/* 682 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 684 */	NdrFcShort( 0x1 ),	/* 1 */
/* 686 */	NdrFcShort( 0x0 ),	/* 0 */
/* 688 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 690 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 692 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 694 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 696 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 698 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 700 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 702 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 704 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 706 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 708 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 710 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 712 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter RecordId */

/* 714 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 716 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 718 */	NdrFcShort( 0x10f0 ),	/* Type Offset=4336 */

	/* Parameter Count */

/* 720 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 722 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 724 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Level */

/* 726 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 728 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 730 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 732 */	NdrFcShort( 0x113 ),	/* Flags:  must size, must free, out, simple ref, */
/* 734 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 736 */	NdrFcShort( 0x1100 ),	/* Type Offset=4352 */

	/* Parameter BufferSize */

/* 738 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 740 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 742 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter CountReturned */

/* 744 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 746 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 748 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TotalEntries */

/* 750 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 752 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 754 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NextRecordId */

/* 756 */	NdrFcShort( 0x6112 ),	/* Flags:  must free, out, simple ref, srv alloc size=24 */
/* 758 */	NdrFcShort( 0x2c ),	/* x86 Stack size/offset = 44 */
/* 760 */	NdrFcShort( 0x10f0 ),	/* Type Offset=4336 */

	/* Return value */

/* 762 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 764 */	NdrFcShort( 0x30 ),	/* x86 Stack size/offset = 48 */
/* 766 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrAccountSync */

/* 768 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 770 */	NdrFcLong( 0x0 ),	/* 0 */
/* 774 */	NdrFcShort( 0xa ),	/* 10 */
/* 776 */	NdrFcShort( 0x34 ),	/* x86 Stack size/offset = 52 */
/* 778 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 780 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 782 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 784 */	NdrFcShort( 0xb8 ),	/* 184 */
/* 786 */	NdrFcShort( 0xf8 ),	/* 248 */
/* 788 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xd,		/* 13 */
/* 790 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 792 */	NdrFcShort( 0x1 ),	/* 1 */
/* 794 */	NdrFcShort( 0x0 ),	/* 0 */
/* 796 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 798 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 800 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 802 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 804 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 806 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 808 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 810 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 812 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 814 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 816 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 818 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 820 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter Reference */

/* 822 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 824 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 826 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Level */

/* 828 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 830 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 832 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 834 */	NdrFcShort( 0x113 ),	/* Flags:  must size, must free, out, simple ref, */
/* 836 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 838 */	NdrFcShort( 0x1118 ),	/* Type Offset=4376 */

	/* Parameter BufferSize */

/* 840 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 842 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 844 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter CountReturned */

/* 846 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 848 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 850 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TotalEntries */

/* 852 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 854 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 856 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NextReference */

/* 858 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 860 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 862 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LastRecordId */

/* 864 */	NdrFcShort( 0x6112 ),	/* Flags:  must free, out, simple ref, srv alloc size=24 */
/* 866 */	NdrFcShort( 0x2c ),	/* x86 Stack size/offset = 44 */
/* 868 */	NdrFcShort( 0x10f0 ),	/* Type Offset=4336 */

	/* Return value */

/* 870 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 872 */	NdrFcShort( 0x30 ),	/* x86 Stack size/offset = 48 */
/* 874 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetDCName */

/* 876 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 878 */	NdrFcLong( 0x0 ),	/* 0 */
/* 882 */	NdrFcShort( 0xb ),	/* 11 */
/* 884 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 886 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 888 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 890 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 892 */	NdrFcShort( 0x0 ),	/* 0 */
/* 894 */	NdrFcShort( 0x8 ),	/* 8 */
/* 896 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 898 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 900 */	NdrFcShort( 0x0 ),	/* 0 */
/* 902 */	NdrFcShort( 0x0 ),	/* 0 */
/* 904 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 906 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 908 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 910 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter DomainName */

/* 912 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 914 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 916 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Buffer */

/* 918 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 920 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 922 */	NdrFcShort( 0x1124 ),	/* Type Offset=4388 */

	/* Return value */

/* 924 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 926 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 928 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl */

/* 930 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 932 */	NdrFcLong( 0x0 ),	/* 0 */
/* 936 */	NdrFcShort( 0xc ),	/* 12 */
/* 938 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 940 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 942 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 944 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 946 */	NdrFcShort( 0x10 ),	/* 16 */
/* 948 */	NdrFcShort( 0x8 ),	/* 8 */
/* 950 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 952 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 954 */	NdrFcShort( 0x1 ),	/* 1 */
/* 956 */	NdrFcShort( 0x0 ),	/* 0 */
/* 958 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 960 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 962 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 964 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 966 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 968 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 970 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 972 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 974 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 976 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 978 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 980 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 982 */	NdrFcShort( 0x112c ),	/* Type Offset=4396 */

	/* Return value */

/* 984 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 986 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 988 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetAnyDCName */

/* 990 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 992 */	NdrFcLong( 0x0 ),	/* 0 */
/* 996 */	NdrFcShort( 0xd ),	/* 13 */
/* 998 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1000 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1002 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1004 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1006 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1008 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1010 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1012 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1014 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1016 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1018 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1020 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1022 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1024 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1026 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1028 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1030 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Buffer */

/* 1032 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1034 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1036 */	NdrFcShort( 0x1124 ),	/* Type Offset=4388 */

	/* Return value */

/* 1038 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1040 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1042 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl2 */

/* 1044 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1046 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1050 */	NdrFcShort( 0xe ),	/* 14 */
/* 1052 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1054 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1056 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1058 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1060 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1062 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1064 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 1066 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1068 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1070 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1072 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1074 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1076 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1078 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 1080 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1082 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1084 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 1086 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1088 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1090 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Data */

/* 1092 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1094 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1096 */	NdrFcShort( 0x11a8 ),	/* Type Offset=4520 */

	/* Parameter Buffer */

/* 1098 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1100 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1102 */	NdrFcShort( 0x11e0 ),	/* Type Offset=4576 */

	/* Return value */

/* 1104 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1106 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1108 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate2 */

/* 1110 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1112 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1116 */	NdrFcShort( 0xf ),	/* 15 */
/* 1118 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 1120 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1122 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1124 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1126 */	NdrFcShort( 0x5e ),	/* 94 */
/* 1128 */	NdrFcShort( 0x60 ),	/* 96 */
/* 1130 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 1132 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1134 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1136 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1138 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1140 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1142 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1144 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 1146 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1148 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1150 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 1152 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1154 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1156 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 1158 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1160 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1162 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 1164 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1166 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1168 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter ServerCredential */

/* 1170 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1172 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1174 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter NegotiateFlags */

/* 1176 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1178 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1180 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1182 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1184 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1186 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseSync2 */

/* 1188 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1190 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1194 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1196 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 1198 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1200 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1202 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1204 */	NdrFcShort( 0xd2 ),	/* 210 */
/* 1206 */	NdrFcShort( 0x74 ),	/* 116 */
/* 1208 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 1210 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1212 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1214 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1216 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1218 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1220 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1222 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1224 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1226 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1228 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 1230 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1232 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1234 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 1236 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1238 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1240 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter DatabaseID */

/* 1242 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1244 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1246 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter RestartState */

/* 1248 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1250 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1252 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter SyncContext */

/* 1254 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1256 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1258 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 1260 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1262 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1264 */	NdrFcShort( 0x776 ),	/* Type Offset=1910 */

	/* Parameter PreferredMaximumLength */

/* 1266 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1268 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 1270 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1272 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1274 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 1276 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseRedo */

/* 1278 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1280 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1284 */	NdrFcShort( 0x11 ),	/* 17 */
/* 1286 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 1288 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1290 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1292 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1294 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 1296 */	NdrFcShort( 0x58 ),	/* 88 */
/* 1298 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 1300 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1302 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1304 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1306 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1308 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1310 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1312 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1314 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1316 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1318 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 1320 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1322 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1324 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 1326 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1328 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1330 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ChangeLogEntry */

/* 1332 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1334 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1336 */	NdrFcShort( 0x11ee ),	/* Type Offset=4590 */

	/* Parameter ChangeLogEntrySize */

/* 1338 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1340 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1342 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 1344 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1346 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1348 */	NdrFcShort( 0x776 ),	/* Type Offset=1910 */

	/* Return value */

/* 1350 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1352 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1354 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl2Ex */

/* 1356 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1358 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1362 */	NdrFcShort( 0x12 ),	/* 18 */
/* 1364 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1366 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1368 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1370 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1372 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1374 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1376 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 1378 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1380 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1382 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1384 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1386 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1388 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1390 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 1392 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1394 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1396 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 1398 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1400 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1402 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Data */

/* 1404 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1406 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1408 */	NdrFcShort( 0x11fe ),	/* Type Offset=4606 */

	/* Parameter Buffer */

/* 1410 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1412 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1414 */	NdrFcShort( 0x120c ),	/* Type Offset=4620 */

	/* Return value */

/* 1416 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1418 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1420 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrEnumerateTrustedDomains */

/* 1422 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1424 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1428 */	NdrFcShort( 0x13 ),	/* 19 */
/* 1430 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1432 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1434 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1436 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1438 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1440 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1442 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 1444 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1446 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1448 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1450 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1452 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1454 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1456 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainNameBuffer */

/* 1458 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1460 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1462 */	NdrFcShort( 0x4e8 ),	/* Type Offset=1256 */

	/* Return value */

/* 1464 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1466 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1468 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcName */

/* 1470 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1472 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1476 */	NdrFcShort( 0x14 ),	/* 20 */
/* 1478 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1480 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1482 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1484 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1486 */	NdrFcShort( 0x90 ),	/* 144 */
/* 1488 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1490 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1492 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1494 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1496 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1498 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 1500 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1502 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1504 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1506 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1508 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1510 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 1512 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 1514 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1516 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter SiteGuid */

/* 1518 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 1520 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1522 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter Flags */

/* 1524 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1526 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1528 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 1530 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1532 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1534 */	NdrFcShort( 0x1230 ),	/* Type Offset=4656 */

	/* Return value */

/* 1536 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1538 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1540 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetCapabilities */

/* 1542 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1544 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1548 */	NdrFcShort( 0x15 ),	/* 21 */
/* 1550 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1552 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1554 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1556 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1558 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 1560 */	NdrFcShort( 0x58 ),	/* 88 */
/* 1562 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1564 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1566 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1568 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1570 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1572 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1574 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1576 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1578 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1580 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1582 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 1584 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1586 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1588 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 1590 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1592 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1594 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter QueryLevel */

/* 1596 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1598 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1600 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ServerCapabilities */

/* 1602 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1604 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1606 */	NdrFcShort( 0x128c ),	/* Type Offset=4748 */

	/* Return value */

/* 1608 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1610 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1612 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSetServiceBits */

/* 1614 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1616 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1620 */	NdrFcShort( 0x16 ),	/* 22 */
/* 1622 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1624 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1626 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1628 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1630 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1632 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1634 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1636 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1638 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1640 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1642 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1644 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1646 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1648 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ServiceBitsOfInterest */

/* 1650 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1652 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1654 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ServiceBits */

/* 1656 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1658 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1660 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1662 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1664 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1666 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetTrustRid */

/* 1668 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1670 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1674 */	NdrFcShort( 0x17 ),	/* 23 */
/* 1676 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1678 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1680 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1682 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1684 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1686 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1688 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1690 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1692 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1694 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1696 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1698 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1700 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1702 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1704 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1706 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1708 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Rid */

/* 1710 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1712 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1714 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1716 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1718 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1720 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonComputeServerDigest */

/* 1722 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1724 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1728 */	NdrFcShort( 0x18 ),	/* 24 */
/* 1730 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1732 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1734 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1736 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1738 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1740 */	NdrFcShort( 0x48 ),	/* 72 */
/* 1742 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1744 */	0x8,		/* 8 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1746 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1748 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1750 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1752 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1754 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1756 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Rid */

/* 1758 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1760 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1762 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Message */

/* 1764 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1766 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1768 */	NdrFcShort( 0x12a6 ),	/* Type Offset=4774 */

	/* Parameter MessageSize */

/* 1770 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1772 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1774 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NewMessageDigest */

/* 1776 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1778 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1780 */	NdrFcShort( 0x10ea ),	/* Type Offset=4330 */

	/* Parameter OldMessageDigest */

/* 1782 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1784 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1786 */	NdrFcShort( 0x10ea ),	/* Type Offset=4330 */

	/* Return value */

/* 1788 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1790 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1792 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonComputeClientDigest */

/* 1794 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1796 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1800 */	NdrFcShort( 0x19 ),	/* 25 */
/* 1802 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1804 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1806 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1808 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1810 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1812 */	NdrFcShort( 0x48 ),	/* 72 */
/* 1814 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1816 */	0x8,		/* 8 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1818 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1820 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1822 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1824 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1826 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1828 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1830 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1832 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1834 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Message */

/* 1836 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1838 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1840 */	NdrFcShort( 0x12a6 ),	/* Type Offset=4774 */

	/* Parameter MessageSize */

/* 1842 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1844 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1846 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NewMessageDigest */

/* 1848 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1850 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1852 */	NdrFcShort( 0x10ea ),	/* Type Offset=4330 */

	/* Parameter OldMessageDigest */

/* 1854 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1856 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1858 */	NdrFcShort( 0x10ea ),	/* Type Offset=4330 */

	/* Return value */

/* 1860 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1862 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1864 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate3 */

/* 1866 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1868 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1872 */	NdrFcShort( 0x1a ),	/* 26 */
/* 1874 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 1876 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1878 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1880 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1882 */	NdrFcShort( 0x5e ),	/* 94 */
/* 1884 */	NdrFcShort( 0x7c ),	/* 124 */
/* 1886 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 1888 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1890 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1892 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1894 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1896 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1898 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1900 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 1902 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1904 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1906 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 1908 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1910 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1912 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 1914 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1916 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 1918 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 1920 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1922 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1924 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter ServerCredential */

/* 1926 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1928 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 1930 */	NdrFcShort( 0x6c ),	/* Type Offset=108 */

	/* Parameter NegotiateFlags */

/* 1932 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1934 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 1936 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter AccountRid */

/* 1938 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1940 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1942 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1944 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1946 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 1948 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcNameEx */

/* 1950 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1952 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1956 */	NdrFcShort( 0x1b ),	/* 27 */
/* 1958 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 1960 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 1962 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1964 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1966 */	NdrFcShort( 0x4c ),	/* 76 */
/* 1968 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1970 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1972 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1974 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1976 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1978 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 1980 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1982 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 1984 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1986 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1988 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 1990 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 1992 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 1994 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 1996 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter SiteName */

/* 1998 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2000 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2002 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2004 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2006 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2008 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 2010 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2012 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2014 */	NdrFcShort( 0x1230 ),	/* Type Offset=4656 */

	/* Return value */

/* 2016 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2018 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2020 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetSiteName */

/* 2022 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2024 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2028 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2030 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2032 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2034 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2036 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2038 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2040 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2042 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2044 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2046 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2048 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2050 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2052 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2054 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2056 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter SiteName */

/* 2058 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2060 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2062 */	NdrFcShort( 0x1124 ),	/* Type Offset=4388 */

	/* Return value */

/* 2064 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2066 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2068 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetDomainInfo */

/* 2070 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2072 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2076 */	NdrFcShort( 0x1d ),	/* 29 */
/* 2078 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 2080 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2082 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2084 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2086 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 2088 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2090 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2092 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2094 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2096 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2098 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2100 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2102 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2104 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 2106 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2108 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2110 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 2112 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2114 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2116 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 2118 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 2120 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2122 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter Level */

/* 2124 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2126 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2128 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter WkstaBuffer */

/* 2130 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2132 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2134 */	NdrFcShort( 0x12b6 ),	/* Type Offset=4790 */

	/* Parameter DomBuffer */

/* 2136 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2138 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2140 */	NdrFcShort( 0x1368 ),	/* Type Offset=4968 */

	/* Return value */

/* 2142 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2144 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2146 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordSet2 */

/* 2148 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2150 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2154 */	NdrFcShort( 0x1e ),	/* 30 */
/* 2156 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 2158 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2160 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2162 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2164 */	NdrFcShort( 0x28e ),	/* 654 */
/* 2166 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2168 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2170 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2172 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2174 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2176 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2178 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2180 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2182 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2184 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2186 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2188 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 2190 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2192 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2194 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 2196 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2198 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2200 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2202 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2204 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2206 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 2208 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2210 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2212 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ClearNewPassword */

/* 2214 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2216 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2218 */	NdrFcShort( 0x1558 ),	/* Type Offset=5464 */

	/* Return value */

/* 2220 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2222 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2224 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordGet */

/* 2226 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2228 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2232 */	NdrFcShort( 0x1f ),	/* 31 */
/* 2234 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 2236 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2238 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2240 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2242 */	NdrFcShort( 0x56 ),	/* 86 */
/* 2244 */	NdrFcShort( 0xcc ),	/* 204 */
/* 2246 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2248 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2250 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2252 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2254 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2256 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2258 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2260 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2262 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2264 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2266 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter AccountType */

/* 2268 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2270 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2272 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 2274 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2276 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2278 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2280 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2282 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2284 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 2286 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2288 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2290 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter EncryptedNtOwfPassword */

/* 2292 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2294 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2296 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Return value */

/* 2298 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2300 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2302 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSendToSam */

/* 2304 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2306 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2310 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2312 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2314 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2316 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2318 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2320 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2322 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2324 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 2326 */	0x8,		/* 8 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2328 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2330 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2332 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2334 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2336 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2338 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 2340 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2342 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2344 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2346 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2348 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2350 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 2352 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2354 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2356 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter OpaqueBuffer */

/* 2358 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2360 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2362 */	NdrFcShort( 0x11ee ),	/* Type Offset=4590 */

	/* Parameter OpaqueBufferSize */

/* 2364 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2366 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2368 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 2370 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2372 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2374 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrAddressToSiteNamesW */

/* 2376 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2378 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2382 */	NdrFcShort( 0x21 ),	/* 33 */
/* 2384 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2386 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2388 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2390 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2392 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2394 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2396 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2398 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2400 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2402 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2404 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2406 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2408 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2410 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter EntryCount */

/* 2412 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 2414 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2416 */	NdrFcShort( 0x1566 ),	/* 5478 */

	/* Parameter SocketAddresses */

/* 2418 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2420 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2422 */	NdrFcShort( 0x1594 ),	/* Type Offset=5524 */

	/* Parameter SiteNames */

/* 2424 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2426 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2428 */	NdrFcShort( 0x15b6 ),	/* Type Offset=5558 */

	/* Return value */

/* 2430 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2432 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2434 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcNameEx2 */

/* 2436 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2438 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2442 */	NdrFcShort( 0x22 ),	/* 34 */
/* 2444 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 2446 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2448 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2450 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2452 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2454 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2456 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 2458 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2460 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2462 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2464 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2466 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2468 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2470 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2472 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2474 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2476 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AllowableAccountControlBits */

/* 2478 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2480 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2482 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainName */

/* 2484 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2486 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2488 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 2490 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2492 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2494 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter SiteName */

/* 2496 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2498 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2500 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2502 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2504 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2506 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 2508 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2510 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2512 */	NdrFcShort( 0x1230 ),	/* Type Offset=4656 */

	/* Return value */

/* 2514 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2516 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 2518 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetTimeServiceParentDomain */

/* 2520 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2522 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2526 */	NdrFcShort( 0x23 ),	/* 35 */
/* 2528 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2530 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2532 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2534 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2536 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2538 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2540 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2542 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2544 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2546 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2548 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2550 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2552 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2554 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 2556 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2558 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2560 */	NdrFcShort( 0x1124 ),	/* Type Offset=4388 */

	/* Parameter PdcSameSite */

/* 2562 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 2564 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2566 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 2568 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2570 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2572 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrEnumerateTrustedDomainsEx */

/* 2574 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2576 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2580 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2582 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2584 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2586 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2588 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2590 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2592 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2594 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2596 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2598 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2600 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2602 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2604 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2606 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2608 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Domains */

/* 2610 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2612 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2614 */	NdrFcShort( 0x163a ),	/* Type Offset=5690 */

	/* Return value */

/* 2616 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2618 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2620 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrAddressToSiteNamesExW */

/* 2622 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2624 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2628 */	NdrFcShort( 0x25 ),	/* 37 */
/* 2630 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2632 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2634 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2636 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2638 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2640 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2642 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2644 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2646 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2648 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2650 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2652 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2654 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2656 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter EntryCount */

/* 2658 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 2660 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2662 */	NdrFcShort( 0x164e ),	/* 5710 */

	/* Parameter SocketAddresses */

/* 2664 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2666 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2668 */	NdrFcShort( 0x1594 ),	/* Type Offset=5524 */

	/* Parameter SiteNames */

/* 2670 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2672 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2674 */	NdrFcShort( 0x1658 ),	/* Type Offset=5720 */

	/* Return value */

/* 2676 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2678 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2680 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcSiteCoverageW */

/* 2682 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2684 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2688 */	NdrFcShort( 0x26 ),	/* 38 */
/* 2690 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2692 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2694 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2696 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2698 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2700 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2702 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2704 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2706 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2708 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2710 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2712 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2714 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2716 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter SiteNames */

/* 2718 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2720 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2722 */	NdrFcShort( 0x15b6 ),	/* Type Offset=5558 */

	/* Return value */

/* 2724 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2726 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2728 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogonEx */

/* 2730 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2732 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2736 */	NdrFcShort( 0x27 ),	/* 39 */
/* 2738 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 2740 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 2742 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2744 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2746 */	NdrFcShort( 0x3d ),	/* 61 */
/* 2748 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 2750 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2752 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2754 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2756 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ContextHandle */

/* 2758 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2760 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2762 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter LogonServer */

/* 2764 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2766 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2768 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 2770 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2772 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2774 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonLevel */

/* 2776 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2778 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2780 */	NdrFcShort( 0x1684 ),	/* Type Offset=5764 */

	/* Parameter LogonInformation */

/* 2782 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2784 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2786 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationLevel */

/* 2788 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2790 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2792 */	NdrFcShort( 0x1692 ),	/* Type Offset=5778 */

	/* Parameter ValidationInformation */

/* 2794 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 2796 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 2798 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter Authoritative */

/* 2800 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 2802 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 2804 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ExtraFlags */

/* 2806 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2808 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 2810 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrEnumerateDomainTrusts */


	/* Return value */

/* 2812 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2814 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2818 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2820 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2822 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2824 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2826 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2828 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2830 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2832 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2834 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2836 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2838 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2840 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2842 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2844 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2846 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2848 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2850 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2852 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Domains */

/* 2854 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2856 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2858 */	NdrFcShort( 0x163a ),	/* Type Offset=5690 */

	/* Return value */

/* 2860 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2862 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2864 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrDeregisterDnsHostRecords */

/* 2866 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2868 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2872 */	NdrFcShort( 0x29 ),	/* 41 */
/* 2874 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 2876 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2878 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2880 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2882 */	NdrFcShort( 0x88 ),	/* 136 */
/* 2884 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2886 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 2888 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2890 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2892 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2894 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2896 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2898 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2900 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DnsDomainName */

/* 2902 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2904 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2906 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 2908 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2910 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2912 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter DsaGuid */

/* 2914 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2916 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2918 */	NdrFcShort( 0x121a ),	/* Type Offset=4634 */

	/* Parameter DnsHostName */

/* 2920 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2922 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2924 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Return value */

/* 2926 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2928 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2930 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerTrustPasswordsGet */

/* 2932 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2934 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2938 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2940 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 2942 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 2944 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2946 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2948 */	NdrFcShort( 0x56 ),	/* 86 */
/* 2950 */	NdrFcShort( 0x140 ),	/* 320 */
/* 2952 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 2954 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2956 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2958 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2960 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDcName */

/* 2962 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2964 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 2966 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2968 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2970 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 2972 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 2974 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2976 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 2978 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 2980 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2982 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 2984 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2986 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2988 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 2990 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 2992 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2994 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 2996 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter EncryptedNewOwfPassword */

/* 2998 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3000 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3002 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Parameter EncryptedOldOwfPassword */

/* 3004 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3006 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3008 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Return value */

/* 3010 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3012 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 3014 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetForestTrustInformation */

/* 3016 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3018 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3022 */	NdrFcShort( 0x2b ),	/* 43 */
/* 3024 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3026 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3028 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3030 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3032 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3034 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3036 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 3038 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3040 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3042 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3044 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3046 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3048 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3050 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter TrustedDomainName */

/* 3052 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3054 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3056 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 3058 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3060 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3062 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3064 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3066 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3068 */	NdrFcShort( 0x169c ),	/* Type Offset=5788 */

	/* Return value */

/* 3070 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3072 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3074 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetForestTrustInformation */

/* 3076 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3078 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3082 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3084 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3086 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3088 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3090 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3092 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3094 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3096 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 3098 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3100 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3102 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3104 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3106 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3108 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3110 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3112 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3114 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3116 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3118 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3120 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3122 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 3124 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3126 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3128 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter Flags */

/* 3130 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3132 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3134 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3136 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3138 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3140 */	NdrFcShort( 0x169c ),	/* Type Offset=5788 */

	/* Return value */

/* 3142 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3144 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3146 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogonWithFlags */

/* 3148 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3150 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3154 */	NdrFcShort( 0x2d ),	/* 45 */
/* 3156 */	NdrFcShort( 0x2c ),	/* x86 Stack size/offset = 44 */
/* 3158 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3160 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3162 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3164 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 3166 */	NdrFcShort( 0x8d ),	/* 141 */
/* 3168 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xb,		/* 11 */
/* 3170 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3172 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3174 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3176 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 3178 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3180 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3182 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3184 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3186 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3188 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 3190 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 3192 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3194 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3196 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 3198 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3200 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter LogonLevel */

/* 3202 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3204 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3206 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 3208 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3210 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3212 */	NdrFcShort( 0x176a ),	/* Type Offset=5994 */

	/* Parameter ValidationLevel */

/* 3214 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3216 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3218 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationInformation */

/* 3220 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 3222 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3224 */	NdrFcShort( 0x1778 ),	/* Type Offset=6008 */

	/* Parameter Authoritative */

/* 3226 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 3228 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 3230 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter ExtraFlags */

/* 3232 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3234 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 3236 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 3238 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3240 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 3242 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerGetTrustInfo */

/* 3244 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3246 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3250 */	NdrFcShort( 0x2e ),	/* 46 */
/* 3252 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 3254 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3256 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3258 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3260 */	NdrFcShort( 0x56 ),	/* 86 */
/* 3262 */	NdrFcShort( 0x140 ),	/* 320 */
/* 3264 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3266 */	0x8,		/* 8 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3268 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3270 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3272 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDcName */

/* 3274 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3276 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3278 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 3280 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3282 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3284 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 3286 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3288 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3290 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 3292 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3294 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3296 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3298 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3300 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3302 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 3304 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3306 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3308 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter EncryptedNewOwfPassword */

/* 3310 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3312 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3314 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Parameter EncryptedOldOwfPassword */

/* 3316 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3318 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3320 */	NdrFcShort( 0xd4 ),	/* Type Offset=212 */

	/* Parameter TrustInfo */

/* 3322 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3324 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 3326 */	NdrFcShort( 0x1782 ),	/* Type Offset=6018 */

	/* Return value */

/* 3328 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3330 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 3332 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure OpnumUnused47 */

/* 3334 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3336 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3340 */	NdrFcShort( 0x2f ),	/* 47 */
/* 3342 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3344 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3346 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3348 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3350 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3352 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x1,		/* 1 */
/* 3354 */	0x8,		/* 8 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3356 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3358 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3360 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter IDL_handle */

/* 3362 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3364 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3366 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrUpdateReadOnlyServerDnsRecords */


	/* Return value */

/* 3368 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3370 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3374 */	NdrFcShort( 0x30 ),	/* 48 */
/* 3376 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 3378 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3380 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3382 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3384 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3386 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3388 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 3390 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3392 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3394 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3396 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3398 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3400 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3402 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3404 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3406 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3408 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3410 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3412 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3414 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 3416 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3418 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3420 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter SiteName */

/* 3422 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3424 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3426 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DnsTtl */

/* 3428 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3430 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3432 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DnsNames */

/* 3434 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3436 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3438 */	NdrFcShort( 0x17ec ),	/* Type Offset=6124 */

	/* Return value */

/* 3440 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3442 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3444 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrChainSetClientAttributes */

/* 3446 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3448 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3452 */	NdrFcShort( 0x31 ),	/* 49 */
/* 3454 */	NdrFcShort( 0x28 ),	/* x86 Stack size/offset = 40 */
/* 3456 */	0x31,		/* FC_BIND_GENERIC */
			0x4,		/* 4 */
/* 3458 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3460 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3462 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 3464 */	NdrFcShort( 0x74 ),	/* 116 */
/* 3466 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3468 */	0x8,		/* 8 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3470 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3472 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3474 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 3476 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3478 */	NdrFcShort( 0x0 ),	/* x86 Stack size/offset = 0 */
/* 3480 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ChainedFromServerName */

/* 3482 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3484 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 3486 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ChainedForClientName */

/* 3488 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3490 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 3492 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3494 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3496 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 3498 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter ReturnAuthenticator */

/* 3500 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 3502 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 3504 */	NdrFcShort( 0x76 ),	/* Type Offset=118 */

	/* Parameter dwInVersion */

/* 3506 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3508 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 3510 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter pmsgIn */

/* 3512 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3514 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 3516 */	NdrFcShort( 0x1804 ),	/* Type Offset=6148 */

	/* Parameter pdwOutVersion */

/* 3518 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3520 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 3522 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter pmsgOut */

/* 3524 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3526 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 3528 */	NdrFcShort( 0x1862 ),	/* Type Offset=6242 */

	/* Return value */

/* 3530 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3532 */	NdrFcShort( 0x24 ),	/* x86 Stack size/offset = 36 */
/* 3534 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

			0x0
";


        // NRPC type format string generated by midl
        private const string X86_TYPE_FORMAT_STRING = @"
		NdrFcShort( 0x0 ),	/* 0 */
/*  2 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/*  4 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/*  6 */	
			0x11, 0x8,	/* FC_RP [simple_pointer] */
/*  8 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 10 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 12 */	NdrFcShort( 0x2 ),	/* Offset= 2 (14) */
/* 14 */	
			0x12, 0x0,	/* FC_UP */
/* 16 */	NdrFcShort( 0x2 ),	/* Offset= 2 (18) */
/* 18 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 20 */	NdrFcShort( 0x40 ),	/* 64 */
/* 22 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 24 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 26 */	NdrFcShort( 0x0 ),	/* 0 */
/* 28 */	NdrFcShort( 0x0 ),	/* 0 */
/* 30 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 32 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 34 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 36 */	NdrFcShort( 0x30 ),	/* 48 */
/* 38 */	NdrFcShort( 0x30 ),	/* 48 */
/* 40 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 42 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 44 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 46 */	NdrFcShort( 0x34 ),	/* 52 */
/* 48 */	NdrFcShort( 0x34 ),	/* 52 */
/* 50 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 52 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 54 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 56 */	NdrFcShort( 0x38 ),	/* 56 */
/* 58 */	NdrFcShort( 0x38 ),	/* 56 */
/* 60 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 62 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 64 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 66 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 68 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 70 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 72 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 74 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 76 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 78 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 80 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 82 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 84 */	NdrFcShort( 0x2 ),	/* Offset= 2 (86) */
/* 86 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 88 */	NdrFcShort( 0x8 ),	/* 8 */
/* 90 */	NdrFcShort( 0x0 ),	/* 0 */
/* 92 */	NdrFcShort( 0x0 ),	/* Offset= 0 (92) */
/* 94 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 96 */	0x3e,		/* FC_STRUCTPAD2 */
			0x5b,		/* FC_END */
/* 98 */	
			0x12, 0x0,	/* FC_UP */
/* 100 */	NdrFcShort( 0x12 ),	/* Offset= 18 (118) */
/* 102 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 104 */	NdrFcShort( 0x8 ),	/* 8 */
/* 106 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 108 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 110 */	NdrFcShort( 0x8 ),	/* 8 */
/* 112 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 114 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (102) */
/* 116 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 118 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 120 */	NdrFcShort( 0xc ),	/* 12 */
/* 122 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 124 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (108) */
/* 126 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 128 */	
			0x11, 0x0,	/* FC_RP */
/* 130 */	NdrFcShort( 0x2 ),	/* Offset= 2 (132) */
/* 132 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 134 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 136 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 138 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 140 */	NdrFcShort( 0x2 ),	/* Offset= 2 (142) */
/* 142 */	NdrFcShort( 0x4 ),	/* 4 */
/* 144 */	NdrFcShort( 0x3007 ),	/* 12295 */
/* 146 */	NdrFcLong( 0x1 ),	/* 1 */
/* 150 */	NdrFcShort( 0x28 ),	/* Offset= 40 (190) */
/* 152 */	NdrFcLong( 0x5 ),	/* 5 */
/* 156 */	NdrFcShort( 0x22 ),	/* Offset= 34 (190) */
/* 158 */	NdrFcLong( 0x3 ),	/* 3 */
/* 162 */	NdrFcShort( 0x1c ),	/* Offset= 28 (190) */
/* 164 */	NdrFcLong( 0x7 ),	/* 7 */
/* 168 */	NdrFcShort( 0x16 ),	/* Offset= 22 (190) */
/* 170 */	NdrFcLong( 0x2 ),	/* 2 */
/* 174 */	NdrFcShort( 0xa2 ),	/* Offset= 162 (336) */
/* 176 */	NdrFcLong( 0x6 ),	/* 6 */
/* 180 */	NdrFcShort( 0x9c ),	/* Offset= 156 (336) */
/* 182 */	NdrFcLong( 0x4 ),	/* 4 */
/* 186 */	NdrFcShort( 0x110 ),	/* Offset= 272 (458) */
/* 188 */	NdrFcShort( 0x0 ),	/* Offset= 0 (188) */
/* 190 */	
			0x12, 0x0,	/* FC_UP */
/* 192 */	NdrFcShort( 0x54 ),	/* Offset= 84 (276) */
/* 194 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 196 */	NdrFcShort( 0x8 ),	/* 8 */
/* 198 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 200 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 202 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 204 */	NdrFcShort( 0x10 ),	/* 16 */
/* 206 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 208 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (108) */
/* 210 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 212 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 214 */	NdrFcShort( 0x10 ),	/* 16 */
/* 216 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 218 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (202) */
/* 220 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 222 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 224 */	NdrFcShort( 0x2 ),	/* 2 */
/* 226 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 228 */	NdrFcShort( 0x2 ),	/* 2 */
/* 230 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 232 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 234 */	NdrFcShort( 0x0 ),	/* 0 */
/* 236 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 238 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 240 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 242 */	NdrFcShort( 0x2 ),	/* 2 */
/* 244 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 246 */	NdrFcShort( 0x16 ),	/* 22 */
/* 248 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 250 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 252 */	NdrFcShort( 0x14 ),	/* 20 */
/* 254 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 256 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 258 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 260 */	NdrFcShort( 0x2 ),	/* 2 */
/* 262 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 264 */	NdrFcShort( 0x1e ),	/* 30 */
/* 266 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 268 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 270 */	NdrFcShort( 0x1c ),	/* 28 */
/* 272 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 274 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 276 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 278 */	NdrFcShort( 0x44 ),	/* 68 */
/* 280 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 282 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 284 */	NdrFcShort( 0x4 ),	/* 4 */
/* 286 */	NdrFcShort( 0x4 ),	/* 4 */
/* 288 */	0x12, 0x0,	/* FC_UP */
/* 290 */	NdrFcShort( 0xffbc ),	/* Offset= -68 (222) */
/* 292 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 294 */	NdrFcShort( 0x18 ),	/* 24 */
/* 296 */	NdrFcShort( 0x18 ),	/* 24 */
/* 298 */	0x12, 0x0,	/* FC_UP */
/* 300 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (240) */
/* 302 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 304 */	NdrFcShort( 0x20 ),	/* 32 */
/* 306 */	NdrFcShort( 0x20 ),	/* 32 */
/* 308 */	0x12, 0x0,	/* FC_UP */
/* 310 */	NdrFcShort( 0xffcc ),	/* Offset= -52 (258) */
/* 312 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 314 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 316 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 318 */	0x0,		/* 0 */
			NdrFcShort( 0xff83 ),	/* Offset= -125 (194) */
			0x6,		/* FC_SHORT */
/* 322 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 324 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 326 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 328 */	0x0,		/* 0 */
			NdrFcShort( 0xff8b ),	/* Offset= -117 (212) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 332 */	0x0,		/* 0 */
			NdrFcShort( 0xff87 ),	/* Offset= -121 (212) */
			0x5b,		/* FC_END */
/* 336 */	
			0x12, 0x0,	/* FC_UP */
/* 338 */	NdrFcShort( 0x26 ),	/* Offset= 38 (376) */
/* 340 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 342 */	NdrFcShort( 0x1 ),	/* 1 */
/* 344 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 346 */	NdrFcShort( 0x2e ),	/* 46 */
/* 348 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 350 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 352 */	NdrFcShort( 0x2c ),	/* 44 */
/* 354 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 356 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 358 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 360 */	NdrFcShort( 0x1 ),	/* 1 */
/* 362 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 364 */	NdrFcShort( 0x36 ),	/* 54 */
/* 366 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 368 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 370 */	NdrFcShort( 0x34 ),	/* 52 */
/* 372 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 374 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 376 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 378 */	NdrFcShort( 0x3c ),	/* 60 */
/* 380 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 382 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 384 */	NdrFcShort( 0x4 ),	/* 4 */
/* 386 */	NdrFcShort( 0x4 ),	/* 4 */
/* 388 */	0x12, 0x0,	/* FC_UP */
/* 390 */	NdrFcShort( 0xff58 ),	/* Offset= -168 (222) */
/* 392 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 394 */	NdrFcShort( 0x18 ),	/* 24 */
/* 396 */	NdrFcShort( 0x18 ),	/* 24 */
/* 398 */	0x12, 0x0,	/* FC_UP */
/* 400 */	NdrFcShort( 0xff60 ),	/* Offset= -160 (240) */
/* 402 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 404 */	NdrFcShort( 0x20 ),	/* 32 */
/* 406 */	NdrFcShort( 0x20 ),	/* 32 */
/* 408 */	0x12, 0x0,	/* FC_UP */
/* 410 */	NdrFcShort( 0xff68 ),	/* Offset= -152 (258) */
/* 412 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 414 */	NdrFcShort( 0x30 ),	/* 48 */
/* 416 */	NdrFcShort( 0x30 ),	/* 48 */
/* 418 */	0x12, 0x0,	/* FC_UP */
/* 420 */	NdrFcShort( 0xffb0 ),	/* Offset= -80 (340) */
/* 422 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 424 */	NdrFcShort( 0x38 ),	/* 56 */
/* 426 */	NdrFcShort( 0x38 ),	/* 56 */
/* 428 */	0x12, 0x0,	/* FC_UP */
/* 430 */	NdrFcShort( 0xffb8 ),	/* Offset= -72 (358) */
/* 432 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 434 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 436 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 438 */	0x0,		/* 0 */
			NdrFcShort( 0xff0b ),	/* Offset= -245 (194) */
			0x6,		/* FC_SHORT */
/* 442 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 444 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 446 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 448 */	0x0,		/* 0 */
			NdrFcShort( 0xfeab ),	/* Offset= -341 (108) */
			0x6,		/* FC_SHORT */
/* 452 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 454 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 456 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 458 */	
			0x12, 0x0,	/* FC_UP */
/* 460 */	NdrFcShort( 0x20 ),	/* Offset= 32 (492) */
/* 462 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 464 */	NdrFcShort( 0x2 ),	/* 2 */
/* 466 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 468 */	NdrFcShort( 0x26 ),	/* 38 */
/* 470 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 472 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 474 */	NdrFcShort( 0x24 ),	/* 36 */
/* 476 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 478 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 480 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 482 */	NdrFcShort( 0x1 ),	/* 1 */
/* 484 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 486 */	NdrFcShort( 0x2c ),	/* 44 */
/* 488 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 490 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 492 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 494 */	NdrFcShort( 0x34 ),	/* 52 */
/* 496 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 498 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 500 */	NdrFcShort( 0x4 ),	/* 4 */
/* 502 */	NdrFcShort( 0x4 ),	/* 4 */
/* 504 */	0x12, 0x0,	/* FC_UP */
/* 506 */	NdrFcShort( 0xfee4 ),	/* Offset= -284 (222) */
/* 508 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 510 */	NdrFcShort( 0x18 ),	/* 24 */
/* 512 */	NdrFcShort( 0x18 ),	/* 24 */
/* 514 */	0x12, 0x0,	/* FC_UP */
/* 516 */	NdrFcShort( 0xfeec ),	/* Offset= -276 (240) */
/* 518 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 520 */	NdrFcShort( 0x20 ),	/* 32 */
/* 522 */	NdrFcShort( 0x20 ),	/* 32 */
/* 524 */	0x12, 0x0,	/* FC_UP */
/* 526 */	NdrFcShort( 0xfef4 ),	/* Offset= -268 (258) */
/* 528 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 530 */	NdrFcShort( 0x28 ),	/* 40 */
/* 532 */	NdrFcShort( 0x28 ),	/* 40 */
/* 534 */	0x12, 0x0,	/* FC_UP */
/* 536 */	NdrFcShort( 0xffb6 ),	/* Offset= -74 (462) */
/* 538 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 540 */	NdrFcShort( 0x30 ),	/* 48 */
/* 542 */	NdrFcShort( 0x30 ),	/* 48 */
/* 544 */	0x12, 0x0,	/* FC_UP */
/* 546 */	NdrFcShort( 0xffbe ),	/* Offset= -66 (480) */
/* 548 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 550 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 552 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 554 */	0x0,		/* 0 */
			NdrFcShort( 0xfe97 ),	/* Offset= -361 (194) */
			0x6,		/* FC_SHORT */
/* 558 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 560 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 562 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 564 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 566 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 568 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 570 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 572 */	NdrFcShort( 0x2 ),	/* Offset= 2 (574) */
/* 574 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 576 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 578 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 580 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 582 */	NdrFcShort( 0x2 ),	/* Offset= 2 (584) */
/* 584 */	NdrFcShort( 0x4 ),	/* 4 */
/* 586 */	NdrFcShort( 0x3004 ),	/* 12292 */
/* 588 */	NdrFcLong( 0x2 ),	/* 2 */
/* 592 */	NdrFcShort( 0x16 ),	/* Offset= 22 (614) */
/* 594 */	NdrFcLong( 0x3 ),	/* 3 */
/* 598 */	NdrFcShort( 0x190 ),	/* Offset= 400 (998) */
/* 600 */	NdrFcLong( 0x5 ),	/* 5 */
/* 604 */	NdrFcShort( 0x27c ),	/* Offset= 636 (1240) */
/* 606 */	NdrFcLong( 0x6 ),	/* 6 */
/* 610 */	NdrFcShort( 0x29a ),	/* Offset= 666 (1276) */
/* 612 */	NdrFcShort( 0x0 ),	/* Offset= 0 (612) */
/* 614 */	
			0x12, 0x0,	/* FC_UP */
/* 616 */	NdrFcShort( 0xd2 ),	/* Offset= 210 (826) */
/* 618 */	
			0x1d,		/* FC_SMFARRAY */
			0x3,		/* 3 */
/* 620 */	NdrFcShort( 0x28 ),	/* 40 */
/* 622 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 624 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 626 */	NdrFcShort( 0x2 ),	/* 2 */
/* 628 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 630 */	NdrFcShort( 0x32 ),	/* 50 */
/* 632 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 634 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 636 */	NdrFcShort( 0x30 ),	/* 48 */
/* 638 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 640 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 642 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 644 */	NdrFcShort( 0x2 ),	/* 2 */
/* 646 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 648 */	NdrFcShort( 0x3a ),	/* 58 */
/* 650 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 652 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 654 */	NdrFcShort( 0x38 ),	/* 56 */
/* 656 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 658 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 660 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 662 */	NdrFcShort( 0x2 ),	/* 2 */
/* 664 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 666 */	NdrFcShort( 0x42 ),	/* 66 */
/* 668 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 670 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 672 */	NdrFcShort( 0x40 ),	/* 64 */
/* 674 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 676 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 678 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 680 */	NdrFcShort( 0x2 ),	/* 2 */
/* 682 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 684 */	NdrFcShort( 0x4a ),	/* 74 */
/* 686 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 688 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 690 */	NdrFcShort( 0x48 ),	/* 72 */
/* 692 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 694 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 696 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 698 */	NdrFcShort( 0x2 ),	/* 2 */
/* 700 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 702 */	NdrFcShort( 0x52 ),	/* 82 */
/* 704 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 706 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 708 */	NdrFcShort( 0x50 ),	/* 80 */
/* 710 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 712 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 714 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 716 */	NdrFcShort( 0x2 ),	/* 2 */
/* 718 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 720 */	NdrFcShort( 0x5a ),	/* 90 */
/* 722 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 724 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 726 */	NdrFcShort( 0x58 ),	/* 88 */
/* 728 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 730 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 732 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 734 */	NdrFcShort( 0x8 ),	/* 8 */
/* 736 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 738 */	NdrFcShort( 0x6c ),	/* 108 */
/* 740 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 742 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 744 */	NdrFcShort( 0xfdda ),	/* Offset= -550 (194) */
/* 746 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 748 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 750 */	NdrFcShort( 0x2 ),	/* 2 */
/* 752 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 754 */	NdrFcShort( 0x8a ),	/* 138 */
/* 756 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 758 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 760 */	NdrFcShort( 0x88 ),	/* 136 */
/* 762 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 764 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 766 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 768 */	NdrFcShort( 0x2 ),	/* 2 */
/* 770 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 772 */	NdrFcShort( 0x92 ),	/* 146 */
/* 774 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 776 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 778 */	NdrFcShort( 0x90 ),	/* 144 */
/* 780 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 782 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 784 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 786 */	NdrFcShort( 0x6 ),	/* 6 */
/* 788 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 790 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 792 */	NdrFcShort( 0x6 ),	/* 6 */
/* 794 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 796 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (784) */
/* 798 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 800 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 802 */	NdrFcShort( 0x4 ),	/* 4 */
/* 804 */	0x4,		/* Corr desc: FC_USMALL */
			0x0,		/*  */
/* 806 */	NdrFcShort( 0xfff9 ),	/* -7 */
/* 808 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 810 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 812 */	
			0x17,		/* FC_CSTRUCT */
			0x3,		/* 3 */
/* 814 */	NdrFcShort( 0x8 ),	/* 8 */
/* 816 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (800) */
/* 818 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 820 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 822 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (790) */
/* 824 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 826 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 828 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 830 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 832 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 834 */	NdrFcShort( 0x34 ),	/* 52 */
/* 836 */	NdrFcShort( 0x34 ),	/* 52 */
/* 838 */	0x12, 0x0,	/* FC_UP */
/* 840 */	NdrFcShort( 0xff28 ),	/* Offset= -216 (624) */
/* 842 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 844 */	NdrFcShort( 0x3c ),	/* 60 */
/* 846 */	NdrFcShort( 0x3c ),	/* 60 */
/* 848 */	0x12, 0x0,	/* FC_UP */
/* 850 */	NdrFcShort( 0xff30 ),	/* Offset= -208 (642) */
/* 852 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 854 */	NdrFcShort( 0x44 ),	/* 68 */
/* 856 */	NdrFcShort( 0x44 ),	/* 68 */
/* 858 */	0x12, 0x0,	/* FC_UP */
/* 860 */	NdrFcShort( 0xff38 ),	/* Offset= -200 (660) */
/* 862 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 864 */	NdrFcShort( 0x4c ),	/* 76 */
/* 866 */	NdrFcShort( 0x4c ),	/* 76 */
/* 868 */	0x12, 0x0,	/* FC_UP */
/* 870 */	NdrFcShort( 0xff40 ),	/* Offset= -192 (678) */
/* 872 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 874 */	NdrFcShort( 0x54 ),	/* 84 */
/* 876 */	NdrFcShort( 0x54 ),	/* 84 */
/* 878 */	0x12, 0x0,	/* FC_UP */
/* 880 */	NdrFcShort( 0xff48 ),	/* Offset= -184 (696) */
/* 882 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 884 */	NdrFcShort( 0x5c ),	/* 92 */
/* 886 */	NdrFcShort( 0x5c ),	/* 92 */
/* 888 */	0x12, 0x0,	/* FC_UP */
/* 890 */	NdrFcShort( 0xff50 ),	/* Offset= -176 (714) */
/* 892 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 894 */	NdrFcShort( 0x70 ),	/* 112 */
/* 896 */	NdrFcShort( 0x70 ),	/* 112 */
/* 898 */	0x12, 0x0,	/* FC_UP */
/* 900 */	NdrFcShort( 0xff58 ),	/* Offset= -168 (732) */
/* 902 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 904 */	NdrFcShort( 0x8c ),	/* 140 */
/* 906 */	NdrFcShort( 0x8c ),	/* 140 */
/* 908 */	0x12, 0x0,	/* FC_UP */
/* 910 */	NdrFcShort( 0xff5e ),	/* Offset= -162 (748) */
/* 912 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 914 */	NdrFcShort( 0x94 ),	/* 148 */
/* 916 */	NdrFcShort( 0x94 ),	/* 148 */
/* 918 */	0x12, 0x0,	/* FC_UP */
/* 920 */	NdrFcShort( 0xff66 ),	/* Offset= -154 (766) */
/* 922 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 924 */	NdrFcShort( 0x98 ),	/* 152 */
/* 926 */	NdrFcShort( 0x98 ),	/* 152 */
/* 928 */	0x12, 0x0,	/* FC_UP */
/* 930 */	NdrFcShort( 0xff8a ),	/* Offset= -118 (812) */
/* 932 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 934 */	0x0,		/* 0 */
			NdrFcShort( 0xfd1b ),	/* Offset= -741 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 938 */	0x0,		/* 0 */
			NdrFcShort( 0xfd17 ),	/* Offset= -745 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 942 */	0x0,		/* 0 */
			NdrFcShort( 0xfd13 ),	/* Offset= -749 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 946 */	0x0,		/* 0 */
			NdrFcShort( 0xfd0f ),	/* Offset= -753 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 950 */	0x0,		/* 0 */
			NdrFcShort( 0xfd0b ),	/* Offset= -757 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 954 */	0x0,		/* 0 */
			NdrFcShort( 0xfd07 ),	/* Offset= -761 (194) */
			0x6,		/* FC_SHORT */
/* 958 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 960 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 962 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 964 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 966 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 968 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 970 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 972 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 974 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 976 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 978 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 980 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 982 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 984 */	NdrFcShort( 0xfcfc ),	/* Offset= -772 (212) */
/* 986 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 988 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 990 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 992 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 994 */	0x0,		/* 0 */
			NdrFcShort( 0xfe87 ),	/* Offset= -377 (618) */
			0x5b,		/* FC_END */
/* 998 */	
			0x12, 0x0,	/* FC_UP */
/* 1000 */	NdrFcShort( 0x38 ),	/* Offset= 56 (1056) */
/* 1002 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 1004 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1006 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 1008 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1010 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1012 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1014 */	0x12, 0x0,	/* FC_UP */
/* 1016 */	NdrFcShort( 0xff34 ),	/* Offset= -204 (812) */
/* 1018 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 1020 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1022 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 1024 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1026 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1028 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 1030 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1032 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 1034 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 1036 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1038 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1040 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1042 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1044 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1046 */	0x12, 0x0,	/* FC_UP */
/* 1048 */	NdrFcShort( 0xff14 ),	/* Offset= -236 (812) */
/* 1050 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1052 */	0x0,		/* 0 */
			NdrFcShort( 0xffcd ),	/* Offset= -51 (1002) */
			0x5b,		/* FC_END */
/* 1056 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 1058 */	NdrFcShort( 0xcc ),	/* 204 */
/* 1060 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 1062 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1064 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1066 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1068 */	0x12, 0x0,	/* FC_UP */
/* 1070 */	NdrFcShort( 0xfe42 ),	/* Offset= -446 (624) */
/* 1072 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1074 */	NdrFcShort( 0x3c ),	/* 60 */
/* 1076 */	NdrFcShort( 0x3c ),	/* 60 */
/* 1078 */	0x12, 0x0,	/* FC_UP */
/* 1080 */	NdrFcShort( 0xfe4a ),	/* Offset= -438 (642) */
/* 1082 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1084 */	NdrFcShort( 0x44 ),	/* 68 */
/* 1086 */	NdrFcShort( 0x44 ),	/* 68 */
/* 1088 */	0x12, 0x0,	/* FC_UP */
/* 1090 */	NdrFcShort( 0xfe52 ),	/* Offset= -430 (660) */
/* 1092 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1094 */	NdrFcShort( 0x4c ),	/* 76 */
/* 1096 */	NdrFcShort( 0x4c ),	/* 76 */
/* 1098 */	0x12, 0x0,	/* FC_UP */
/* 1100 */	NdrFcShort( 0xfe5a ),	/* Offset= -422 (678) */
/* 1102 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1104 */	NdrFcShort( 0x54 ),	/* 84 */
/* 1106 */	NdrFcShort( 0x54 ),	/* 84 */
/* 1108 */	0x12, 0x0,	/* FC_UP */
/* 1110 */	NdrFcShort( 0xfe62 ),	/* Offset= -414 (696) */
/* 1112 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1114 */	NdrFcShort( 0x5c ),	/* 92 */
/* 1116 */	NdrFcShort( 0x5c ),	/* 92 */
/* 1118 */	0x12, 0x0,	/* FC_UP */
/* 1120 */	NdrFcShort( 0xfe6a ),	/* Offset= -406 (714) */
/* 1122 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1124 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1126 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1128 */	0x12, 0x0,	/* FC_UP */
/* 1130 */	NdrFcShort( 0xfe72 ),	/* Offset= -398 (732) */
/* 1132 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1134 */	NdrFcShort( 0x8c ),	/* 140 */
/* 1136 */	NdrFcShort( 0x8c ),	/* 140 */
/* 1138 */	0x12, 0x0,	/* FC_UP */
/* 1140 */	NdrFcShort( 0xfe78 ),	/* Offset= -392 (748) */
/* 1142 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1144 */	NdrFcShort( 0x94 ),	/* 148 */
/* 1146 */	NdrFcShort( 0x94 ),	/* 148 */
/* 1148 */	0x12, 0x0,	/* FC_UP */
/* 1150 */	NdrFcShort( 0xfe80 ),	/* Offset= -384 (766) */
/* 1152 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1154 */	NdrFcShort( 0x98 ),	/* 152 */
/* 1156 */	NdrFcShort( 0x98 ),	/* 152 */
/* 1158 */	0x12, 0x0,	/* FC_UP */
/* 1160 */	NdrFcShort( 0xfea4 ),	/* Offset= -348 (812) */
/* 1162 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1164 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 1166 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 1168 */	0x12, 0x0,	/* FC_UP */
/* 1170 */	NdrFcShort( 0xff6c ),	/* Offset= -148 (1022) */
/* 1172 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1174 */	0x0,		/* 0 */
			NdrFcShort( 0xfc2b ),	/* Offset= -981 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1178 */	0x0,		/* 0 */
			NdrFcShort( 0xfc27 ),	/* Offset= -985 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1182 */	0x0,		/* 0 */
			NdrFcShort( 0xfc23 ),	/* Offset= -989 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1186 */	0x0,		/* 0 */
			NdrFcShort( 0xfc1f ),	/* Offset= -993 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1190 */	0x0,		/* 0 */
			NdrFcShort( 0xfc1b ),	/* Offset= -997 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1194 */	0x0,		/* 0 */
			NdrFcShort( 0xfc17 ),	/* Offset= -1001 (194) */
			0x6,		/* FC_SHORT */
/* 1198 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1200 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1202 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1204 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1206 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1208 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1210 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1212 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1214 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1216 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1218 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1220 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1222 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1224 */	NdrFcShort( 0xfc0c ),	/* Offset= -1012 (212) */
/* 1226 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1228 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1230 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1232 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1234 */	0x0,		/* 0 */
			NdrFcShort( 0xfd97 ),	/* Offset= -617 (618) */
			0x8,		/* FC_LONG */
/* 1238 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1240 */	
			0x12, 0x0,	/* FC_UP */
/* 1242 */	NdrFcShort( 0xe ),	/* Offset= 14 (1256) */
/* 1244 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1246 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1248 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1250 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1252 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1254 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1256 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 1258 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1260 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 1262 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1264 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1266 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1268 */	0x12, 0x0,	/* FC_UP */
/* 1270 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (1244) */
/* 1272 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 1274 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1276 */	
			0x12, 0x0,	/* FC_UP */
/* 1278 */	NdrFcShort( 0xe0 ),	/* Offset= 224 (1502) */
/* 1280 */	
			0x1d,		/* FC_SMFARRAY */
			0x3,		/* 3 */
/* 1282 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1284 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1286 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1288 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1290 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1292 */	NdrFcShort( 0xce ),	/* 206 */
/* 1294 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1296 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1298 */	NdrFcShort( 0xcc ),	/* 204 */
/* 1300 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1302 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1304 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1306 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1308 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1310 */	NdrFcShort( 0xd6 ),	/* 214 */
/* 1312 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1314 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1316 */	NdrFcShort( 0xd4 ),	/* 212 */
/* 1318 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1320 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1322 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1324 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1326 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1328 */	NdrFcShort( 0xde ),	/* 222 */
/* 1330 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1332 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1334 */	NdrFcShort( 0xdc ),	/* 220 */
/* 1336 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1338 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1340 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1342 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1344 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1346 */	NdrFcShort( 0xe6 ),	/* 230 */
/* 1348 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1350 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1352 */	NdrFcShort( 0xe4 ),	/* 228 */
/* 1354 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1356 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1358 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1360 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1362 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1364 */	NdrFcShort( 0xee ),	/* 238 */
/* 1366 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1368 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1370 */	NdrFcShort( 0xec ),	/* 236 */
/* 1372 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1374 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1376 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1378 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1380 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1382 */	NdrFcShort( 0xf6 ),	/* 246 */
/* 1384 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1386 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1388 */	NdrFcShort( 0xf4 ),	/* 244 */
/* 1390 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1392 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1394 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1396 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1398 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1400 */	NdrFcShort( 0xfe ),	/* 254 */
/* 1402 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1404 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1406 */	NdrFcShort( 0xfc ),	/* 252 */
/* 1408 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1410 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1412 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1414 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1416 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1418 */	NdrFcShort( 0x106 ),	/* 262 */
/* 1420 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1422 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1424 */	NdrFcShort( 0x104 ),	/* 260 */
/* 1426 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1428 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1430 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1432 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1434 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1436 */	NdrFcShort( 0x10e ),	/* 270 */
/* 1438 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1440 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1442 */	NdrFcShort( 0x10c ),	/* 268 */
/* 1444 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1446 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1448 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1450 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1452 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1454 */	NdrFcShort( 0x116 ),	/* 278 */
/* 1456 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1458 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1460 */	NdrFcShort( 0x114 ),	/* 276 */
/* 1462 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1464 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1466 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1468 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1470 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1472 */	NdrFcShort( 0x11e ),	/* 286 */
/* 1474 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1476 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1478 */	NdrFcShort( 0x11c ),	/* 284 */
/* 1480 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1482 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1484 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 1486 */	NdrFcShort( 0x2 ),	/* 2 */
/* 1488 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1490 */	NdrFcShort( 0x126 ),	/* 294 */
/* 1492 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1494 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 1496 */	NdrFcShort( 0x124 ),	/* 292 */
/* 1498 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1500 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 1502 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 1504 */	NdrFcShort( 0x12c ),	/* 300 */
/* 1506 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 1508 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1510 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1512 */	NdrFcShort( 0x34 ),	/* 52 */
/* 1514 */	0x12, 0x0,	/* FC_UP */
/* 1516 */	NdrFcShort( 0xfc84 ),	/* Offset= -892 (624) */
/* 1518 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1520 */	NdrFcShort( 0x3c ),	/* 60 */
/* 1522 */	NdrFcShort( 0x3c ),	/* 60 */
/* 1524 */	0x12, 0x0,	/* FC_UP */
/* 1526 */	NdrFcShort( 0xfc8c ),	/* Offset= -884 (642) */
/* 1528 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1530 */	NdrFcShort( 0x44 ),	/* 68 */
/* 1532 */	NdrFcShort( 0x44 ),	/* 68 */
/* 1534 */	0x12, 0x0,	/* FC_UP */
/* 1536 */	NdrFcShort( 0xfc94 ),	/* Offset= -876 (660) */
/* 1538 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1540 */	NdrFcShort( 0x4c ),	/* 76 */
/* 1542 */	NdrFcShort( 0x4c ),	/* 76 */
/* 1544 */	0x12, 0x0,	/* FC_UP */
/* 1546 */	NdrFcShort( 0xfc9c ),	/* Offset= -868 (678) */
/* 1548 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1550 */	NdrFcShort( 0x54 ),	/* 84 */
/* 1552 */	NdrFcShort( 0x54 ),	/* 84 */
/* 1554 */	0x12, 0x0,	/* FC_UP */
/* 1556 */	NdrFcShort( 0xfca4 ),	/* Offset= -860 (696) */
/* 1558 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1560 */	NdrFcShort( 0x5c ),	/* 92 */
/* 1562 */	NdrFcShort( 0x5c ),	/* 92 */
/* 1564 */	0x12, 0x0,	/* FC_UP */
/* 1566 */	NdrFcShort( 0xfcac ),	/* Offset= -852 (714) */
/* 1568 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1570 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1572 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1574 */	0x12, 0x0,	/* FC_UP */
/* 1576 */	NdrFcShort( 0xfcb4 ),	/* Offset= -844 (732) */
/* 1578 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1580 */	NdrFcShort( 0x8c ),	/* 140 */
/* 1582 */	NdrFcShort( 0x8c ),	/* 140 */
/* 1584 */	0x12, 0x0,	/* FC_UP */
/* 1586 */	NdrFcShort( 0xfcba ),	/* Offset= -838 (748) */
/* 1588 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1590 */	NdrFcShort( 0x94 ),	/* 148 */
/* 1592 */	NdrFcShort( 0x94 ),	/* 148 */
/* 1594 */	0x12, 0x0,	/* FC_UP */
/* 1596 */	NdrFcShort( 0xfcc2 ),	/* Offset= -830 (766) */
/* 1598 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1600 */	NdrFcShort( 0x98 ),	/* 152 */
/* 1602 */	NdrFcShort( 0x98 ),	/* 152 */
/* 1604 */	0x12, 0x0,	/* FC_UP */
/* 1606 */	NdrFcShort( 0xfce6 ),	/* Offset= -794 (812) */
/* 1608 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1610 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 1612 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 1614 */	0x12, 0x0,	/* FC_UP */
/* 1616 */	NdrFcShort( 0xfdae ),	/* Offset= -594 (1022) */
/* 1618 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1620 */	NdrFcShort( 0xd0 ),	/* 208 */
/* 1622 */	NdrFcShort( 0xd0 ),	/* 208 */
/* 1624 */	0x12, 0x0,	/* FC_UP */
/* 1626 */	NdrFcShort( 0xfeac ),	/* Offset= -340 (1286) */
/* 1628 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1630 */	NdrFcShort( 0xd8 ),	/* 216 */
/* 1632 */	NdrFcShort( 0xd8 ),	/* 216 */
/* 1634 */	0x12, 0x0,	/* FC_UP */
/* 1636 */	NdrFcShort( 0xfeb4 ),	/* Offset= -332 (1304) */
/* 1638 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1640 */	NdrFcShort( 0xe0 ),	/* 224 */
/* 1642 */	NdrFcShort( 0xe0 ),	/* 224 */
/* 1644 */	0x12, 0x0,	/* FC_UP */
/* 1646 */	NdrFcShort( 0xfebc ),	/* Offset= -324 (1322) */
/* 1648 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1650 */	NdrFcShort( 0xe8 ),	/* 232 */
/* 1652 */	NdrFcShort( 0xe8 ),	/* 232 */
/* 1654 */	0x12, 0x0,	/* FC_UP */
/* 1656 */	NdrFcShort( 0xfec4 ),	/* Offset= -316 (1340) */
/* 1658 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1660 */	NdrFcShort( 0xf0 ),	/* 240 */
/* 1662 */	NdrFcShort( 0xf0 ),	/* 240 */
/* 1664 */	0x12, 0x0,	/* FC_UP */
/* 1666 */	NdrFcShort( 0xfecc ),	/* Offset= -308 (1358) */
/* 1668 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1670 */	NdrFcShort( 0xf8 ),	/* 248 */
/* 1672 */	NdrFcShort( 0xf8 ),	/* 248 */
/* 1674 */	0x12, 0x0,	/* FC_UP */
/* 1676 */	NdrFcShort( 0xfed4 ),	/* Offset= -300 (1376) */
/* 1678 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1680 */	NdrFcShort( 0x100 ),	/* 256 */
/* 1682 */	NdrFcShort( 0x100 ),	/* 256 */
/* 1684 */	0x12, 0x0,	/* FC_UP */
/* 1686 */	NdrFcShort( 0xfedc ),	/* Offset= -292 (1394) */
/* 1688 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1690 */	NdrFcShort( 0x108 ),	/* 264 */
/* 1692 */	NdrFcShort( 0x108 ),	/* 264 */
/* 1694 */	0x12, 0x0,	/* FC_UP */
/* 1696 */	NdrFcShort( 0xfee4 ),	/* Offset= -284 (1412) */
/* 1698 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1700 */	NdrFcShort( 0x110 ),	/* 272 */
/* 1702 */	NdrFcShort( 0x110 ),	/* 272 */
/* 1704 */	0x12, 0x0,	/* FC_UP */
/* 1706 */	NdrFcShort( 0xfeec ),	/* Offset= -276 (1430) */
/* 1708 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1710 */	NdrFcShort( 0x118 ),	/* 280 */
/* 1712 */	NdrFcShort( 0x118 ),	/* 280 */
/* 1714 */	0x12, 0x0,	/* FC_UP */
/* 1716 */	NdrFcShort( 0xfef4 ),	/* Offset= -268 (1448) */
/* 1718 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1720 */	NdrFcShort( 0x120 ),	/* 288 */
/* 1722 */	NdrFcShort( 0x120 ),	/* 288 */
/* 1724 */	0x12, 0x0,	/* FC_UP */
/* 1726 */	NdrFcShort( 0xfefc ),	/* Offset= -260 (1466) */
/* 1728 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 1730 */	NdrFcShort( 0x128 ),	/* 296 */
/* 1732 */	NdrFcShort( 0x128 ),	/* 296 */
/* 1734 */	0x12, 0x0,	/* FC_UP */
/* 1736 */	NdrFcShort( 0xff04 ),	/* Offset= -252 (1484) */
/* 1738 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1740 */	0x0,		/* 0 */
			NdrFcShort( 0xf9f5 ),	/* Offset= -1547 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1744 */	0x0,		/* 0 */
			NdrFcShort( 0xf9f1 ),	/* Offset= -1551 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1748 */	0x0,		/* 0 */
			NdrFcShort( 0xf9ed ),	/* Offset= -1555 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1752 */	0x0,		/* 0 */
			NdrFcShort( 0xf9e9 ),	/* Offset= -1559 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1756 */	0x0,		/* 0 */
			NdrFcShort( 0xf9e5 ),	/* Offset= -1563 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1760 */	0x0,		/* 0 */
			NdrFcShort( 0xf9e1 ),	/* Offset= -1567 (194) */
			0x6,		/* FC_SHORT */
/* 1764 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1766 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1768 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1770 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1772 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1774 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1776 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1778 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1780 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1782 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1784 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1786 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1788 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1790 */	NdrFcShort( 0xf9d6 ),	/* Offset= -1578 (212) */
/* 1792 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1794 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1796 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1798 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1800 */	0x0,		/* 0 */
			NdrFcShort( 0xf95d ),	/* Offset= -1699 (102) */
			0x8,		/* FC_LONG */
/* 1804 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1806 */	0x0,		/* 0 */
			NdrFcShort( 0xf9b3 ),	/* Offset= -1613 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1810 */	0x0,		/* 0 */
			NdrFcShort( 0xf9af ),	/* Offset= -1617 (194) */
			0x8,		/* FC_LONG */
/* 1814 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1816 */	NdrFcShort( 0xfde8 ),	/* Offset= -536 (1280) */
/* 1818 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1820 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1822 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1824 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1826 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1828 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1830 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1832 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1834 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1836 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1838 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1840 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1842 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1844 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1846 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1848 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1850 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1852 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 1854 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 1856 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1858 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 1860 */	0x2,		/* FC_CHAR */
			0x5c,		/* FC_PAD */
/* 1862 */	
			0x11, 0x0,	/* FC_RP */
/* 1864 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1866) */
/* 1866 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1868 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 1870 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 1872 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1874 */	NdrFcShort( 0xf93c ),	/* Offset= -1732 (142) */
/* 1876 */	
			0x11, 0x0,	/* FC_RP */
/* 1878 */	NdrFcShort( 0xf916 ),	/* Offset= -1770 (108) */
/* 1880 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 1882 */	NdrFcShort( 0xf912 ),	/* Offset= -1774 (108) */
/* 1884 */	
			0x11, 0x0,	/* FC_RP */
/* 1886 */	NdrFcShort( 0xf918 ),	/* Offset= -1768 (118) */
/* 1888 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 1890 */	NdrFcShort( 0xf914 ),	/* Offset= -1772 (118) */
/* 1892 */	
			0x11, 0x0,	/* FC_RP */
/* 1894 */	NdrFcShort( 0xf96e ),	/* Offset= -1682 (212) */
/* 1896 */	
			0x11, 0x0,	/* FC_RP */
/* 1898 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1900) */
/* 1900 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 1902 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1904 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1906 */	NdrFcShort( 0xf950 ),	/* Offset= -1712 (194) */
/* 1908 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1910 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 1912 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1914) */
/* 1914 */	
			0x12, 0x0,	/* FC_UP */
/* 1916 */	NdrFcShort( 0x952 ),	/* Offset= 2386 (4302) */
/* 1918 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1920 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 1922 */	NdrFcShort( 0xfffc ),	/* -4 */
/* 1924 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1926 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1928) */
/* 1928 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1930 */	NdrFcShort( 0x3015 ),	/* 12309 */
/* 1932 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1936 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1938 */	NdrFcLong( 0x2 ),	/* 2 */
/* 1942 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1944 */	NdrFcLong( 0x3 ),	/* 3 */
/* 1948 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1950 */	NdrFcLong( 0x4 ),	/* 4 */
/* 1954 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1956 */	NdrFcLong( 0x5 ),	/* 5 */
/* 1960 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1962 */	NdrFcLong( 0x6 ),	/* 6 */
/* 1966 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1968 */	NdrFcLong( 0x7 ),	/* 7 */
/* 1972 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1974 */	NdrFcLong( 0x8 ),	/* 8 */
/* 1978 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1980 */	NdrFcLong( 0x9 ),	/* 9 */
/* 1984 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1986 */	NdrFcLong( 0xa ),	/* 10 */
/* 1990 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1992 */	NdrFcLong( 0xb ),	/* 11 */
/* 1996 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1998 */	NdrFcLong( 0xc ),	/* 12 */
/* 2002 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 2004 */	NdrFcLong( 0x14 ),	/* 20 */
/* 2008 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 2010 */	NdrFcLong( 0x15 ),	/* 21 */
/* 2014 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 2016 */	NdrFcLong( 0xd ),	/* 13 */
/* 2020 */	NdrFcShort( 0x28 ),	/* Offset= 40 (2060) */
/* 2022 */	NdrFcLong( 0xe ),	/* 14 */
/* 2026 */	NdrFcShort( 0x22 ),	/* Offset= 34 (2060) */
/* 2028 */	NdrFcLong( 0xf ),	/* 15 */
/* 2032 */	NdrFcShort( 0x1c ),	/* Offset= 28 (2060) */
/* 2034 */	NdrFcLong( 0x10 ),	/* 16 */
/* 2038 */	NdrFcShort( 0x16 ),	/* Offset= 22 (2060) */
/* 2040 */	NdrFcLong( 0x11 ),	/* 17 */
/* 2044 */	NdrFcShort( 0x10 ),	/* Offset= 16 (2060) */
/* 2046 */	NdrFcLong( 0x12 ),	/* 18 */
/* 2050 */	NdrFcShort( 0xf800 ),	/* Offset= -2048 (2) */
/* 2052 */	NdrFcLong( 0x13 ),	/* 19 */
/* 2056 */	NdrFcShort( 0xf7fa ),	/* Offset= -2054 (2) */
/* 2058 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2058) */
/* 2060 */	
			0x12, 0x0,	/* FC_UP */
/* 2062 */	NdrFcShort( 0xfb1e ),	/* Offset= -1250 (812) */
/* 2064 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 2066 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 2068 */	NdrFcShort( 0xfff8 ),	/* -8 */
/* 2070 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2072 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2074) */
/* 2074 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2076 */	NdrFcShort( 0x3010 ),	/* 12304 */
/* 2078 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2082 */	NdrFcShort( 0x5e ),	/* Offset= 94 (2176) */
/* 2084 */	NdrFcLong( 0x2 ),	/* 2 */
/* 2088 */	NdrFcShort( 0x10a ),	/* Offset= 266 (2354) */
/* 2090 */	NdrFcLong( 0x4 ),	/* 4 */
/* 2094 */	NdrFcShort( 0x1c6 ),	/* Offset= 454 (2548) */
/* 2096 */	NdrFcLong( 0x5 ),	/* 5 */
/* 2100 */	NdrFcShort( 0x254 ),	/* Offset= 596 (2696) */
/* 2102 */	NdrFcLong( 0x7 ),	/* 7 */
/* 2106 */	NdrFcShort( 0x1ba ),	/* Offset= 442 (2548) */
/* 2108 */	NdrFcLong( 0x8 ),	/* 8 */
/* 2112 */	NdrFcShort( 0x3e2 ),	/* Offset= 994 (3106) */
/* 2114 */	NdrFcLong( 0x9 ),	/* 9 */
/* 2118 */	NdrFcShort( 0x410 ),	/* Offset= 1040 (3158) */
/* 2120 */	NdrFcLong( 0xb ),	/* 11 */
/* 2124 */	NdrFcShort( 0x1a8 ),	/* Offset= 424 (2548) */
/* 2126 */	NdrFcLong( 0xc ),	/* 12 */
/* 2130 */	NdrFcShort( 0x470 ),	/* Offset= 1136 (3266) */
/* 2132 */	NdrFcLong( 0xd ),	/* 13 */
/* 2136 */	NdrFcShort( 0x4bc ),	/* Offset= 1212 (3348) */
/* 2138 */	NdrFcLong( 0xe ),	/* 14 */
/* 2142 */	NdrFcShort( 0x5ac ),	/* Offset= 1452 (3594) */
/* 2144 */	NdrFcLong( 0x10 ),	/* 16 */
/* 2148 */	NdrFcShort( 0x654 ),	/* Offset= 1620 (3768) */
/* 2150 */	NdrFcLong( 0x12 ),	/* 18 */
/* 2154 */	NdrFcShort( 0x72c ),	/* Offset= 1836 (3990) */
/* 2156 */	NdrFcLong( 0x14 ),	/* 20 */
/* 2160 */	NdrFcShort( 0x7be ),	/* Offset= 1982 (4142) */
/* 2162 */	NdrFcLong( 0x15 ),	/* 21 */
/* 2166 */	NdrFcShort( 0x7b8 ),	/* Offset= 1976 (4142) */
/* 2168 */	NdrFcLong( 0x16 ),	/* 22 */
/* 2172 */	NdrFcShort( 0x826 ),	/* Offset= 2086 (4258) */
/* 2174 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2174) */
/* 2176 */	
			0x12, 0x0,	/* FC_UP */
/* 2178 */	NdrFcShort( 0x32 ),	/* Offset= 50 (2228) */
/* 2180 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2182 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2184 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2186 */	NdrFcShort( 0xa ),	/* 10 */
/* 2188 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2190 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2192 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2194 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2196 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2198 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2200 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2202 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2204 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2206 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2208 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2210 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2212 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2214 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2216 */	NdrFcShort( 0x62 ),	/* 98 */
/* 2218 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2220 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2222 */	NdrFcShort( 0x60 ),	/* 96 */
/* 2224 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2226 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2228 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 2230 */	NdrFcShort( 0x78 ),	/* 120 */
/* 2232 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 2234 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2236 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2238 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2240 */	0x12, 0x0,	/* FC_UP */
/* 2242 */	NdrFcShort( 0xf81c ),	/* Offset= -2020 (222) */
/* 2244 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2246 */	NdrFcShort( 0xc ),	/* 12 */
/* 2248 */	NdrFcShort( 0xc ),	/* 12 */
/* 2250 */	0x12, 0x0,	/* FC_UP */
/* 2252 */	NdrFcShort( 0xffb8 ),	/* Offset= -72 (2180) */
/* 2254 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2256 */	NdrFcShort( 0x44 ),	/* 68 */
/* 2258 */	NdrFcShort( 0x44 ),	/* 68 */
/* 2260 */	0x12, 0x0,	/* FC_UP */
/* 2262 */	NdrFcShort( 0xffc0 ),	/* Offset= -64 (2198) */
/* 2264 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2266 */	NdrFcShort( 0x4c ),	/* 76 */
/* 2268 */	NdrFcShort( 0x4c ),	/* 76 */
/* 2270 */	0x12, 0x0,	/* FC_UP */
/* 2272 */	NdrFcShort( 0xf9c6 ),	/* Offset= -1594 (678) */
/* 2274 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2276 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2278 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2280 */	0x12, 0x0,	/* FC_UP */
/* 2282 */	NdrFcShort( 0xf9ce ),	/* Offset= -1586 (696) */
/* 2284 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2286 */	NdrFcShort( 0x5c ),	/* 92 */
/* 2288 */	NdrFcShort( 0x5c ),	/* 92 */
/* 2290 */	0x12, 0x0,	/* FC_UP */
/* 2292 */	NdrFcShort( 0xf9d6 ),	/* Offset= -1578 (714) */
/* 2294 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2296 */	NdrFcShort( 0x64 ),	/* 100 */
/* 2298 */	NdrFcShort( 0x64 ),	/* 100 */
/* 2300 */	0x12, 0x0,	/* FC_UP */
/* 2302 */	NdrFcShort( 0xffa4 ),	/* Offset= -92 (2210) */
/* 2304 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 2306 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2308 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2310 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2312 */	0x0,		/* 0 */
			NdrFcShort( 0xf7b9 ),	/* Offset= -2119 (194) */
			0x6,		/* FC_SHORT */
/* 2316 */	0x6,		/* FC_SHORT */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2318 */	0x0,		/* 0 */
			NdrFcShort( 0xf7b3 ),	/* Offset= -2125 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2322 */	0x0,		/* 0 */
			NdrFcShort( 0xf7af ),	/* Offset= -2129 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2326 */	0x0,		/* 0 */
			NdrFcShort( 0xf7ab ),	/* Offset= -2133 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2330 */	0x0,		/* 0 */
			NdrFcShort( 0xf7a7 ),	/* Offset= -2137 (194) */
			0x8,		/* FC_LONG */
/* 2334 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2336 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2338 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2340 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2342 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2344 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2346 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2348 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2350 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2352 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2354 */	
			0x12, 0x0,	/* FC_UP */
/* 2356 */	NdrFcShort( 0x56 ),	/* Offset= 86 (2442) */
/* 2358 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2360 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2362 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2364 */	NdrFcShort( 0x12 ),	/* 18 */
/* 2366 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2368 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2370 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2372 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2374 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2376 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2378 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2380 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2382 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2384 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2386 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2388 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2390 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2392 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2394 */	NdrFcShort( 0x2e ),	/* 46 */
/* 2396 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2398 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2400 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2402 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2404 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2406 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2408 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2410 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2412 */	NdrFcShort( 0x36 ),	/* 54 */
/* 2414 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2416 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2418 */	NdrFcShort( 0x34 ),	/* 52 */
/* 2420 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2422 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2424 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2426 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2428 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2430 */	NdrFcShort( 0x3e ),	/* 62 */
/* 2432 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2434 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2436 */	NdrFcShort( 0x3c ),	/* 60 */
/* 2438 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2440 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2442 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 2444 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2446 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 2448 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2450 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2452 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2454 */	0x12, 0x0,	/* FC_UP */
/* 2456 */	NdrFcShort( 0xf746 ),	/* Offset= -2234 (222) */
/* 2458 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2460 */	NdrFcShort( 0x14 ),	/* 20 */
/* 2462 */	NdrFcShort( 0x14 ),	/* 20 */
/* 2464 */	0x12, 0x0,	/* FC_UP */
/* 2466 */	NdrFcShort( 0xff94 ),	/* Offset= -108 (2358) */
/* 2468 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2470 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2472 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2474 */	0x12, 0x0,	/* FC_UP */
/* 2476 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (2376) */
/* 2478 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2480 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2482 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2484 */	0x12, 0x0,	/* FC_UP */
/* 2486 */	NdrFcShort( 0xf818 ),	/* Offset= -2024 (462) */
/* 2488 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2490 */	NdrFcShort( 0x30 ),	/* 48 */
/* 2492 */	NdrFcShort( 0x30 ),	/* 48 */
/* 2494 */	0x12, 0x0,	/* FC_UP */
/* 2496 */	NdrFcShort( 0xff94 ),	/* Offset= -108 (2388) */
/* 2498 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2500 */	NdrFcShort( 0x38 ),	/* 56 */
/* 2502 */	NdrFcShort( 0x38 ),	/* 56 */
/* 2504 */	0x12, 0x0,	/* FC_UP */
/* 2506 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (2406) */
/* 2508 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2510 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2512 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2514 */	0x12, 0x0,	/* FC_UP */
/* 2516 */	NdrFcShort( 0xffa4 ),	/* Offset= -92 (2424) */
/* 2518 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 2520 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2522 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2524 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2526 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2528 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2530 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2532 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2534 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2536 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2538 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2540 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2542 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2544 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2546 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2548 */	
			0x12, 0x0,	/* FC_UP */
/* 2550 */	NdrFcShort( 0x38 ),	/* Offset= 56 (2606) */
/* 2552 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2554 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2556 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2558 */	NdrFcShort( 0x1a ),	/* 26 */
/* 2560 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2562 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2564 */	NdrFcShort( 0x18 ),	/* 24 */
/* 2566 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2568 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2570 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2572 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2574 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2576 */	NdrFcShort( 0x22 ),	/* 34 */
/* 2578 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2580 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2582 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2584 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2586 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2588 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2590 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2592 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2594 */	NdrFcShort( 0x2a ),	/* 42 */
/* 2596 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2598 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2600 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2602 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2604 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2606 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 2608 */	NdrFcShort( 0x40 ),	/* 64 */
/* 2610 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 2612 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2614 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2616 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2618 */	0x12, 0x0,	/* FC_UP */
/* 2620 */	NdrFcShort( 0xf6a2 ),	/* Offset= -2398 (222) */
/* 2622 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2624 */	NdrFcShort( 0xc ),	/* 12 */
/* 2626 */	NdrFcShort( 0xc ),	/* 12 */
/* 2628 */	0x12, 0x0,	/* FC_UP */
/* 2630 */	NdrFcShort( 0xfe3e ),	/* Offset= -450 (2180) */
/* 2632 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2634 */	NdrFcShort( 0x14 ),	/* 20 */
/* 2636 */	NdrFcShort( 0x14 ),	/* 20 */
/* 2638 */	0x12, 0x0,	/* FC_UP */
/* 2640 */	NdrFcShort( 0xfee6 ),	/* Offset= -282 (2358) */
/* 2642 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2644 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2646 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2648 */	0x12, 0x0,	/* FC_UP */
/* 2650 */	NdrFcShort( 0xff9e ),	/* Offset= -98 (2552) */
/* 2652 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2654 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2656 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2658 */	0x12, 0x0,	/* FC_UP */
/* 2660 */	NdrFcShort( 0xffa6 ),	/* Offset= -90 (2570) */
/* 2662 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2664 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2666 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2668 */	0x12, 0x0,	/* FC_UP */
/* 2670 */	NdrFcShort( 0xffae ),	/* Offset= -82 (2588) */
/* 2672 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 2674 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2676 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2678 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2680 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2682 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2684 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2686 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 2688 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 2690 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2692 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2694 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2696 */	
			0x12, 0x0,	/* FC_UP */
/* 2698 */	NdrFcShort( 0x98 ),	/* Offset= 152 (2850) */
/* 2700 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 2702 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2704 */	0x40,		/* Corr desc:  constant, val=1260 */
			0x0,		/* 0 */
/* 2706 */	NdrFcShort( 0x4ec ),	/* 1260 */
/* 2708 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2710 */	0x10,		/* Corr desc:  field pointer,  */
			0x59,		/* FC_CALLBACK */
/* 2712 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2714 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2716 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2718 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2720 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2722 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2724 */	NdrFcShort( 0x96 ),	/* 150 */
/* 2726 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2728 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2730 */	NdrFcShort( 0x94 ),	/* 148 */
/* 2732 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2734 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2736 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2738 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2740 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2742 */	NdrFcShort( 0x9e ),	/* 158 */
/* 2744 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2746 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2748 */	NdrFcShort( 0x9c ),	/* 156 */
/* 2750 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2752 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2754 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2756 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2758 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2760 */	NdrFcShort( 0xac ),	/* 172 */
/* 2762 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2764 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2766 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2768 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2770 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2772 */	NdrFcShort( 0xb8 ),	/* 184 */
/* 2774 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2776 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2778 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2780 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2782 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2784 */	NdrFcShort( 0xc2 ),	/* 194 */
/* 2786 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2788 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2790 */	NdrFcShort( 0xc0 ),	/* 192 */
/* 2792 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2794 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2796 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2798 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2800 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2802 */	NdrFcShort( 0xca ),	/* 202 */
/* 2804 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2806 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2808 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 2810 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2812 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2814 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2816 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2818 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2820 */	NdrFcShort( 0xd2 ),	/* 210 */
/* 2822 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2824 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2826 */	NdrFcShort( 0xd0 ),	/* 208 */
/* 2828 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2830 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2832 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 2834 */	NdrFcShort( 0x2 ),	/* 2 */
/* 2836 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2838 */	NdrFcShort( 0xda ),	/* 218 */
/* 2840 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2842 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 2844 */	NdrFcShort( 0xd8 ),	/* 216 */
/* 2846 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2848 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 2850 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 2852 */	NdrFcShort( 0xf0 ),	/* 240 */
/* 2854 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 2856 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2858 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2860 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2862 */	0x12, 0x0,	/* FC_UP */
/* 2864 */	NdrFcShort( 0xf5ae ),	/* Offset= -2642 (222) */
/* 2866 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2868 */	NdrFcShort( 0xc ),	/* 12 */
/* 2870 */	NdrFcShort( 0xc ),	/* 12 */
/* 2872 */	0x12, 0x0,	/* FC_UP */
/* 2874 */	NdrFcShort( 0xfd4a ),	/* Offset= -694 (2180) */
/* 2876 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2878 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2880 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2882 */	0x12, 0x0,	/* FC_UP */
/* 2884 */	NdrFcShort( 0xfeb4 ),	/* Offset= -332 (2552) */
/* 2886 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2888 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2890 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2892 */	0x12, 0x0,	/* FC_UP */
/* 2894 */	NdrFcShort( 0xfebc ),	/* Offset= -324 (2570) */
/* 2896 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2898 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2900 */	NdrFcShort( 0x2c ),	/* 44 */
/* 2902 */	0x12, 0x0,	/* FC_UP */
/* 2904 */	NdrFcShort( 0xfec4 ),	/* Offset= -316 (2588) */
/* 2906 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2908 */	NdrFcShort( 0x34 ),	/* 52 */
/* 2910 */	NdrFcShort( 0x34 ),	/* 52 */
/* 2912 */	0x12, 0x0,	/* FC_UP */
/* 2914 */	NdrFcShort( 0xf70e ),	/* Offset= -2290 (624) */
/* 2916 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2918 */	NdrFcShort( 0x3c ),	/* 60 */
/* 2920 */	NdrFcShort( 0x3c ),	/* 60 */
/* 2922 */	0x12, 0x0,	/* FC_UP */
/* 2924 */	NdrFcShort( 0xf716 ),	/* Offset= -2282 (642) */
/* 2926 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2928 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2930 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2932 */	0x12, 0x0,	/* FC_UP */
/* 2934 */	NdrFcShort( 0xff16 ),	/* Offset= -234 (2700) */
/* 2936 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2938 */	NdrFcShort( 0x98 ),	/* 152 */
/* 2940 */	NdrFcShort( 0x98 ),	/* 152 */
/* 2942 */	0x12, 0x0,	/* FC_UP */
/* 2944 */	NdrFcShort( 0xff1e ),	/* Offset= -226 (2718) */
/* 2946 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2948 */	NdrFcShort( 0xa0 ),	/* 160 */
/* 2950 */	NdrFcShort( 0xa0 ),	/* 160 */
/* 2952 */	0x12, 0x0,	/* FC_UP */
/* 2954 */	NdrFcShort( 0xff26 ),	/* Offset= -218 (2736) */
/* 2956 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2958 */	NdrFcShort( 0xb0 ),	/* 176 */
/* 2960 */	NdrFcShort( 0xb0 ),	/* 176 */
/* 2962 */	0x12, 0x0,	/* FC_UP */
/* 2964 */	NdrFcShort( 0xff2e ),	/* Offset= -210 (2754) */
/* 2966 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2968 */	NdrFcShort( 0xbc ),	/* 188 */
/* 2970 */	NdrFcShort( 0xbc ),	/* 188 */
/* 2972 */	0x12, 0x0,	/* FC_UP */
/* 2974 */	NdrFcShort( 0xff30 ),	/* Offset= -208 (2766) */
/* 2976 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2978 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 2980 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 2982 */	0x12, 0x0,	/* FC_UP */
/* 2984 */	NdrFcShort( 0xff32 ),	/* Offset= -206 (2778) */
/* 2986 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2988 */	NdrFcShort( 0xcc ),	/* 204 */
/* 2990 */	NdrFcShort( 0xcc ),	/* 204 */
/* 2992 */	0x12, 0x0,	/* FC_UP */
/* 2994 */	NdrFcShort( 0xff3a ),	/* Offset= -198 (2796) */
/* 2996 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 2998 */	NdrFcShort( 0xd4 ),	/* 212 */
/* 3000 */	NdrFcShort( 0xd4 ),	/* 212 */
/* 3002 */	0x12, 0x0,	/* FC_UP */
/* 3004 */	NdrFcShort( 0xff42 ),	/* Offset= -190 (2814) */
/* 3006 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3008 */	NdrFcShort( 0xdc ),	/* 220 */
/* 3010 */	NdrFcShort( 0xdc ),	/* 220 */
/* 3012 */	0x12, 0x0,	/* FC_UP */
/* 3014 */	NdrFcShort( 0xff4a ),	/* Offset= -182 (2832) */
/* 3016 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 3018 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3020 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3022 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3024 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3026 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3028 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3030 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3032 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3034 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3036 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3038 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3040 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3042 */	NdrFcShort( 0xf4e0 ),	/* Offset= -2848 (194) */
/* 3044 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3046 */	NdrFcShort( 0xf4dc ),	/* Offset= -2852 (194) */
/* 3048 */	0x6,		/* FC_SHORT */
			0x3e,		/* FC_STRUCTPAD2 */
/* 3050 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3052 */	0x6,		/* FC_SHORT */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3054 */	0x0,		/* 0 */
			NdrFcShort( 0xf4d3 ),	/* Offset= -2861 (194) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3058 */	0x0,		/* 0 */
			NdrFcShort( 0xf4cf ),	/* Offset= -2865 (194) */
			0x8,		/* FC_LONG */
/* 3062 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3064 */	NdrFcShort( 0xf4dc ),	/* Offset= -2852 (212) */
/* 3066 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3068 */	NdrFcShort( 0xf4d8 ),	/* Offset= -2856 (212) */
/* 3070 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 3072 */	0x2,		/* FC_CHAR */
			0x3d,		/* FC_STRUCTPAD1 */
/* 3074 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3076 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3078 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3080 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3082 */	0x2,		/* FC_CHAR */
			0x3f,		/* FC_STRUCTPAD3 */
/* 3084 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3086 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3088 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3090 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3092 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3094 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3096 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3098 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3100 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3102 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3104 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3106 */	
			0x12, 0x0,	/* FC_UP */
/* 3108 */	NdrFcShort( 0xe ),	/* Offset= 14 (3122) */
/* 3110 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3112 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3114 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3116 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3118 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3120 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3122 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3124 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3126 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3128 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3130 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3132 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3134 */	0x12, 0x0,	/* FC_UP */
/* 3136 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (3110) */
/* 3138 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3140 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3142 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3144 */	0x12, 0x0,	/* FC_UP */
/* 3146 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (3110) */
/* 3148 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 3150 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3152 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3154 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3156 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3158 */	
			0x12, 0x0,	/* FC_UP */
/* 3160 */	NdrFcShort( 0xe ),	/* Offset= 14 (3174) */
/* 3162 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 3164 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3166 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3168 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3170 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3172 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 3174 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3176 */	NdrFcShort( 0x48 ),	/* 72 */
/* 3178 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3180 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3182 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3184 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3186 */	0x12, 0x0,	/* FC_UP */
/* 3188 */	NdrFcShort( 0xf46a ),	/* Offset= -2966 (222) */
/* 3190 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3192 */	NdrFcShort( 0x14 ),	/* 20 */
/* 3194 */	NdrFcShort( 0x14 ),	/* 20 */
/* 3196 */	0x12, 0x0,	/* FC_UP */
/* 3198 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (3162) */
/* 3200 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3202 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3204 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3206 */	0x12, 0x0,	/* FC_UP */
/* 3208 */	NdrFcShort( 0xfd70 ),	/* Offset= -656 (2552) */
/* 3210 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3212 */	NdrFcShort( 0x24 ),	/* 36 */
/* 3214 */	NdrFcShort( 0x24 ),	/* 36 */
/* 3216 */	0x12, 0x0,	/* FC_UP */
/* 3218 */	NdrFcShort( 0xfd78 ),	/* Offset= -648 (2570) */
/* 3220 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3222 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3224 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3226 */	0x12, 0x0,	/* FC_UP */
/* 3228 */	NdrFcShort( 0xfd80 ),	/* Offset= -640 (2588) */
/* 3230 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3232 */	NdrFcShort( 0x34 ),	/* 52 */
/* 3234 */	NdrFcShort( 0x34 ),	/* 52 */
/* 3236 */	0x12, 0x0,	/* FC_UP */
/* 3238 */	NdrFcShort( 0xf5ca ),	/* Offset= -2614 (624) */
/* 3240 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 3242 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3244 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3246 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3248 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3250 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3252 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3254 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3256 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3258 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3260 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3262 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3264 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3266 */	
			0x12, 0x0,	/* FC_UP */
/* 3268 */	NdrFcShort( 0x38 ),	/* Offset= 56 (3324) */
/* 3270 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3272 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3274 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3276 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3278 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3280 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3282 */	0x12, 0x0,	/* FC_UP */
/* 3284 */	NdrFcShort( 0xf658 ),	/* Offset= -2472 (812) */
/* 3286 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 3288 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3290 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3292 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3294 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3296 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3298 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3300 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3302 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 3304 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3306 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3308 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3310 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3312 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3314 */	0x12, 0x0,	/* FC_UP */
/* 3316 */	NdrFcShort( 0xf638 ),	/* Offset= -2504 (812) */
/* 3318 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3320 */	0x0,		/* 0 */
			NdrFcShort( 0xffcd ),	/* Offset= -51 (3270) */
			0x5b,		/* FC_END */
/* 3324 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3326 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3328 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3330 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3332 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3334 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3336 */	0x12, 0x0,	/* FC_UP */
/* 3338 */	NdrFcShort( 0xffd0 ),	/* Offset= -48 (3290) */
/* 3340 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 3342 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3344 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3346 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3348 */	
			0x12, 0x0,	/* FC_UP */
/* 3350 */	NdrFcShort( 0x70 ),	/* Offset= 112 (3462) */
/* 3352 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 3354 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3356 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3358 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3360 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3362 */	0x0,		/* 0 */
			NdrFcShort( 0xf39f ),	/* Offset= -3169 (194) */
			0x5b,		/* FC_END */
/* 3366 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3368 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3370 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x57,		/* FC_ADD_1 */
/* 3372 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3374 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3376 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3378 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 3380 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3382 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3384 */	NdrFcShort( 0x54 ),	/* 84 */
/* 3386 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3388 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 3390 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3392 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3394 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3396 */	NdrFcShort( 0x5e ),	/* 94 */
/* 3398 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3400 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3402 */	NdrFcShort( 0x5c ),	/* 92 */
/* 3404 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3406 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3408 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3410 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3412 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3414 */	NdrFcShort( 0x66 ),	/* 102 */
/* 3416 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3418 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3420 */	NdrFcShort( 0x64 ),	/* 100 */
/* 3422 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3424 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3426 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3428 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3430 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3432 */	NdrFcShort( 0x6e ),	/* 110 */
/* 3434 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3436 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3438 */	NdrFcShort( 0x6c ),	/* 108 */
/* 3440 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3442 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3444 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3446 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3448 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3450 */	NdrFcShort( 0x76 ),	/* 118 */
/* 3452 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3454 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3456 */	NdrFcShort( 0x74 ),	/* 116 */
/* 3458 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3460 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3462 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3464 */	NdrFcShort( 0x8c ),	/* 140 */
/* 3466 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3468 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3470 */	NdrFcShort( 0x14 ),	/* 20 */
/* 3472 */	NdrFcShort( 0x14 ),	/* 20 */
/* 3474 */	0x12, 0x0,	/* FC_UP */
/* 3476 */	NdrFcShort( 0xff92 ),	/* Offset= -110 (3366) */
/* 3478 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3480 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3482 */	NdrFcShort( 0x1c ),	/* 28 */
/* 3484 */	0x12, 0x0,	/* FC_UP */
/* 3486 */	NdrFcShort( 0xfc5a ),	/* Offset= -934 (2552) */
/* 3488 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3490 */	NdrFcShort( 0x20 ),	/* 32 */
/* 3492 */	NdrFcShort( 0x20 ),	/* 32 */
/* 3494 */	0x12, 0x0,	/* FC_UP */
/* 3496 */	NdrFcShort( 0xf584 ),	/* Offset= -2684 (812) */
/* 3498 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3500 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3502 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3504 */	0x12, 0x0,	/* FC_UP */
/* 3506 */	NdrFcShort( 0xff80 ),	/* Offset= -128 (3378) */
/* 3508 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3510 */	NdrFcShort( 0x60 ),	/* 96 */
/* 3512 */	NdrFcShort( 0x60 ),	/* 96 */
/* 3514 */	0x12, 0x0,	/* FC_UP */
/* 3516 */	NdrFcShort( 0xff82 ),	/* Offset= -126 (3390) */
/* 3518 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3520 */	NdrFcShort( 0x68 ),	/* 104 */
/* 3522 */	NdrFcShort( 0x68 ),	/* 104 */
/* 3524 */	0x12, 0x0,	/* FC_UP */
/* 3526 */	NdrFcShort( 0xff8a ),	/* Offset= -118 (3408) */
/* 3528 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3530 */	NdrFcShort( 0x70 ),	/* 112 */
/* 3532 */	NdrFcShort( 0x70 ),	/* 112 */
/* 3534 */	0x12, 0x0,	/* FC_UP */
/* 3536 */	NdrFcShort( 0xff92 ),	/* Offset= -110 (3426) */
/* 3538 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3540 */	NdrFcShort( 0x78 ),	/* 120 */
/* 3542 */	NdrFcShort( 0x78 ),	/* 120 */
/* 3544 */	0x12, 0x0,	/* FC_UP */
/* 3546 */	NdrFcShort( 0xff9a ),	/* Offset= -102 (3444) */
/* 3548 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 3550 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3552 */	NdrFcShort( 0xf2e2 ),	/* Offset= -3358 (194) */
/* 3554 */	0x2,		/* FC_CHAR */
			0x3f,		/* FC_STRUCTPAD3 */
/* 3556 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3558 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3560 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3562 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3564 */	NdrFcShort( 0xff2c ),	/* Offset= -212 (3352) */
/* 3566 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3568 */	NdrFcShort( 0xf2d2 ),	/* Offset= -3374 (194) */
/* 3570 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3572 */	NdrFcShort( 0xf2ce ),	/* Offset= -3378 (194) */
/* 3574 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3576 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3578 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3580 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3582 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3584 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3586 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3588 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3590 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3592 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3594 */	
			0x12, 0x0,	/* FC_UP */
/* 3596 */	NdrFcShort( 0x46 ),	/* Offset= 70 (3666) */
/* 3598 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3600 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3602 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3604 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3606 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3608 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3610 */	0x12, 0x0,	/* FC_UP */
/* 3612 */	NdrFcShort( 0xf2c2 ),	/* Offset= -3390 (222) */
/* 3614 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 3616 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3618 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3620 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3622 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3624 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3626 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3628 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3630 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3632 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 3634 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3636 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3638 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3640 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3642 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3644 */	0x12, 0x0,	/* FC_UP */
/* 3646 */	NdrFcShort( 0xf2a0 ),	/* Offset= -3424 (222) */
/* 3648 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3650 */	0x0,		/* 0 */
			NdrFcShort( 0xffcb ),	/* Offset= -53 (3598) */
			0x5b,		/* FC_END */
/* 3654 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 3656 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3658 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3660 */	NdrFcShort( 0x14 ),	/* 20 */
/* 3662 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3664 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 3666 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3668 */	NdrFcShort( 0x4c ),	/* 76 */
/* 3670 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3672 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3674 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3676 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3678 */	0x12, 0x0,	/* FC_UP */
/* 3680 */	NdrFcShort( 0xf27e ),	/* Offset= -3458 (222) */
/* 3682 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3684 */	NdrFcShort( 0xc ),	/* 12 */
/* 3686 */	NdrFcShort( 0xc ),	/* 12 */
/* 3688 */	0x12, 0x0,	/* FC_UP */
/* 3690 */	NdrFcShort( 0xffba ),	/* Offset= -70 (3620) */
/* 3692 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3694 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3696 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3698 */	0x12, 0x0,	/* FC_UP */
/* 3700 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (3654) */
/* 3702 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3704 */	NdrFcShort( 0x20 ),	/* 32 */
/* 3706 */	NdrFcShort( 0x20 ),	/* 32 */
/* 3708 */	0x12, 0x0,	/* FC_UP */
/* 3710 */	NdrFcShort( 0xf284 ),	/* Offset= -3452 (258) */
/* 3712 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3714 */	NdrFcShort( 0x28 ),	/* 40 */
/* 3716 */	NdrFcShort( 0x28 ),	/* 40 */
/* 3718 */	0x12, 0x0,	/* FC_UP */
/* 3720 */	NdrFcShort( 0xf346 ),	/* Offset= -3258 (462) */
/* 3722 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3724 */	NdrFcShort( 0x30 ),	/* 48 */
/* 3726 */	NdrFcShort( 0x30 ),	/* 48 */
/* 3728 */	0x12, 0x0,	/* FC_UP */
/* 3730 */	NdrFcShort( 0xfac2 ),	/* Offset= -1342 (2388) */
/* 3732 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3734 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3736 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3738 */	0x12, 0x0,	/* FC_UP */
/* 3740 */	NdrFcShort( 0xfaca ),	/* Offset= -1334 (2406) */
/* 3742 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 3744 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3746 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3748 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3750 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3752 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3754 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3756 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3758 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3760 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3762 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3764 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3766 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3768 */	
			0x12, 0x0,	/* FC_UP */
/* 3770 */	NdrFcShort( 0x72 ),	/* Offset= 114 (3884) */
/* 3772 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3774 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3776 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3778 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3780 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3782 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3784 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 3786 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3788 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3790 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3792 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3794 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3796 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 3798 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3800 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3802 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3804 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3806 */	NdrFcShort( 0x4 ),	/* 4 */
/* 3808 */	0x12, 0x0,	/* FC_UP */
/* 3810 */	NdrFcShort( 0xf1fc ),	/* Offset= -3588 (222) */
/* 3812 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3814 */	0x0,		/* 0 */
			NdrFcShort( 0xff27 ),	/* Offset= -217 (3598) */
			0x5b,		/* FC_END */
/* 3818 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 3820 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3822 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3824 */	NdrFcShort( 0x34 ),	/* 52 */
/* 3826 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3828 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 3830 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3832 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3834 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3836 */	NdrFcShort( 0x46 ),	/* 70 */
/* 3838 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3840 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3842 */	NdrFcShort( 0x44 ),	/* 68 */
/* 3844 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3846 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3848 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3850 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3852 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3854 */	NdrFcShort( 0x4e ),	/* 78 */
/* 3856 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3858 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3860 */	NdrFcShort( 0x4c ),	/* 76 */
/* 3862 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3864 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3866 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 3868 */	NdrFcShort( 0x2 ),	/* 2 */
/* 3870 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3872 */	NdrFcShort( 0x56 ),	/* 86 */
/* 3874 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3876 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 3878 */	NdrFcShort( 0x54 ),	/* 84 */
/* 3880 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3882 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3884 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 3886 */	NdrFcShort( 0x6c ),	/* 108 */
/* 3888 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 3890 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3892 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3894 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3896 */	0x12, 0x0,	/* FC_UP */
/* 3898 */	NdrFcShort( 0xff82 ),	/* Offset= -126 (3772) */
/* 3900 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3902 */	NdrFcShort( 0xc ),	/* 12 */
/* 3904 */	NdrFcShort( 0xc ),	/* 12 */
/* 3906 */	0x12, 0x0,	/* FC_UP */
/* 3908 */	NdrFcShort( 0xff84 ),	/* Offset= -124 (3784) */
/* 3910 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3912 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3914 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3916 */	0x12, 0x0,	/* FC_UP */
/* 3918 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (3818) */
/* 3920 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3922 */	NdrFcShort( 0x40 ),	/* 64 */
/* 3924 */	NdrFcShort( 0x40 ),	/* 64 */
/* 3926 */	0x12, 0x0,	/* FC_UP */
/* 3928 */	NdrFcShort( 0xfa20 ),	/* Offset= -1504 (2424) */
/* 3930 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3932 */	NdrFcShort( 0x48 ),	/* 72 */
/* 3934 */	NdrFcShort( 0x48 ),	/* 72 */
/* 3936 */	0x12, 0x0,	/* FC_UP */
/* 3938 */	NdrFcShort( 0xff94 ),	/* Offset= -108 (3830) */
/* 3940 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3942 */	NdrFcShort( 0x50 ),	/* 80 */
/* 3944 */	NdrFcShort( 0x50 ),	/* 80 */
/* 3946 */	0x12, 0x0,	/* FC_UP */
/* 3948 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (3848) */
/* 3950 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 3952 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3954 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3956 */	0x12, 0x0,	/* FC_UP */
/* 3958 */	NdrFcShort( 0xffa4 ),	/* Offset= -92 (3866) */
/* 3960 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 3962 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3964 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3966 */	0x0,		/* 0 */
			NdrFcShort( 0xfd99 ),	/* Offset= -615 (3352) */
			0x8,		/* FC_LONG */
/* 3970 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3972 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3974 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3976 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3978 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 3980 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 3982 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3984 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3986 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3988 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3990 */	
			0x12, 0x0,	/* FC_UP */
/* 3992 */	NdrFcShort( 0x26 ),	/* Offset= 38 (4030) */
/* 3994 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 3996 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3998 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 4000 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4002 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4004 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 4006 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4008 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4010 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4012 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 4014 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4016 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 4018 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4020 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4022 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 4024 */	NdrFcShort( 0x14 ),	/* 20 */
/* 4026 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4028 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4030 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4032 */	NdrFcShort( 0x64 ),	/* 100 */
/* 4034 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4036 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4038 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4040 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4042 */	0x12, 0x0,	/* FC_UP */
/* 4044 */	NdrFcShort( 0xffce ),	/* Offset= -50 (3994) */
/* 4046 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4048 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4050 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4052 */	0x12, 0x0,	/* FC_UP */
/* 4054 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (4012) */
/* 4056 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4058 */	NdrFcShort( 0x30 ),	/* 48 */
/* 4060 */	NdrFcShort( 0x30 ),	/* 48 */
/* 4062 */	0x12, 0x0,	/* FC_UP */
/* 4064 */	NdrFcShort( 0xf200 ),	/* Offset= -3584 (480) */
/* 4066 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4068 */	NdrFcShort( 0x38 ),	/* 56 */
/* 4070 */	NdrFcShort( 0x38 ),	/* 56 */
/* 4072 */	0x12, 0x0,	/* FC_UP */
/* 4074 */	NdrFcShort( 0xf97c ),	/* Offset= -1668 (2406) */
/* 4076 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4078 */	NdrFcShort( 0x40 ),	/* 64 */
/* 4080 */	NdrFcShort( 0x40 ),	/* 64 */
/* 4082 */	0x12, 0x0,	/* FC_UP */
/* 4084 */	NdrFcShort( 0xf984 ),	/* Offset= -1660 (2424) */
/* 4086 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4088 */	NdrFcShort( 0x48 ),	/* 72 */
/* 4090 */	NdrFcShort( 0x48 ),	/* 72 */
/* 4092 */	0x12, 0x0,	/* FC_UP */
/* 4094 */	NdrFcShort( 0xfef8 ),	/* Offset= -264 (3830) */
/* 4096 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4098 */	NdrFcShort( 0x50 ),	/* 80 */
/* 4100 */	NdrFcShort( 0x50 ),	/* 80 */
/* 4102 */	0x12, 0x0,	/* FC_UP */
/* 4104 */	NdrFcShort( 0xff00 ),	/* Offset= -256 (3848) */
/* 4106 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4108 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4110 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 4112 */	NdrFcShort( 0xf0b2 ),	/* Offset= -3918 (194) */
/* 4114 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4116 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 4118 */	0x0,		/* 0 */
			NdrFcShort( 0xf0ab ),	/* Offset= -3925 (194) */
			0x8,		/* FC_LONG */
/* 4122 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4124 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4126 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4128 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4130 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4132 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4134 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4136 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4138 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4140 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 4142 */	
			0x12, 0x0,	/* FC_UP */
/* 4144 */	NdrFcShort( 0x26 ),	/* Offset= 38 (4182) */
/* 4146 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 4148 */	NdrFcShort( 0x2 ),	/* 2 */
/* 4150 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 4152 */	NdrFcShort( 0x6 ),	/* 6 */
/* 4154 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4156 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 4158 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4160 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4162 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 4164 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 4166 */	NdrFcShort( 0x2 ),	/* 2 */
/* 4168 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 4170 */	NdrFcShort( 0xe ),	/* 14 */
/* 4172 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4174 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 4176 */	NdrFcShort( 0xc ),	/* 12 */
/* 4178 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4180 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 4182 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4184 */	NdrFcShort( 0x34 ),	/* 52 */
/* 4186 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4188 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4190 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4192 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4194 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4196 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4198 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4200 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4202 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4204 */	0x12, 0x0,	/* FC_UP */
/* 4206 */	NdrFcShort( 0xffc4 ),	/* Offset= -60 (4146) */
/* 4208 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4210 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4212 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4214 */	0x12, 0x0,	/* FC_UP */
/* 4216 */	NdrFcShort( 0xffcc ),	/* Offset= -52 (4164) */
/* 4218 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4220 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4222 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4224 */	0x12, 0x0,	/* FC_UP */
/* 4226 */	NdrFcShort( 0xf06e ),	/* Offset= -3986 (240) */
/* 4228 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4230 */	NdrFcShort( 0x20 ),	/* 32 */
/* 4232 */	NdrFcShort( 0x20 ),	/* 32 */
/* 4234 */	0x12, 0x0,	/* FC_UP */
/* 4236 */	NdrFcShort( 0xf076 ),	/* Offset= -3978 (258) */
/* 4238 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4240 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4242 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4244 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4246 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4248 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4250 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4252 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4254 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4256 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 4258 */	
			0x12, 0x0,	/* FC_UP */
/* 4260 */	NdrFcShort( 0xf6c8 ),	/* Offset= -2360 (1900) */
/* 4262 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 4264 */	NdrFcShort( 0xc ),	/* 12 */
/* 4266 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4268 */	NdrFcShort( 0x0 ),	/* Offset= 0 (4268) */
/* 4270 */	0xd,		/* FC_ENUM16 */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 4272 */	0x0,		/* 0 */
			NdrFcShort( 0xf6cd ),	/* Offset= -2355 (1918) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 4276 */	0x0,		/* 0 */
			NdrFcShort( 0xf75b ),	/* Offset= -2213 (2064) */
			0x5b,		/* FC_END */
/* 4280 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 4282 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4284 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 4286 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4288 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4290 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 4294 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 4296 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 4298 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (4262) */
/* 4300 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 4302 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4304 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4306 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4308 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4310 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4312 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4314 */	0x12, 0x0,	/* FC_UP */
/* 4316 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (4280) */
/* 4318 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4320 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4322 */	
			0x11, 0x8,	/* FC_RP [simple_pointer] */
/* 4324 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 4326 */	
			0x11, 0x0,	/* FC_RP */
/* 4328 */	NdrFcShort( 0x8 ),	/* Offset= 8 (4336) */
/* 4330 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 4332 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4334 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4336 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 4338 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4340 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 4342 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (4330) */
/* 4344 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4346 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 4348 */	
			0x11, 0x0,	/* FC_RP */
/* 4350 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4352) */
/* 4352 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 4354 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4356 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4358 */	NdrFcShort( 0x20 ),	/* x86 Stack size/offset = 32 */
/* 4360 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 4362 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4364 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 4366 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 4368 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4370 */	NdrFcShort( 0xffde ),	/* Offset= -34 (4336) */
/* 4372 */	
			0x11, 0x0,	/* FC_RP */
/* 4374 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4376) */
/* 4376 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 4378 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4380 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4382 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 4384 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 4386 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4388 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 4390 */	NdrFcShort( 0xeedc ),	/* Offset= -4388 (2) */
/* 4392 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4394 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4396) */
/* 4396 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4398 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4400 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 4402 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4404 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4406) */
/* 4406 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4408 */	NdrFcShort( 0x3004 ),	/* 12292 */
/* 4410 */	NdrFcLong( 0x1 ),	/* 1 */
/* 4414 */	NdrFcShort( 0x16 ),	/* Offset= 22 (4436) */
/* 4416 */	NdrFcLong( 0x2 ),	/* 2 */
/* 4420 */	NdrFcShort( 0x14 ),	/* Offset= 20 (4440) */
/* 4422 */	NdrFcLong( 0x3 ),	/* 3 */
/* 4426 */	NdrFcShort( 0x28 ),	/* Offset= 40 (4466) */
/* 4428 */	NdrFcLong( 0x4 ),	/* 4 */
/* 4432 */	NdrFcShort( 0x32 ),	/* Offset= 50 (4482) */
/* 4434 */	NdrFcShort( 0x0 ),	/* Offset= 0 (4434) */
/* 4436 */	
			0x12, 0x0,	/* FC_UP */
/* 4438 */	NdrFcShort( 0xef6c ),	/* Offset= -4244 (194) */
/* 4440 */	
			0x12, 0x0,	/* FC_UP */
/* 4442 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4444) */
/* 4444 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4446 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4448 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4450 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4452 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4454 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4456 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4458 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4460 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4462 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4464 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4466 */	
			0x12, 0x0,	/* FC_UP */
/* 4468 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4470) */
/* 4470 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 4472 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4474 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4476 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4478 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4480 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4482 */	
			0x12, 0x0,	/* FC_UP */
/* 4484 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4486) */
/* 4486 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4488 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4490 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4492 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4494 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4496 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4498 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4500 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4502 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4504 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4506 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4508 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4510 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4512 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4514 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4516 */	
			0x11, 0x0,	/* FC_RP */
/* 4518 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4520) */
/* 4520 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4522 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4524 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 4526 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4528 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4530) */
/* 4530 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4532 */	NdrFcShort( 0x3006 ),	/* 12294 */
/* 4534 */	NdrFcLong( 0x5 ),	/* 5 */
/* 4538 */	NdrFcShort( 0xee48 ),	/* Offset= -4536 (2) */
/* 4540 */	NdrFcLong( 0x6 ),	/* 6 */
/* 4544 */	NdrFcShort( 0xee42 ),	/* Offset= -4542 (2) */
/* 4546 */	NdrFcLong( 0x9 ),	/* 9 */
/* 4550 */	NdrFcShort( 0xee3c ),	/* Offset= -4548 (2) */
/* 4552 */	NdrFcLong( 0xa ),	/* 10 */
/* 4556 */	NdrFcShort( 0xee36 ),	/* Offset= -4554 (2) */
/* 4558 */	NdrFcLong( 0xfffe ),	/* 65534 */
/* 4562 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 4564 */	NdrFcLong( 0x8 ),	/* 8 */
/* 4568 */	NdrFcShort( 0xee2a ),	/* Offset= -4566 (2) */
/* 4570 */	NdrFcShort( 0x0 ),	/* Offset= 0 (4570) */
/* 4572 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4574 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4576) */
/* 4576 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4578 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4580 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 4582 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4584 */	NdrFcShort( 0xff4e ),	/* Offset= -178 (4406) */
/* 4586 */	
			0x11, 0x0,	/* FC_RP */
/* 4588 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4590) */
/* 4590 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 4592 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4594 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4596 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 4598 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 4600 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4602 */	
			0x11, 0x0,	/* FC_RP */
/* 4604 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4606) */
/* 4606 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4608 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4610 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 4612 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4614 */	NdrFcShort( 0xffac ),	/* Offset= -84 (4530) */
/* 4616 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4618 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4620) */
/* 4620 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4622 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4624 */	NdrFcShort( 0x8 ),	/* x86 Stack size/offset = 8 */
/* 4626 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4628 */	NdrFcShort( 0xff22 ),	/* Offset= -222 (4406) */
/* 4630 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4632 */	NdrFcShort( 0xf2d0 ),	/* Offset= -3376 (1256) */
/* 4634 */	
			0x12, 0x0,	/* FC_UP */
/* 4636 */	NdrFcShort( 0x8 ),	/* Offset= 8 (4644) */
/* 4638 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 4640 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4642 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 4644 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 4646 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4648 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4650 */	0x6,		/* FC_SHORT */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 4652 */	0x0,		/* 0 */
			NdrFcShort( 0xfff1 ),	/* Offset= -15 (4638) */
			0x5b,		/* FC_END */
/* 4656 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 4658 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4660) */
/* 4660 */	
			0x12, 0x0,	/* FC_UP */
/* 4662 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4664) */
/* 4664 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4666 */	NdrFcShort( 0x30 ),	/* 48 */
/* 4668 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4670 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4672 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4674 */	NdrFcShort( 0x0 ),	/* 0 */
/* 4676 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4678 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4680 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4682 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4684 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4686 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4688 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4690 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4692 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4694 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4696 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4698 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4700 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4702 */	NdrFcShort( 0x20 ),	/* 32 */
/* 4704 */	NdrFcShort( 0x20 ),	/* 32 */
/* 4706 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4708 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4710 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4712 */	NdrFcShort( 0x28 ),	/* 40 */
/* 4714 */	NdrFcShort( 0x28 ),	/* 40 */
/* 4716 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4718 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4720 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4722 */	NdrFcShort( 0x2c ),	/* 44 */
/* 4724 */	NdrFcShort( 0x2c ),	/* 44 */
/* 4726 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4728 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4730 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4732 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4734 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 4736 */	NdrFcShort( 0xffa4 ),	/* Offset= -92 (4644) */
/* 4738 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4740 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4742 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4744 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4746 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4748) */
/* 4748 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4750 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4752 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 4754 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4756 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4758) */
/* 4758 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4760 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 4762 */	NdrFcLong( 0x1 ),	/* 1 */
/* 4766 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 4768 */	NdrFcShort( 0xffff ),	/* Offset= -1 (4767) */
/* 4770 */	
			0x11, 0x0,	/* FC_RP */
/* 4772 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4774) */
/* 4774 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 4776 */	NdrFcShort( 0x1 ),	/* 1 */
/* 4778 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4780 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 4782 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 4784 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 4786 */	
			0x11, 0x0,	/* FC_RP */
/* 4788 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4790) */
/* 4790 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4792 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4794 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 4796 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4798 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4800) */
/* 4800 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4802 */	NdrFcShort( 0x3002 ),	/* 12290 */
/* 4804 */	NdrFcLong( 0x1 ),	/* 1 */
/* 4808 */	NdrFcShort( 0xa ),	/* Offset= 10 (4818) */
/* 4810 */	NdrFcLong( 0x2 ),	/* 2 */
/* 4814 */	NdrFcShort( 0x4 ),	/* Offset= 4 (4818) */
/* 4816 */	NdrFcShort( 0xffff ),	/* Offset= -1 (4815) */
/* 4818 */	
			0x12, 0x0,	/* FC_UP */
/* 4820 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4822) */
/* 4822 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 4824 */	NdrFcShort( 0x50 ),	/* 80 */
/* 4826 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 4828 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4830 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4832 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4834 */	0x12, 0x0,	/* FC_UP */
/* 4836 */	NdrFcShort( 0xf1f8 ),	/* Offset= -3592 (1244) */
/* 4838 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4840 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4842 */	NdrFcShort( 0x8 ),	/* 8 */
/* 4844 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4846 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4848 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4850 */	NdrFcShort( 0xc ),	/* 12 */
/* 4852 */	NdrFcShort( 0xc ),	/* 12 */
/* 4854 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4856 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4858 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4860 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4862 */	NdrFcShort( 0x10 ),	/* 16 */
/* 4864 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4866 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4868 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4870 */	NdrFcShort( 0x14 ),	/* 20 */
/* 4872 */	NdrFcShort( 0x14 ),	/* 20 */
/* 4874 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4876 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4878 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4880 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4882 */	NdrFcShort( 0x18 ),	/* 24 */
/* 4884 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4886 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4888 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4890 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4892 */	NdrFcShort( 0x1c ),	/* 28 */
/* 4894 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 4896 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 4898 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4900 */	NdrFcShort( 0x24 ),	/* 36 */
/* 4902 */	NdrFcShort( 0x24 ),	/* 36 */
/* 4904 */	0x12, 0x0,	/* FC_UP */
/* 4906 */	NdrFcShort( 0xf6e0 ),	/* Offset= -2336 (2570) */
/* 4908 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4910 */	NdrFcShort( 0x2c ),	/* 44 */
/* 4912 */	NdrFcShort( 0x2c ),	/* 44 */
/* 4914 */	0x12, 0x0,	/* FC_UP */
/* 4916 */	NdrFcShort( 0xf6e8 ),	/* Offset= -2328 (2588) */
/* 4918 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4920 */	NdrFcShort( 0x34 ),	/* 52 */
/* 4922 */	NdrFcShort( 0x34 ),	/* 52 */
/* 4924 */	0x12, 0x0,	/* FC_UP */
/* 4926 */	NdrFcShort( 0xef32 ),	/* Offset= -4302 (624) */
/* 4928 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 4930 */	NdrFcShort( 0x3c ),	/* 60 */
/* 4932 */	NdrFcShort( 0x3c ),	/* 60 */
/* 4934 */	0x12, 0x0,	/* FC_UP */
/* 4936 */	NdrFcShort( 0xef3a ),	/* Offset= -4294 (642) */
/* 4938 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 4940 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4942 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4944 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4946 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4948 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4950 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4952 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 4954 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 4956 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 4958 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4960 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 4962 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 4964 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 4966 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4968) */
/* 4968 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 4970 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 4972 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 4974 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 4976 */	NdrFcShort( 0x2 ),	/* Offset= 2 (4978) */
/* 4978 */	NdrFcShort( 0x4 ),	/* 4 */
/* 4980 */	NdrFcShort( 0x3002 ),	/* 12290 */
/* 4982 */	NdrFcLong( 0x1 ),	/* 1 */
/* 4986 */	NdrFcShort( 0xa ),	/* Offset= 10 (4996) */
/* 4988 */	NdrFcLong( 0x2 ),	/* 2 */
/* 4992 */	NdrFcShort( 0xf158 ),	/* Offset= -3752 (1240) */
/* 4994 */	NdrFcShort( 0xffff ),	/* Offset= -1 (4993) */
/* 4996 */	
			0x12, 0x0,	/* FC_UP */
/* 4998 */	NdrFcShort( 0x102 ),	/* Offset= 258 (5256) */
/* 5000 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5002 */	NdrFcShort( 0x5c ),	/* 92 */
/* 5004 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5006 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5008 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5010 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5012 */	0x12, 0x0,	/* FC_UP */
/* 5014 */	NdrFcShort( 0xed48 ),	/* Offset= -4792 (222) */
/* 5016 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5018 */	NdrFcShort( 0xc ),	/* 12 */
/* 5020 */	NdrFcShort( 0xc ),	/* 12 */
/* 5022 */	0x12, 0x0,	/* FC_UP */
/* 5024 */	NdrFcShort( 0xf4e4 ),	/* Offset= -2844 (2180) */
/* 5026 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5028 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5030 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5032 */	0x12, 0x0,	/* FC_UP */
/* 5034 */	NdrFcShort( 0xf58c ),	/* Offset= -2676 (2358) */
/* 5036 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5038 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5040 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5042 */	0x12, 0x0,	/* FC_UP */
/* 5044 */	NdrFcShort( 0xef78 ),	/* Offset= -4232 (812) */
/* 5046 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5048 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5050 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5052 */	0x12, 0x0,	/* FC_UP */
/* 5054 */	NdrFcShort( 0xf596 ),	/* Offset= -2666 (2388) */
/* 5056 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5058 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5060 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5062 */	0x12, 0x0,	/* FC_UP */
/* 5064 */	NdrFcShort( 0xf59e ),	/* Offset= -2658 (2406) */
/* 5066 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5068 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5070 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5072 */	0x12, 0x0,	/* FC_UP */
/* 5074 */	NdrFcShort( 0xf5a6 ),	/* Offset= -2650 (2424) */
/* 5076 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5078 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5080 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5082 */	0x12, 0x0,	/* FC_UP */
/* 5084 */	NdrFcShort( 0xfb1a ),	/* Offset= -1254 (3830) */
/* 5086 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 5088 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5090 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5092 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5094 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5096 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5098 */	NdrFcShort( 0xfe3a ),	/* Offset= -454 (4644) */
/* 5100 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5102 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5104 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5106 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5108 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5110 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5112 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5114 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5116 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5118 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 5120 */	NdrFcShort( 0x5c ),	/* 92 */
/* 5122 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 5124 */	NdrFcShort( 0x5c ),	/* 92 */
/* 5126 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5128 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5130 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 5132 */	NdrFcShort( 0x5c ),	/* 92 */
/* 5134 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5136 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5138 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5140 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5142 */	0x12, 0x0,	/* FC_UP */
/* 5144 */	NdrFcShort( 0xecc6 ),	/* Offset= -4922 (222) */
/* 5146 */	NdrFcShort( 0xc ),	/* 12 */
/* 5148 */	NdrFcShort( 0xc ),	/* 12 */
/* 5150 */	0x12, 0x0,	/* FC_UP */
/* 5152 */	NdrFcShort( 0xf464 ),	/* Offset= -2972 (2180) */
/* 5154 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5156 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5158 */	0x12, 0x0,	/* FC_UP */
/* 5160 */	NdrFcShort( 0xf50e ),	/* Offset= -2802 (2358) */
/* 5162 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5164 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5166 */	0x12, 0x0,	/* FC_UP */
/* 5168 */	NdrFcShort( 0xeefc ),	/* Offset= -4356 (812) */
/* 5170 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5172 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5174 */	0x12, 0x0,	/* FC_UP */
/* 5176 */	NdrFcShort( 0xf51c ),	/* Offset= -2788 (2388) */
/* 5178 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5180 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5182 */	0x12, 0x0,	/* FC_UP */
/* 5184 */	NdrFcShort( 0xf526 ),	/* Offset= -2778 (2406) */
/* 5186 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5188 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5190 */	0x12, 0x0,	/* FC_UP */
/* 5192 */	NdrFcShort( 0xf530 ),	/* Offset= -2768 (2424) */
/* 5194 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5196 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5198 */	0x12, 0x0,	/* FC_UP */
/* 5200 */	NdrFcShort( 0xfaa6 ),	/* Offset= -1370 (3830) */
/* 5202 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 5204 */	0x0,		/* 0 */
			NdrFcShort( 0xff33 ),	/* Offset= -205 (5000) */
			0x5b,		/* FC_END */
/* 5208 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 5210 */	NdrFcShort( 0x1 ),	/* 1 */
/* 5212 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 5214 */	NdrFcShort( 0x64 ),	/* 100 */
/* 5216 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5218 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 5220 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 5222 */	NdrFcShort( 0x2 ),	/* 2 */
/* 5224 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 5226 */	NdrFcShort( 0x7e ),	/* 126 */
/* 5228 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5230 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 5232 */	NdrFcShort( 0x7c ),	/* 124 */
/* 5234 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5236 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 5238 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 5240 */	NdrFcShort( 0x2 ),	/* 2 */
/* 5242 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 5244 */	NdrFcShort( 0x86 ),	/* 134 */
/* 5246 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5248 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 5250 */	NdrFcShort( 0x84 ),	/* 132 */
/* 5252 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5254 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 5256 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5258 */	NdrFcShort( 0x9c ),	/* 156 */
/* 5260 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5262 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5264 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5266 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5268 */	0x12, 0x0,	/* FC_UP */
/* 5270 */	NdrFcShort( 0xec48 ),	/* Offset= -5048 (222) */
/* 5272 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5274 */	NdrFcShort( 0xc ),	/* 12 */
/* 5276 */	NdrFcShort( 0xc ),	/* 12 */
/* 5278 */	0x12, 0x0,	/* FC_UP */
/* 5280 */	NdrFcShort( 0xf3e4 ),	/* Offset= -3100 (2180) */
/* 5282 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5284 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5286 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5288 */	0x12, 0x0,	/* FC_UP */
/* 5290 */	NdrFcShort( 0xf48c ),	/* Offset= -2932 (2358) */
/* 5292 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5294 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5296 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5298 */	0x12, 0x0,	/* FC_UP */
/* 5300 */	NdrFcShort( 0xee78 ),	/* Offset= -4488 (812) */
/* 5302 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5304 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5306 */	NdrFcShort( 0x30 ),	/* 48 */
/* 5308 */	0x12, 0x0,	/* FC_UP */
/* 5310 */	NdrFcShort( 0xf496 ),	/* Offset= -2922 (2388) */
/* 5312 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5314 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5316 */	NdrFcShort( 0x38 ),	/* 56 */
/* 5318 */	0x12, 0x0,	/* FC_UP */
/* 5320 */	NdrFcShort( 0xf49e ),	/* Offset= -2914 (2406) */
/* 5322 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5324 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5326 */	NdrFcShort( 0x40 ),	/* 64 */
/* 5328 */	0x12, 0x0,	/* FC_UP */
/* 5330 */	NdrFcShort( 0xf4a6 ),	/* Offset= -2906 (2424) */
/* 5332 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5334 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5336 */	NdrFcShort( 0x48 ),	/* 72 */
/* 5338 */	0x12, 0x0,	/* FC_UP */
/* 5340 */	NdrFcShort( 0xfa1a ),	/* Offset= -1510 (3830) */
/* 5342 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5344 */	NdrFcShort( 0x60 ),	/* 96 */
/* 5346 */	NdrFcShort( 0x60 ),	/* 96 */
/* 5348 */	0x12, 0x0,	/* FC_UP */
/* 5350 */	NdrFcShort( 0xff18 ),	/* Offset= -232 (5118) */
/* 5352 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5354 */	NdrFcShort( 0x68 ),	/* 104 */
/* 5356 */	NdrFcShort( 0x68 ),	/* 104 */
/* 5358 */	0x12, 0x0,	/* FC_UP */
/* 5360 */	NdrFcShort( 0xff68 ),	/* Offset= -152 (5208) */
/* 5362 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5364 */	NdrFcShort( 0x70 ),	/* 112 */
/* 5366 */	NdrFcShort( 0x70 ),	/* 112 */
/* 5368 */	0x12, 0x0,	/* FC_UP */
/* 5370 */	NdrFcShort( 0xf868 ),	/* Offset= -1944 (3426) */
/* 5372 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5374 */	NdrFcShort( 0x78 ),	/* 120 */
/* 5376 */	NdrFcShort( 0x78 ),	/* 120 */
/* 5378 */	0x12, 0x0,	/* FC_UP */
/* 5380 */	NdrFcShort( 0xf870 ),	/* Offset= -1936 (3444) */
/* 5382 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5384 */	NdrFcShort( 0x80 ),	/* 128 */
/* 5386 */	NdrFcShort( 0x80 ),	/* 128 */
/* 5388 */	0x12, 0x0,	/* FC_UP */
/* 5390 */	NdrFcShort( 0xff56 ),	/* Offset= -170 (5220) */
/* 5392 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5394 */	NdrFcShort( 0x88 ),	/* 136 */
/* 5396 */	NdrFcShort( 0x88 ),	/* 136 */
/* 5398 */	0x12, 0x0,	/* FC_UP */
/* 5400 */	NdrFcShort( 0xff5e ),	/* Offset= -162 (5238) */
/* 5402 */	
			0x5b,		/* FC_END */

			0x6,		/* FC_SHORT */
/* 5404 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5406 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5408 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5410 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5412 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5414 */	NdrFcShort( 0xfcfe ),	/* Offset= -770 (4644) */
/* 5416 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5418 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5420 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5422 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5424 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5426 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5428 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5430 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5432 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5434 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5436 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5438 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5440 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5442 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5444 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5446 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5448 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5450 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5452 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5454 */	
			0x11, 0x0,	/* FC_RP */
/* 5456 */	NdrFcShort( 0x8 ),	/* Offset= 8 (5464) */
/* 5458 */	
			0x1d,		/* FC_SMFARRAY */
			0x1,		/* 1 */
/* 5460 */	NdrFcShort( 0x200 ),	/* 512 */
/* 5462 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 5464 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 5466 */	NdrFcShort( 0x204 ),	/* 516 */
/* 5468 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5470 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (5458) */
/* 5472 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5474 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 5476 */	NdrFcShort( 0xeb70 ),	/* Offset= -5264 (212) */
/* 5478 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 5480 */	NdrFcLong( 0x0 ),	/* 0 */
/* 5484 */	NdrFcLong( 0x7d00 ),	/* 32000 */
/* 5488 */	
			0x11, 0x0,	/* FC_RP */
/* 5490 */	NdrFcShort( 0x22 ),	/* Offset= 34 (5524) */
/* 5492 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 5494 */	NdrFcShort( 0x1 ),	/* 1 */
/* 5496 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 5498 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5500 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 5502 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 5504 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5506 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5508 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5510 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5512 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5514 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5516 */	0x12, 0x0,	/* FC_UP */
/* 5518 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (5492) */
/* 5520 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5522 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5524 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 5526 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5528 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 5530 */	NdrFcShort( 0x4 ),	/* x86 Stack size/offset = 4 */
/* 5532 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5534 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5536 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 5538 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5540 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5542 */	NdrFcShort( 0x1 ),	/* 1 */
/* 5544 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5546 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5548 */	0x12, 0x0,	/* FC_UP */
/* 5550 */	NdrFcShort( 0xffc6 ),	/* Offset= -58 (5492) */
/* 5552 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 5554 */	0x0,		/* 0 */
			NdrFcShort( 0xffcd ),	/* Offset= -51 (5504) */
			0x5b,		/* FC_END */
/* 5558 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 5560 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5562) */
/* 5562 */	
			0x12, 0x0,	/* FC_UP */
/* 5564 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5566) */
/* 5566 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5568 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5570 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5572 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5574 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5576 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5578 */	0x12, 0x0,	/* FC_UP */
/* 5580 */	NdrFcShort( 0xf8fc ),	/* Offset= -1796 (3784) */
/* 5582 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5584 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5586 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 5588 */	NdrFcShort( 0x66 ),	/* Offset= 102 (5690) */
/* 5590 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5592 */	NdrFcShort( 0x2c ),	/* 44 */
/* 5594 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5596 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5598 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5600 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5602 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 5604 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 5606 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5608 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5610 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5612 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 5614 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 5616 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5618 */	NdrFcShort( 0x18 ),	/* 24 */
/* 5620 */	NdrFcShort( 0x18 ),	/* 24 */
/* 5622 */	0x12, 0x0,	/* FC_UP */
/* 5624 */	NdrFcShort( 0xed34 ),	/* Offset= -4812 (812) */
/* 5626 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5628 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5630 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5632 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5634 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5636 */	NdrFcShort( 0xfc20 ),	/* Offset= -992 (4644) */
/* 5638 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 5640 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 5642 */	NdrFcShort( 0x2c ),	/* 44 */
/* 5644 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 5646 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5648 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5650 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5652 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 5654 */	NdrFcShort( 0x2c ),	/* 44 */
/* 5656 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5658 */	NdrFcShort( 0x3 ),	/* 3 */
/* 5660 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5662 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5664 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 5666 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 5668 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5670 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5672 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 5674 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 5676 */	NdrFcShort( 0x18 ),	/* 24 */
/* 5678 */	NdrFcShort( 0x18 ),	/* 24 */
/* 5680 */	0x12, 0x0,	/* FC_UP */
/* 5682 */	NdrFcShort( 0xecfa ),	/* Offset= -4870 (812) */
/* 5684 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 5686 */	0x0,		/* 0 */
			NdrFcShort( 0xff9f ),	/* Offset= -97 (5590) */
			0x5b,		/* FC_END */
/* 5690 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5692 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5694 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5696 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5698 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5700 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5702 */	0x12, 0x0,	/* FC_UP */
/* 5704 */	NdrFcShort( 0xffc0 ),	/* Offset= -64 (5640) */
/* 5706 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5708 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 5710 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 5712 */	NdrFcLong( 0x0 ),	/* 0 */
/* 5716 */	NdrFcLong( 0x7d00 ),	/* 32000 */
/* 5720 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 5722 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5724) */
/* 5724 */	
			0x12, 0x0,	/* FC_UP */
/* 5726 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5728) */
/* 5728 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5730 */	NdrFcShort( 0xc ),	/* 12 */
/* 5732 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5734 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5736 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5738 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5740 */	0x12, 0x0,	/* FC_UP */
/* 5742 */	NdrFcShort( 0xf85a ),	/* Offset= -1958 (3784) */
/* 5744 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5746 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5748 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5750 */	0x12, 0x0,	/* FC_UP */
/* 5752 */	NdrFcShort( 0xf850 ),	/* Offset= -1968 (3784) */
/* 5754 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5756 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 5758 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 5760 */	
			0x11, 0x0,	/* FC_RP */
/* 5762 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5764) */
/* 5764 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 5766 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 5768 */	NdrFcShort( 0xc ),	/* x86 Stack size/offset = 12 */
/* 5770 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5772 */	NdrFcShort( 0xea02 ),	/* Offset= -5630 (142) */
/* 5774 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 5776 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5778) */
/* 5778 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 5780 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 5782 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 5784 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5786 */	NdrFcShort( 0xebae ),	/* Offset= -5202 (584) */
/* 5788 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 5790 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5792) */
/* 5792 */	
			0x12, 0x0,	/* FC_UP */
/* 5794 */	NdrFcShort( 0xb2 ),	/* Offset= 178 (5972) */
/* 5796 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 5798 */	NdrFcLong( 0x0 ),	/* 0 */
/* 5802 */	NdrFcLong( 0xfa0 ),	/* 4000 */
/* 5806 */	
			0x15,		/* FC_STRUCT */
			0x7,		/* 7 */
/* 5808 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5810 */	0xb,		/* FC_HYPER */
			0x5b,		/* FC_END */
/* 5812 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 5814 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 5816 */	NdrFcShort( 0xfff4 ),	/* -12 */
/* 5818 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5820 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5822) */
/* 5822 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5824 */	NdrFcShort( 0x3003 ),	/* 12291 */
/* 5826 */	NdrFcLong( 0x0 ),	/* 0 */
/* 5830 */	NdrFcShort( 0xf748 ),	/* Offset= -2232 (3598) */
/* 5832 */	NdrFcLong( 0x1 ),	/* 1 */
/* 5836 */	NdrFcShort( 0xf742 ),	/* Offset= -2238 (3598) */
/* 5838 */	NdrFcLong( 0x2 ),	/* 2 */
/* 5842 */	NdrFcShort( 0x4 ),	/* Offset= 4 (5846) */
/* 5844 */	NdrFcShort( 0x3a ),	/* Offset= 58 (5902) */
/* 5846 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 5848 */	NdrFcShort( 0x14 ),	/* 20 */
/* 5850 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5852 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5854 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5856 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5858 */	0x12, 0x0,	/* FC_UP */
/* 5860 */	NdrFcShort( 0xec48 ),	/* Offset= -5048 (812) */
/* 5862 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5864 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5866 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5868 */	0x12, 0x0,	/* FC_UP */
/* 5870 */	NdrFcShort( 0xf944 ),	/* Offset= -1724 (4146) */
/* 5872 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 5874 */	NdrFcShort( 0x10 ),	/* 16 */
/* 5876 */	NdrFcShort( 0x10 ),	/* 16 */
/* 5878 */	0x12, 0x0,	/* FC_UP */
/* 5880 */	NdrFcShort( 0xf94c ),	/* Offset= -1716 (4164) */
/* 5882 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5884 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 5886 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 5888 */	0x6,		/* FC_SHORT */
			0x8,		/* FC_LONG */
/* 5890 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 5892 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 5894 */	NdrFcLong( 0x0 ),	/* 0 */
/* 5898 */	NdrFcLong( 0x20000 ),	/* 131072 */
/* 5902 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 5904 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5906 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5908 */	NdrFcShort( 0x8 ),	/* Offset= 8 (5916) */
/* 5910 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5912 */	NdrFcShort( 0xffec ),	/* Offset= -20 (5892) */
/* 5914 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 5916 */	
			0x12, 0x0,	/* FC_UP */
/* 5918 */	NdrFcShort( 0xedbe ),	/* Offset= -4674 (1244) */
/* 5920 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x7,		/* 7 */
/* 5922 */	NdrFcShort( 0x28 ),	/* 40 */
/* 5924 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5926 */	NdrFcShort( 0x0 ),	/* Offset= 0 (5926) */
/* 5928 */	0x8,		/* FC_LONG */
			0xd,		/* FC_ENUM16 */
/* 5930 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5932 */	NdrFcShort( 0xff82 ),	/* Offset= -126 (5806) */
/* 5934 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5936 */	NdrFcShort( 0xff84 ),	/* Offset= -124 (5812) */
/* 5938 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 5940 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 5942 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5944 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 5946 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5948 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 5950 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 5952 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 5954 */	NdrFcShort( 0x4 ),	/* 4 */
/* 5956 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5958 */	NdrFcShort( 0x1 ),	/* 1 */
/* 5960 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5962 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5964 */	0x12, 0x0,	/* FC_UP */
/* 5966 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (5920) */
/* 5968 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 5970 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 5972 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 5974 */	NdrFcShort( 0x8 ),	/* 8 */
/* 5976 */	NdrFcShort( 0x0 ),	/* 0 */
/* 5978 */	NdrFcShort( 0x8 ),	/* Offset= 8 (5986) */
/* 5980 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 5982 */	NdrFcShort( 0xff46 ),	/* Offset= -186 (5796) */
/* 5984 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 5986 */	
			0x12, 0x0,	/* FC_UP */
/* 5988 */	NdrFcShort( 0xffd0 ),	/* Offset= -48 (5940) */
/* 5990 */	
			0x11, 0x0,	/* FC_RP */
/* 5992 */	NdrFcShort( 0x2 ),	/* Offset= 2 (5994) */
/* 5994 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 5996 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 5998 */	NdrFcShort( 0x10 ),	/* x86 Stack size/offset = 16 */
/* 6000 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 6002 */	NdrFcShort( 0xe91c ),	/* Offset= -5860 (142) */
/* 6004 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 6006 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6008) */
/* 6008 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 6010 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 6012 */	NdrFcShort( 0x18 ),	/* x86 Stack size/offset = 24 */
/* 6014 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 6016 */	NdrFcShort( 0xeac8 ),	/* Offset= -5432 (584) */
/* 6018 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 6020 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6022) */
/* 6022 */	
			0x12, 0x0,	/* FC_UP */
/* 6024 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6026) */
/* 6026 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 6028 */	NdrFcShort( 0x10 ),	/* 16 */
/* 6030 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6032 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6034 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6036 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6038 */	0x12, 0x0,	/* FC_UP */
/* 6040 */	NdrFcShort( 0xf724 ),	/* Offset= -2268 (3772) */
/* 6042 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6044 */	NdrFcShort( 0xc ),	/* 12 */
/* 6046 */	NdrFcShort( 0xc ),	/* 12 */
/* 6048 */	0x12, 0x0,	/* FC_UP */
/* 6050 */	NdrFcShort( 0xf682 ),	/* Offset= -2430 (3620) */
/* 6052 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 6054 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6056 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 6058 */	
			0x11, 0x0,	/* FC_RP */
/* 6060 */	NdrFcShort( 0x40 ),	/* Offset= 64 (6124) */
/* 6062 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 6064 */	NdrFcShort( 0x20 ),	/* 32 */
/* 6066 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6068 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6070 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6072 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6074 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6076 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 6078 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 6080 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6082 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6084 */	0x8,		/* FC_LONG */
			0x2,		/* FC_CHAR */
/* 6086 */	0x3f,		/* FC_STRUCTPAD3 */
			0x8,		/* FC_LONG */
/* 6088 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 6090 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 6092 */	NdrFcShort( 0x20 ),	/* 32 */
/* 6094 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 6096 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6098 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 6100 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6102 */	
			0x48,		/* FC_VARIABLE_REPEAT */
			0x49,		/* FC_FIXED_OFFSET */
/* 6104 */	NdrFcShort( 0x20 ),	/* 32 */
/* 6106 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6108 */	NdrFcShort( 0x1 ),	/* 1 */
/* 6110 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6112 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6114 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6116 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 6118 */	
			0x5b,		/* FC_END */

			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 6120 */	0x0,		/* 0 */
			NdrFcShort( 0xffc5 ),	/* Offset= -59 (6062) */
			0x5b,		/* FC_END */
/* 6124 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 6126 */	NdrFcShort( 0x8 ),	/* 8 */
/* 6128 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6130 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6132 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6134 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6136 */	0x12, 0x0,	/* FC_UP */
/* 6138 */	NdrFcShort( 0xffd0 ),	/* Offset= -48 (6090) */
/* 6140 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 6142 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 6144 */	
			0x11, 0x0,	/* FC_RP */
/* 6146 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6148) */
/* 6148 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 6150 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 6152 */	NdrFcShort( 0x14 ),	/* x86 Stack size/offset = 20 */
/* 6154 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 6156 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6158) */
/* 6158 */	NdrFcShort( 0xc ),	/* 12 */
/* 6160 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 6162 */	NdrFcLong( 0x1 ),	/* 1 */
/* 6166 */	NdrFcShort( 0x1e ),	/* Offset= 30 (6196) */
/* 6168 */	NdrFcShort( 0xffff ),	/* Offset= -1 (6167) */
/* 6170 */	
			0x1d,		/* FC_SMFARRAY */
			0x1,		/* 1 */
/* 6172 */	NdrFcShort( 0x100 ),	/* 256 */
/* 6174 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 6176 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 6178 */	NdrFcShort( 0x11c ),	/* 284 */
/* 6180 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6182 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6184 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 6186 */	0x0,		/* 0 */
			NdrFcShort( 0xffef ),	/* Offset= -17 (6170) */
			0x6,		/* FC_SHORT */
/* 6190 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 6192 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 6194 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 6196 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 6198 */	NdrFcShort( 0xc ),	/* 12 */
/* 6200 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6202 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6204 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6206 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6208 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6210 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 6212 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6214 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6216 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6218 */	0x12, 0x0,	/* FC_UP */
/* 6220 */	NdrFcShort( 0xffd4 ),	/* Offset= -44 (6176) */
/* 6222 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6224 */	NdrFcShort( 0x8 ),	/* 8 */
/* 6226 */	NdrFcShort( 0x8 ),	/* 8 */
/* 6228 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6230 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 6232 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 6234 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6236 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 6238 */	
			0x11, 0x0,	/* FC_RP */
/* 6240 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6242) */
/* 6242 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 6244 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x54,		/* FC_DEREFERENCE */
/* 6246 */	NdrFcShort( 0x1c ),	/* x86 Stack size/offset = 28 */
/* 6248 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 6250 */	NdrFcShort( 0x2 ),	/* Offset= 2 (6252) */
/* 6252 */	NdrFcShort( 0xc ),	/* 12 */
/* 6254 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 6256 */	NdrFcLong( 0x1 ),	/* 1 */
/* 6260 */	NdrFcShort( 0x4 ),	/* Offset= 4 (6264) */
/* 6262 */	NdrFcShort( 0xffff ),	/* Offset= -1 (6261) */
/* 6264 */	
			0x16,		/* FC_PSTRUCT */
			0x3,		/* 3 */
/* 6266 */	NdrFcShort( 0xc ),	/* 12 */
/* 6268 */	
			0x4b,		/* FC_PP */
			0x5c,		/* FC_PAD */
/* 6270 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6272 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6274 */	NdrFcShort( 0x0 ),	/* 0 */
/* 6276 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6278 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 6280 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6282 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6284 */	NdrFcShort( 0x4 ),	/* 4 */
/* 6286 */	0x12, 0x10,	/* FC_UP [pointer_deref] */
/* 6288 */	NdrFcShort( 0xe772 ),	/* Offset= -6286 (2) */
/* 6290 */	
			0x46,		/* FC_NO_REPEAT */
			0x5c,		/* FC_PAD */
/* 6292 */	NdrFcShort( 0x8 ),	/* 8 */
/* 6294 */	NdrFcShort( 0x8 ),	/* 8 */
/* 6296 */	0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 6298 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 6300 */	
			0x5b,		/* FC_END */

			0x8,		/* FC_LONG */
/* 6302 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 6304 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */

			0x0
";
        #endregion

        #region X64
        // NRPC offset of proc format string for every procedure, copied from MIDL generated stub.
        internal static readonly ushort[] X64_ProcFormatStringOffsetTable = new ushort[]
        {
       0,
    62,
    124,
    216,
    290,
    352,
    426,
    506,
    592,
    678,
    788,
    898,
    954,
    1016,
    1072,
    1140,
    1220,
    1312,
    1392,
    1460,
    1510,
    1584,
    1658,
    1714,
    1770,
    1844,
    1918,
    2004,
    2078,
    2128,
    2208,
    2288,
    2368,
    2442,
    2504,
    2590,
    2646,
    2696,
    2758,
    2808,
    2892,
    2948,
    3016,
    3102,
    3164,
    3238,
    3336,
    3428,
    3464,
    3544
        };


        // NRPC proc format string generated by midl
        private const string X64_PROC_FORMAT_STRING = @"
/* Procedure NetrLogonUasLogon */

			0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/*  2 */	NdrFcLong( 0x0 ),	/* 0 */
/*  6 */	NdrFcShort( 0x0 ),	/* 0 */
/*  8 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 10 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 12 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 14 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 16 */	NdrFcShort( 0x0 ),	/* 0 */
/* 18 */	NdrFcShort( 0x8 ),	/* 8 */
/* 20 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 22 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 24 */	NdrFcShort( 0x0 ),	/* 0 */
/* 26 */	NdrFcShort( 0x0 ),	/* 0 */
/* 28 */	NdrFcShort( 0x0 ),	/* 0 */
/* 30 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 32 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 34 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 36 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter UserName */

/* 38 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 40 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 42 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Workstation */

/* 44 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 46 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 48 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ValidationInformation */

/* 50 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 52 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 54 */	NdrFcShort( 0xa ),	/* Type Offset=10 */

	/* Return value */

/* 56 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 58 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 60 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonUasLogoff */

/* 62 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 64 */	NdrFcLong( 0x0 ),	/* 0 */
/* 68 */	NdrFcShort( 0x1 ),	/* 1 */
/* 70 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 72 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 74 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 76 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 78 */	NdrFcShort( 0x0 ),	/* 0 */
/* 80 */	NdrFcShort( 0x8 ),	/* 8 */
/* 82 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 84 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 86 */	NdrFcShort( 0x0 ),	/* 0 */
/* 88 */	NdrFcShort( 0x0 ),	/* 0 */
/* 90 */	NdrFcShort( 0x0 ),	/* 0 */
/* 92 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 94 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 96 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 98 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter UserName */

/* 100 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 102 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 104 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Workstation */

/* 106 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 108 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 110 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter LogoffInformation */

/* 112 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 114 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 116 */	NdrFcShort( 0x42 ),	/* Type Offset=66 */

	/* Return value */

/* 118 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 120 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 122 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogon */

/* 124 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 126 */	NdrFcLong( 0x0 ),	/* 0 */
/* 130 */	NdrFcShort( 0x2 ),	/* 2 */
/* 132 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 134 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 136 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 138 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 140 */	NdrFcShort( 0xac ),	/* 172 */
/* 142 */	NdrFcShort( 0x71 ),	/* 113 */
/* 144 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 146 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 148 */	NdrFcShort( 0x1 ),	/* 1 */
/* 150 */	NdrFcShort( 0x1 ),	/* 1 */
/* 152 */	NdrFcShort( 0x0 ),	/* 0 */
/* 154 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 156 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 158 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 160 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 162 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 164 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 166 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 168 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 170 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 172 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter ReturnAuthenticator */

/* 174 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 176 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 178 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter LogonLevel */

/* 180 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 182 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 184 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 186 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 188 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 190 */	NdrFcShort( 0x70 ),	/* Type Offset=112 */

	/* Parameter ValidationLevel */

/* 192 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 194 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 196 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationInformation */

/* 198 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 200 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 202 */	NdrFcShort( 0x18e ),	/* Type Offset=398 */

	/* Parameter Authoritative */

/* 204 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 206 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 208 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Return value */

/* 210 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 212 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 214 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogoff */

/* 216 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 218 */	NdrFcLong( 0x0 ),	/* 0 */
/* 222 */	NdrFcShort( 0x3 ),	/* 3 */
/* 224 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 226 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 228 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 230 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 232 */	NdrFcShort( 0xa6 ),	/* 166 */
/* 234 */	NdrFcShort( 0x58 ),	/* 88 */
/* 236 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 238 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 240 */	NdrFcShort( 0x0 ),	/* 0 */
/* 242 */	NdrFcShort( 0x1 ),	/* 1 */
/* 244 */	NdrFcShort( 0x0 ),	/* 0 */
/* 246 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 248 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 250 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 252 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 254 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 256 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 258 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 260 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 262 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 264 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter ReturnAuthenticator */

/* 266 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 268 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 270 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter LogonLevel */

/* 272 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 274 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 276 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 278 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 280 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 282 */	NdrFcShort( 0x3b8 ),	/* Type Offset=952 */

	/* Return value */

/* 284 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 286 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 288 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerReqChallenge */

/* 290 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 292 */	NdrFcLong( 0x0 ),	/* 0 */
/* 296 */	NdrFcShort( 0x4 ),	/* 4 */
/* 298 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 300 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 302 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 304 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 306 */	NdrFcShort( 0x3c ),	/* 60 */
/* 308 */	NdrFcShort( 0x44 ),	/* 68 */
/* 310 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 312 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 314 */	NdrFcShort( 0x0 ),	/* 0 */
/* 316 */	NdrFcShort( 0x0 ),	/* 0 */
/* 318 */	NdrFcShort( 0x0 ),	/* 0 */
/* 320 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 322 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 324 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 326 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 328 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 330 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 332 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientChallenge */

/* 334 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 336 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 338 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter ServerChallenge */

/* 340 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 342 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 344 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Return value */

/* 346 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 348 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 350 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate */

/* 352 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 354 */	NdrFcLong( 0x0 ),	/* 0 */
/* 358 */	NdrFcShort( 0x5 ),	/* 5 */
/* 360 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 362 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 364 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 366 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 368 */	NdrFcShort( 0x42 ),	/* 66 */
/* 370 */	NdrFcShort( 0x44 ),	/* 68 */
/* 372 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 374 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 376 */	NdrFcShort( 0x0 ),	/* 0 */
/* 378 */	NdrFcShort( 0x0 ),	/* 0 */
/* 380 */	NdrFcShort( 0x0 ),	/* 0 */
/* 382 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 384 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 386 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 388 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 390 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 392 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 394 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 396 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 398 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 400 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 402 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 404 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 406 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 408 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 410 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 412 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter ServerCredential */

/* 414 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 416 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 418 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Return value */

/* 420 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 422 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 424 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordSet */

/* 426 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 428 */	NdrFcLong( 0x0 ),	/* 0 */
/* 432 */	NdrFcShort( 0x6 ),	/* 6 */
/* 434 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 436 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 438 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 440 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 442 */	NdrFcShort( 0xca ),	/* 202 */
/* 444 */	NdrFcShort( 0x58 ),	/* 88 */
/* 446 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 448 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 450 */	NdrFcShort( 0x0 ),	/* 0 */
/* 452 */	NdrFcShort( 0x0 ),	/* 0 */
/* 454 */	NdrFcShort( 0x0 ),	/* 0 */
/* 456 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 458 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 460 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 462 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 464 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 466 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 468 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 470 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 472 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 474 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 476 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 478 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 480 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 482 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 484 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 486 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 488 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 490 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 492 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter UasNewPassword */

/* 494 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 496 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 498 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Return value */

/* 500 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 502 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 504 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseDeltas */

/* 506 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 508 */	NdrFcLong( 0x0 ),	/* 0 */
/* 512 */	NdrFcShort( 0x7 ),	/* 7 */
/* 514 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 516 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 518 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 520 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 522 */	NdrFcShort( 0xec ),	/* 236 */
/* 524 */	NdrFcShort( 0x94 ),	/* 148 */
/* 526 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 528 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 530 */	NdrFcShort( 0x1 ),	/* 1 */
/* 532 */	NdrFcShort( 0x0 ),	/* 0 */
/* 534 */	NdrFcShort( 0x0 ),	/* 0 */
/* 536 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 538 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 540 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 542 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 544 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 546 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 548 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 550 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 552 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 554 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 556 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 558 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 560 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter DatabaseID */

/* 562 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 564 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 566 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainModifiedCount */

/* 568 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 570 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 572 */	NdrFcShort( 0x3da ),	/* Type Offset=986 */

	/* Parameter DeltaArray */

/* 574 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 576 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 578 */	NdrFcShort( 0x3e4 ),	/* Type Offset=996 */

	/* Parameter PreferredMaximumLength */

/* 580 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 582 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 584 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 586 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 588 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 590 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseSync */

/* 592 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 594 */	NdrFcLong( 0x0 ),	/* 0 */
/* 598 */	NdrFcShort( 0x8 ),	/* 8 */
/* 600 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 602 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 604 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 606 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 608 */	NdrFcShort( 0xcc ),	/* 204 */
/* 610 */	NdrFcShort( 0x74 ),	/* 116 */
/* 612 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 614 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 616 */	NdrFcShort( 0x1 ),	/* 1 */
/* 618 */	NdrFcShort( 0x0 ),	/* 0 */
/* 620 */	NdrFcShort( 0x0 ),	/* 0 */
/* 622 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 624 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 626 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 628 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 630 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 632 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 634 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 636 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 638 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 640 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 642 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 644 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 646 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter DatabaseID */

/* 648 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 650 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 652 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter SyncContext */

/* 654 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 656 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 658 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 660 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 662 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 664 */	NdrFcShort( 0x3e4 ),	/* Type Offset=996 */

	/* Parameter PreferredMaximumLength */

/* 666 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 668 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 670 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 672 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 674 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 676 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrAccountDeltas */

/* 678 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 680 */	NdrFcLong( 0x0 ),	/* 0 */
/* 684 */	NdrFcShort( 0x9 ),	/* 9 */
/* 686 */	NdrFcShort( 0x68 ),	/* X64 Stack size/offset = 104 */
/* 688 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 690 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 692 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 694 */	NdrFcShort( 0x104 ),	/* 260 */
/* 696 */	NdrFcShort( 0xdc ),	/* 220 */
/* 698 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xd,		/* 13 */
/* 700 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 702 */	NdrFcShort( 0x1 ),	/* 1 */
/* 704 */	NdrFcShort( 0x0 ),	/* 0 */
/* 706 */	NdrFcShort( 0x0 ),	/* 0 */
/* 708 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 710 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 712 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 714 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 716 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 718 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 720 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 722 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 724 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 726 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 728 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 730 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 732 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter RecordId */

/* 734 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 736 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 738 */	NdrFcShort( 0x93e ),	/* Type Offset=2366 */

	/* Parameter Count */

/* 740 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 742 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 744 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Level */

/* 746 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 748 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 750 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 752 */	NdrFcShort( 0x113 ),	/* Flags:  must size, must free, out, simple ref, */
/* 754 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 756 */	NdrFcShort( 0x94e ),	/* Type Offset=2382 */

	/* Parameter BufferSize */

/* 758 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 760 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 762 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter CountReturned */

/* 764 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 766 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 768 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TotalEntries */

/* 770 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 772 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 774 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NextRecordId */

/* 776 */	NdrFcShort( 0x6112 ),	/* Flags:  must free, out, simple ref, srv alloc size=24 */
/* 778 */	NdrFcShort( 0x58 ),	/* X64 Stack size/offset = 88 */
/* 780 */	NdrFcShort( 0x93e ),	/* Type Offset=2366 */

	/* Return value */

/* 782 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 784 */	NdrFcShort( 0x60 ),	/* X64 Stack size/offset = 96 */
/* 786 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrAccountSync */

/* 788 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 790 */	NdrFcLong( 0x0 ),	/* 0 */
/* 794 */	NdrFcShort( 0xa ),	/* 10 */
/* 796 */	NdrFcShort( 0x68 ),	/* X64 Stack size/offset = 104 */
/* 798 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 800 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 802 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 804 */	NdrFcShort( 0xb8 ),	/* 184 */
/* 806 */	NdrFcShort( 0xf8 ),	/* 248 */
/* 808 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xd,		/* 13 */
/* 810 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 812 */	NdrFcShort( 0x1 ),	/* 1 */
/* 814 */	NdrFcShort( 0x0 ),	/* 0 */
/* 816 */	NdrFcShort( 0x0 ),	/* 0 */
/* 818 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 820 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 822 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 824 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 826 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 828 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 830 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 832 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 834 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 836 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 838 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 840 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 842 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter Reference */

/* 844 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 846 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 848 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Level */

/* 850 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 852 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 854 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 856 */	NdrFcShort( 0x113 ),	/* Flags:  must size, must free, out, simple ref, */
/* 858 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 860 */	NdrFcShort( 0x966 ),	/* Type Offset=2406 */

	/* Parameter BufferSize */

/* 862 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 864 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 866 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter CountReturned */

/* 868 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 870 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 872 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter TotalEntries */

/* 874 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 876 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 878 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NextReference */

/* 880 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 882 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 884 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter LastRecordId */

/* 886 */	NdrFcShort( 0x6112 ),	/* Flags:  must free, out, simple ref, srv alloc size=24 */
/* 888 */	NdrFcShort( 0x58 ),	/* X64 Stack size/offset = 88 */
/* 890 */	NdrFcShort( 0x93e ),	/* Type Offset=2366 */

	/* Return value */

/* 892 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 894 */	NdrFcShort( 0x60 ),	/* X64 Stack size/offset = 96 */
/* 896 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetDCName */

/* 898 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 900 */	NdrFcLong( 0x0 ),	/* 0 */
/* 904 */	NdrFcShort( 0xb ),	/* 11 */
/* 906 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 908 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 910 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 912 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 914 */	NdrFcShort( 0x0 ),	/* 0 */
/* 916 */	NdrFcShort( 0x8 ),	/* 8 */
/* 918 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 920 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 922 */	NdrFcShort( 0x0 ),	/* 0 */
/* 924 */	NdrFcShort( 0x0 ),	/* 0 */
/* 926 */	NdrFcShort( 0x0 ),	/* 0 */
/* 928 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 930 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 932 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 934 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter DomainName */

/* 936 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 938 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 940 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Buffer */

/* 942 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 944 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 946 */	NdrFcShort( 0x972 ),	/* Type Offset=2418 */

	/* Return value */

/* 948 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 950 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 952 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl */

/* 954 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 956 */	NdrFcLong( 0x0 ),	/* 0 */
/* 960 */	NdrFcShort( 0xc ),	/* 12 */
/* 962 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 964 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 966 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 968 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 970 */	NdrFcShort( 0x10 ),	/* 16 */
/* 972 */	NdrFcShort( 0x8 ),	/* 8 */
/* 974 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 976 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 978 */	NdrFcShort( 0x1 ),	/* 1 */
/* 980 */	NdrFcShort( 0x0 ),	/* 0 */
/* 982 */	NdrFcShort( 0x0 ),	/* 0 */
/* 984 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 986 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 988 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 990 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 992 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 994 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 996 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 998 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1000 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1002 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Buffer */

/* 1004 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1006 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1008 */	NdrFcShort( 0x97a ),	/* Type Offset=2426 */

	/* Return value */

/* 1010 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1012 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1014 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetAnyDCName */

/* 1016 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1018 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1022 */	NdrFcShort( 0xd ),	/* 13 */
/* 1024 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1026 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1028 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1030 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1032 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1034 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1036 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1038 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1040 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1042 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1044 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1046 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1048 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1050 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1052 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1054 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1056 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1058 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Buffer */

/* 1060 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1062 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1064 */	NdrFcShort( 0x972 ),	/* Type Offset=2418 */

	/* Return value */

/* 1066 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1068 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1070 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl2 */

/* 1072 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1074 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1078 */	NdrFcShort( 0xe ),	/* 14 */
/* 1080 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1082 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1084 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1086 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1088 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1090 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1092 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 1094 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1096 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1098 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1100 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1102 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1104 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1106 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1108 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 1110 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1112 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1114 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 1116 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1118 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1120 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Data */

/* 1122 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1124 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1126 */	NdrFcShort( 0x9e8 ),	/* Type Offset=2536 */

	/* Parameter Buffer */

/* 1128 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1130 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1132 */	NdrFcShort( 0xa20 ),	/* Type Offset=2592 */

	/* Return value */

/* 1134 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1136 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1138 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate2 */

/* 1140 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1142 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1146 */	NdrFcShort( 0xf ),	/* 15 */
/* 1148 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 1150 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1152 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1154 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1156 */	NdrFcShort( 0x5e ),	/* 94 */
/* 1158 */	NdrFcShort( 0x60 ),	/* 96 */
/* 1160 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 1162 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1164 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1166 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1168 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1170 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1172 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1174 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1176 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 1178 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1180 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1182 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 1184 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1186 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1188 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 1190 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1192 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1194 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 1196 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1198 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1200 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter ServerCredential */

/* 1202 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1204 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1206 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter NegotiateFlags */

/* 1208 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1210 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1212 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1214 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1216 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1218 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseSync2 */

/* 1220 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1222 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1226 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1228 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 1230 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1232 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1234 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1236 */	NdrFcShort( 0xd2 ),	/* 210 */
/* 1238 */	NdrFcShort( 0x74 ),	/* 116 */
/* 1240 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 1242 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1244 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1246 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1248 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1250 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1252 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1254 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1256 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1258 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1260 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1262 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 1264 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1266 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1268 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 1270 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1272 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1274 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter DatabaseID */

/* 1276 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1278 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1280 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter RestartState */

/* 1282 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1284 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1286 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter SyncContext */

/* 1288 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1290 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1292 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 1294 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1296 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1298 */	NdrFcShort( 0x3e4 ),	/* Type Offset=996 */

	/* Parameter PreferredMaximumLength */

/* 1300 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1302 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 1304 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1306 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1308 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 1310 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrDatabaseRedo */

/* 1312 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1314 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1318 */	NdrFcShort( 0x11 ),	/* 17 */
/* 1320 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 1322 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1324 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1326 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1328 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 1330 */	NdrFcShort( 0x58 ),	/* 88 */
/* 1332 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 1334 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1336 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1338 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1340 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1342 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1344 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1346 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1348 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1350 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1352 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1354 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 1356 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1358 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1360 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 1362 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1364 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1366 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ChangeLogEntry */

/* 1368 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1370 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1372 */	NdrFcShort( 0xa2e ),	/* Type Offset=2606 */

	/* Parameter ChangeLogEntrySize */

/* 1374 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1376 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1378 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DeltaArray */

/* 1380 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1382 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1384 */	NdrFcShort( 0x3e4 ),	/* Type Offset=996 */

	/* Return value */

/* 1386 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1388 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1390 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonControl2Ex */

/* 1392 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1394 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1398 */	NdrFcShort( 0x12 ),	/* 18 */
/* 1400 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1402 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1404 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1406 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1408 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1410 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1412 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 1414 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 1416 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1418 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1420 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1422 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1424 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1426 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1428 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter FunctionCode */

/* 1430 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1432 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1434 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter QueryLevel */

/* 1436 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1438 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1440 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Data */

/* 1442 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1444 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1446 */	NdrFcShort( 0xa3e ),	/* Type Offset=2622 */

	/* Parameter Buffer */

/* 1448 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1450 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1452 */	NdrFcShort( 0xa4c ),	/* Type Offset=2636 */

	/* Return value */

/* 1454 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1456 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1458 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrEnumerateTrustedDomains */

/* 1460 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1462 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1466 */	NdrFcShort( 0x13 ),	/* 19 */
/* 1468 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1470 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1472 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1474 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1476 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1478 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1480 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 1482 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1484 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1486 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1488 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1490 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1492 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1494 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1496 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainNameBuffer */

/* 1498 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 1500 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1502 */	NdrFcShort( 0xa5a ),	/* Type Offset=2650 */

	/* Return value */

/* 1504 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1506 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1508 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcName */

/* 1510 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1512 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1516 */	NdrFcShort( 0x14 ),	/* 20 */
/* 1518 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1520 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1522 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1524 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1526 */	NdrFcShort( 0x90 ),	/* 144 */
/* 1528 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1530 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1532 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1534 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1536 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1538 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1540 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 1542 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1544 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1546 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1548 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1550 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1552 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 1554 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 1556 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1558 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter SiteGuid */

/* 1560 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 1562 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1564 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter Flags */

/* 1566 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1568 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1570 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 1572 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 1574 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1576 */	NdrFcShort( 0xa80 ),	/* Type Offset=2688 */

	/* Return value */

/* 1578 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1580 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1582 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetCapabilities */

/* 1584 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1586 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1590 */	NdrFcShort( 0x15 ),	/* 21 */
/* 1592 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1594 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1596 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1598 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1600 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 1602 */	NdrFcShort( 0x58 ),	/* 88 */
/* 1604 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1606 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 1608 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1610 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1612 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1614 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1616 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1618 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1620 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 1622 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1624 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1626 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 1628 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1630 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1632 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 1634 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 1636 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1638 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter QueryLevel */

/* 1640 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1642 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1644 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ServerCapabilities */

/* 1646 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 1648 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1650 */	NdrFcShort( 0xabc ),	/* Type Offset=2748 */

	/* Return value */

/* 1652 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1654 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1656 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSetServiceBits */

/* 1658 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1660 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1664 */	NdrFcShort( 0x16 ),	/* 22 */
/* 1666 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1668 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1670 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1672 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1674 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1676 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1678 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1680 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1682 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1684 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1686 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1688 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1690 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1692 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1694 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ServiceBitsOfInterest */

/* 1696 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1698 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1700 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ServiceBits */

/* 1702 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1704 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1706 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1708 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1710 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1712 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetTrustRid */

/* 1714 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1716 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1720 */	NdrFcShort( 0x17 ),	/* 23 */
/* 1722 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1724 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1726 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1728 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1730 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1732 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1734 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 1736 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1738 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1740 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1742 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1744 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1746 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1748 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1750 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1752 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1754 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1756 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Rid */

/* 1758 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1760 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1762 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1764 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1766 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1768 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonComputeServerDigest */

/* 1770 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1772 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1776 */	NdrFcShort( 0x18 ),	/* 24 */
/* 1778 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1780 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1782 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1784 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1786 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1788 */	NdrFcShort( 0x48 ),	/* 72 */
/* 1790 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1792 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1794 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1796 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1798 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1800 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1802 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1804 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1806 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Rid */

/* 1808 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1810 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1812 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Message */

/* 1814 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1816 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1818 */	NdrFcShort( 0xad6 ),	/* Type Offset=2774 */

	/* Parameter MessageSize */

/* 1820 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1822 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1824 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NewMessageDigest */

/* 1826 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1828 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1830 */	NdrFcShort( 0x938 ),	/* Type Offset=2360 */

	/* Parameter OldMessageDigest */

/* 1832 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1834 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1836 */	NdrFcShort( 0x938 ),	/* Type Offset=2360 */

	/* Return value */

/* 1838 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1840 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1842 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonComputeClientDigest */

/* 1844 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1846 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1850 */	NdrFcShort( 0x19 ),	/* 25 */
/* 1852 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1854 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1856 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1858 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1860 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1862 */	NdrFcShort( 0x48 ),	/* 72 */
/* 1864 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 1866 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 1868 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1870 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1872 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1874 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 1876 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1878 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1880 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 1882 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1884 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1886 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Message */

/* 1888 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1890 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1892 */	NdrFcShort( 0xad6 ),	/* Type Offset=2774 */

	/* Parameter MessageSize */

/* 1894 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1896 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1898 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter NewMessageDigest */

/* 1900 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1902 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1904 */	NdrFcShort( 0x938 ),	/* Type Offset=2360 */

	/* Parameter OldMessageDigest */

/* 1906 */	NdrFcShort( 0x12 ),	/* Flags:  must free, out, */
/* 1908 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1910 */	NdrFcShort( 0x938 ),	/* Type Offset=2360 */

	/* Return value */

/* 1912 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 1914 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1916 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerAuthenticate3 */

/* 1918 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 1920 */	NdrFcLong( 0x0 ),	/* 0 */
/* 1924 */	NdrFcShort( 0x1a ),	/* 26 */
/* 1926 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 1928 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 1930 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1932 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 1934 */	NdrFcShort( 0x5e ),	/* 94 */
/* 1936 */	NdrFcShort( 0x7c ),	/* 124 */
/* 1938 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 1940 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 1942 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1944 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1946 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1948 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 1950 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 1952 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 1954 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 1956 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1958 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 1960 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 1962 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 1964 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 1966 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 1968 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 1970 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 1972 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ClientCredential */

/* 1974 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 1976 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 1978 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter ServerCredential */

/* 1980 */	NdrFcShort( 0x2112 ),	/* Flags:  must free, out, simple ref, srv alloc size=8 */
/* 1982 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 1984 */	NdrFcShort( 0x58 ),	/* Type Offset=88 */

	/* Parameter NegotiateFlags */

/* 1986 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 1988 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 1990 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter AccountRid */

/* 1992 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 1994 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 1996 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 1998 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2000 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2002 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcNameEx */

/* 2004 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2006 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2010 */	NdrFcShort( 0x1b ),	/* 27 */
/* 2012 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2014 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2016 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2018 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2020 */	NdrFcShort( 0x4c ),	/* 76 */
/* 2022 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2024 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 2026 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2028 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2030 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2032 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2034 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2036 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2038 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2040 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 2042 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2044 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2046 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 2048 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2050 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2052 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter SiteName */

/* 2054 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2056 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2058 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2060 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2062 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2064 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 2066 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2068 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2070 */	NdrFcShort( 0xa80 ),	/* Type Offset=2688 */

	/* Return value */

/* 2072 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2074 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2076 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetSiteName */

/* 2078 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2080 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2084 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2086 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2088 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2090 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2092 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2094 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2096 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2098 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2100 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2102 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2104 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2106 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2108 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2110 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2112 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2114 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter SiteName */

/* 2116 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2118 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2120 */	NdrFcShort( 0x972 ),	/* Type Offset=2418 */

	/* Return value */

/* 2122 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2124 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2126 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetDomainInfo */

/* 2128 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2130 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2134 */	NdrFcShort( 0x1d ),	/* 29 */
/* 2136 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2138 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2140 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2142 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2144 */	NdrFcShort( 0xa8 ),	/* 168 */
/* 2146 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2148 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2150 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2152 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2154 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2156 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2158 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2160 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2162 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2164 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ComputerName */

/* 2166 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2168 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2170 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 2172 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2174 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2176 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 2178 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 2180 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2182 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter Level */

/* 2184 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2186 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2188 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter WkstaBuffer */

/* 2190 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2192 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2194 */	NdrFcShort( 0xae6 ),	/* Type Offset=2790 */

	/* Parameter DomBuffer */

/* 2196 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2198 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2200 */	NdrFcShort( 0xb5a ),	/* Type Offset=2906 */

	/* Return value */

/* 2202 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2204 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2206 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordSet2 */

/* 2208 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2210 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2214 */	NdrFcShort( 0x1e ),	/* 30 */
/* 2216 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2218 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2220 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2222 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2224 */	NdrFcShort( 0x28e ),	/* 654 */
/* 2226 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2228 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2230 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2232 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2234 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2236 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2238 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2240 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2242 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2244 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2246 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2248 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2250 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 2252 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2254 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2256 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 2258 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2260 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2262 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2264 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2266 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2268 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 2270 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2272 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2274 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ClearNewPassword */

/* 2276 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2278 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2280 */	NdrFcShort( 0xbfc ),	/* Type Offset=3068 */

	/* Return value */

/* 2282 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2284 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2286 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerPasswordGet */

/* 2288 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2290 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2294 */	NdrFcShort( 0x1f ),	/* 31 */
/* 2296 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2298 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2300 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2302 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2304 */	NdrFcShort( 0x56 ),	/* 86 */
/* 2306 */	NdrFcShort( 0xcc ),	/* 204 */
/* 2308 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 2310 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2312 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2314 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2316 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2318 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2320 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2322 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2324 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2326 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2328 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2330 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter AccountType */

/* 2332 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2334 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2336 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 2338 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2340 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2342 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2344 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2346 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2348 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 2350 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2352 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2354 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter EncryptedNtOwfPassword */

/* 2356 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2358 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2360 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Return value */

/* 2362 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2364 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2366 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSendToSam */

/* 2368 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2370 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2374 */	NdrFcShort( 0x20 ),	/* 32 */
/* 2376 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2378 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2380 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2382 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2384 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2386 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2388 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 2390 */	0xa,		/* 10 */
			0x5,		/* Ext Flags:  new corr desc, srv corr check, */
/* 2392 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2394 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2396 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2398 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 2400 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2402 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2404 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 2406 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2408 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2410 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 2412 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 2414 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2416 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 2418 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 2420 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2422 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter OpaqueBuffer */

/* 2424 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2426 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2428 */	NdrFcShort( 0xa2e ),	/* Type Offset=2606 */

	/* Parameter OpaqueBufferSize */

/* 2430 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2432 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2434 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 2436 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2438 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2440 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrAddressToSiteNamesW */

/* 2442 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2444 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2448 */	NdrFcShort( 0x21 ),	/* 33 */
/* 2450 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2452 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2454 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2456 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2458 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2460 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2462 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2464 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2466 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2468 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2470 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2472 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2474 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2476 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2478 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter EntryCount */

/* 2480 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 2482 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2484 */	NdrFcShort( 0xc0a ),	/* 3082 */

	/* Parameter SocketAddresses */

/* 2486 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2488 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2490 */	NdrFcShort( 0xc34 ),	/* Type Offset=3124 */

	/* Parameter SiteNames */

/* 2492 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2494 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2496 */	NdrFcShort( 0xc4a ),	/* Type Offset=3146 */

	/* Return value */

/* 2498 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2500 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2502 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcNameEx2 */

/* 2504 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2506 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2510 */	NdrFcShort( 0x22 ),	/* 34 */
/* 2512 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 2514 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2516 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2518 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2520 */	NdrFcShort( 0x54 ),	/* 84 */
/* 2522 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2524 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 2526 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2528 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2530 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2532 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2534 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2536 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2538 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2540 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 2542 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2544 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2546 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AllowableAccountControlBits */

/* 2548 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2550 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2552 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainName */

/* 2554 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2556 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2558 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 2560 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2562 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2564 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter SiteName */

/* 2566 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2568 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2570 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2572 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2574 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2576 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DomainControllerInfo */

/* 2578 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2580 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2582 */	NdrFcShort( 0xa80 ),	/* Type Offset=2688 */

	/* Return value */

/* 2584 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2586 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2588 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonGetTimeServiceParentDomain */

/* 2590 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2592 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2596 */	NdrFcShort( 0x23 ),	/* 35 */
/* 2598 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2600 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2602 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2604 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2606 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2608 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2610 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2612 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2614 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2616 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2618 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2620 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2622 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2624 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2626 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainName */

/* 2628 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2630 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2632 */	NdrFcShort( 0x972 ),	/* Type Offset=2418 */

	/* Parameter PdcSameSite */

/* 2634 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 2636 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2638 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 2640 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2642 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2644 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrEnumerateTrustedDomainsEx */

/* 2646 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2648 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2652 */	NdrFcShort( 0x24 ),	/* 36 */
/* 2654 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2656 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2658 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2660 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2662 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2664 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2666 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2668 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2670 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2672 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2674 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2676 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2678 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2680 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2682 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Domains */

/* 2684 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 2686 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2688 */	NdrFcShort( 0xc9c ),	/* Type Offset=3228 */

	/* Return value */

/* 2690 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2692 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2694 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrAddressToSiteNamesExW */

/* 2696 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2698 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2702 */	NdrFcShort( 0x25 ),	/* 37 */
/* 2704 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2706 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2708 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2710 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2712 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2714 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2716 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 2718 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2720 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2722 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2724 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2726 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ComputerName */

/* 2728 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2730 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2732 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter EntryCount */

/* 2734 */	NdrFcShort( 0x88 ),	/* Flags:  in, by val, */
/* 2736 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2738 */	NdrFcShort( 0xcac ),	/* 3244 */

	/* Parameter SocketAddresses */

/* 2740 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2742 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2744 */	NdrFcShort( 0xc34 ),	/* Type Offset=3124 */

	/* Parameter SiteNames */

/* 2746 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2748 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2750 */	NdrFcShort( 0xcb6 ),	/* Type Offset=3254 */

	/* Return value */

/* 2752 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2754 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2756 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetDcSiteCoverageW */

/* 2758 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2760 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2764 */	NdrFcShort( 0x26 ),	/* 38 */
/* 2766 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2768 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2770 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2772 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2774 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2776 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2778 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x3,		/* 3 */
/* 2780 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2782 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2784 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2786 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2788 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2790 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2792 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2794 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter SiteNames */

/* 2796 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 2798 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2800 */	NdrFcShort( 0xc4a ),	/* Type Offset=3146 */

	/* Return value */

/* 2802 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2804 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2806 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogonEx */

/* 2808 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2810 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2814 */	NdrFcShort( 0x27 ),	/* 39 */
/* 2816 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 2818 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 2820 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2822 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2824 */	NdrFcShort( 0x3d ),	/* 61 */
/* 2826 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 2828 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 2830 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2832 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2834 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2836 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ContextHandle */

/* 2838 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2840 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2842 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter LogonServer */

/* 2844 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2846 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2848 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 2850 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2852 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2854 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonLevel */

/* 2856 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 2858 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2860 */	NdrFcShort( 0xcd8 ),	/* Type Offset=3288 */

	/* Parameter LogonInformation */

/* 2862 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2864 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2866 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationLevel */

/* 2868 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 2870 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2872 */	NdrFcShort( 0xce6 ),	/* Type Offset=3302 */

	/* Parameter ValidationInformation */

/* 2874 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 2876 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2878 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter Authoritative */

/* 2880 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 2882 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2884 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ExtraFlags */

/* 2886 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2888 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 2890 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrEnumerateDomainTrusts */


	/* Return value */

/* 2892 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2894 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2898 */	NdrFcShort( 0x28 ),	/* 40 */
/* 2900 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2902 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2904 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2906 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2908 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2910 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2912 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x4,		/* 4 */
/* 2914 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 2916 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2918 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2920 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2922 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2924 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2926 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2928 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 2930 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 2932 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2934 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter Domains */

/* 2936 */	NdrFcShort( 0x4113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=16 */
/* 2938 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2940 */	NdrFcShort( 0xc9c ),	/* Type Offset=3228 */

	/* Return value */

/* 2942 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 2944 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2946 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrDeregisterDnsHostRecords */

/* 2948 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 2950 */	NdrFcLong( 0x0 ),	/* 0 */
/* 2954 */	NdrFcShort( 0x29 ),	/* 41 */
/* 2956 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 2958 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 2960 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2962 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 2964 */	NdrFcShort( 0x88 ),	/* 136 */
/* 2966 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2968 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x6,		/* 6 */
/* 2970 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 2972 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2974 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2976 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2978 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 2980 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2982 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 2984 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DnsDomainName */

/* 2986 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 2988 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2990 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DomainGuid */

/* 2992 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 2994 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2996 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter DsaGuid */

/* 2998 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 3000 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3002 */	NdrFcShort( 0xa6a ),	/* Type Offset=2666 */

	/* Parameter DnsHostName */

/* 3004 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3006 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3008 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Return value */

/* 3010 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3012 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3014 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerTrustPasswordsGet */

/* 3016 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3018 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3022 */	NdrFcShort( 0x2a ),	/* 42 */
/* 3024 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3026 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3028 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3030 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3032 */	NdrFcShort( 0x56 ),	/* 86 */
/* 3034 */	NdrFcShort( 0x140 ),	/* 320 */
/* 3036 */	0x46,		/* Oi2 Flags:  clt must size, has return, has ext, */
			0x9,		/* 9 */
/* 3038 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3040 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3042 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3044 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3046 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDcName */

/* 3048 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3050 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3052 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 3054 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3056 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3058 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 3060 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3062 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3064 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 3066 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3068 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3070 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3072 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3074 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3076 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3078 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3080 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3082 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter EncryptedNewOwfPassword */

/* 3084 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3086 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3088 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Parameter EncryptedOldOwfPassword */

/* 3090 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3092 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3094 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Return value */

/* 3096 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3098 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3100 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrGetForestTrustInformation */

/* 3102 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3104 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3108 */	NdrFcShort( 0x2b ),	/* 43 */
/* 3110 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3112 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3114 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3116 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3118 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3120 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3122 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x5,		/* 5 */
/* 3124 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3126 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3128 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3130 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3132 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3134 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3136 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3138 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter TrustedDomainName */

/* 3140 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3142 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3144 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Flags */

/* 3146 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3148 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3150 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3152 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3154 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3156 */	NdrFcShort( 0xcf0 ),	/* Type Offset=3312 */

	/* Return value */

/* 3158 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3160 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3162 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrGetForestTrustInformation */

/* 3164 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3166 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3170 */	NdrFcShort( 0x2c ),	/* 44 */
/* 3172 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3174 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3176 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3178 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3180 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3182 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3184 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x7,		/* 7 */
/* 3186 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3188 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3190 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3192 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3194 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3196 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3198 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3200 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3202 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3204 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3206 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3208 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3210 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3212 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3214 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3216 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3218 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter Flags */

/* 3220 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3222 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3224 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter ForestTrustInfo */

/* 3226 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3228 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3230 */	NdrFcShort( 0xcf0 ),	/* Type Offset=3312 */

	/* Return value */

/* 3232 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3234 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3236 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrLogonSamLogonWithFlags */

/* 3238 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3240 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3244 */	NdrFcShort( 0x2d ),	/* 45 */
/* 3246 */	NdrFcShort( 0x58 ),	/* X64 Stack size/offset = 88 */
/* 3248 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3250 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3252 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3254 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 3256 */	NdrFcShort( 0x8d ),	/* 141 */
/* 3258 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xb,		/* 11 */
/* 3260 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3262 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3264 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3266 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3268 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter LogonServer */

/* 3270 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3272 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3274 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3276 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3278 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3280 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter Authenticator */

/* 3282 */	NdrFcShort( 0xa ),	/* Flags:  must free, in, */
/* 3284 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3286 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter ReturnAuthenticator */

/* 3288 */	NdrFcShort( 0x1a ),	/* Flags:  must free, in, out, */
/* 3290 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3292 */	NdrFcShort( 0x4e ),	/* Type Offset=78 */

	/* Parameter LogonLevel */

/* 3294 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3296 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3298 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter LogonInformation */

/* 3300 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3302 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3304 */	NdrFcShort( 0xda0 ),	/* Type Offset=3488 */

	/* Parameter ValidationLevel */

/* 3306 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3308 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3310 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ValidationInformation */

/* 3312 */	NdrFcShort( 0x2113 ),	/* Flags:  must size, must free, out, simple ref, srv alloc size=8 */
/* 3314 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3316 */	NdrFcShort( 0xdae ),	/* Type Offset=3502 */

	/* Parameter Authoritative */

/* 3318 */	NdrFcShort( 0x2150 ),	/* Flags:  out, base type, simple ref, srv alloc size=8 */
/* 3320 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3322 */	0x2,		/* FC_CHAR */
			0x0,		/* 0 */

	/* Parameter ExtraFlags */

/* 3324 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3326 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3328 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Return value */

/* 3330 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3332 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 3334 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrServerGetTrustInfo */

/* 3336 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3338 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3342 */	NdrFcShort( 0x2e ),	/* 46 */
/* 3344 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 3346 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3348 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3350 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3352 */	NdrFcShort( 0x56 ),	/* 86 */
/* 3354 */	NdrFcShort( 0x140 ),	/* 320 */
/* 3356 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3358 */	0xa,		/* 10 */
			0x3,		/* Ext Flags:  new corr desc, clt corr check, */
/* 3360 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3362 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3364 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3366 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter TrustedDcName */

/* 3368 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3370 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3372 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter AccountName */

/* 3374 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3376 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3378 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter SecureChannelType */

/* 3380 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3382 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3384 */	0xd,		/* FC_ENUM16 */
			0x0,		/* 0 */

	/* Parameter ComputerName */

/* 3386 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3388 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3390 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3392 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3394 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3396 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3398 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3400 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3402 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter EncryptedNewOwfPassword */

/* 3404 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3406 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3408 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Parameter EncryptedOldOwfPassword */

/* 3410 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3412 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3414 */	NdrFcShort( 0x100 ),	/* Type Offset=256 */

	/* Parameter TrustInfo */

/* 3416 */	NdrFcShort( 0x2013 ),	/* Flags:  must size, must free, out, srv alloc size=8 */
/* 3418 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3420 */	NdrFcShort( 0xdb8 ),	/* Type Offset=3512 */

	/* Return value */

/* 3422 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3424 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3426 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure OpnumUnused47 */

/* 3428 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3430 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3434 */	NdrFcShort( 0x2f ),	/* 47 */
/* 3436 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3438 */	0x32,		/* FC_BIND_PRIMITIVE */
			0x0,		/* 0 */
/* 3440 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3442 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3444 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3446 */	0x44,		/* Oi2 Flags:  has return, has ext, */
			0x1,		/* 1 */
/* 3448 */	0xa,		/* 10 */
			0x1,		/* Ext Flags:  new corr desc, */
/* 3450 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3452 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3454 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3456 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter IDL_handle */

/* 3458 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3460 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3462 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure DsrUpdateReadOnlyServerDnsRecords */


	/* Return value */

/* 3464 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3466 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3470 */	NdrFcShort( 0x30 ),	/* 48 */
/* 3472 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3474 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3476 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3478 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3480 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3482 */	NdrFcShort( 0x58 ),	/* 88 */
/* 3484 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0x8,		/* 8 */
/* 3486 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3488 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3490 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3492 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3494 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter ServerName */

/* 3496 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3498 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3500 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter ComputerName */

/* 3502 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3504 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3506 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3508 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3510 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3512 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3514 */	NdrFcShort( 0x4112 ),	/* Flags:  must free, out, simple ref, srv alloc size=16 */
/* 3516 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3518 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter SiteName */

/* 3520 */	NdrFcShort( 0xb ),	/* Flags:  must size, must free, in, */
/* 3522 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3524 */	NdrFcShort( 0x2 ),	/* Type Offset=2 */

	/* Parameter DnsTtl */

/* 3526 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3528 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3530 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter DnsNames */

/* 3532 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3534 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3536 */	NdrFcShort( 0xe0a ),	/* Type Offset=3594 */

	/* Return value */

/* 3538 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3540 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3542 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Procedure NetrChainSetClientAttributes */

/* 3544 */	0x0,		/* 0 */
			0x48,		/* Old Flags:  */
/* 3546 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3550 */	NdrFcShort( 0x31 ),	/* 49 */
/* 3552 */	NdrFcShort( 0x50 ),	/* X64 Stack size/offset = 80 */
/* 3554 */	0x31,		/* FC_BIND_GENERIC */
			0x8,		/* 8 */
/* 3556 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3558 */	0x0,		/* 0 */
			0x5c,		/* FC_PAD */
/* 3560 */	NdrFcShort( 0xc4 ),	/* 196 */
/* 3562 */	NdrFcShort( 0x74 ),	/* 116 */
/* 3564 */	0x47,		/* Oi2 Flags:  srv must size, clt must size, has return, has ext, */
			0xa,		/* 10 */
/* 3566 */	0xa,		/* 10 */
			0x7,		/* Ext Flags:  new corr desc, clt corr check, srv corr check, */
/* 3568 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3570 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3572 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3574 */	NdrFcShort( 0x0 ),	/* 0 */

	/* Parameter PrimaryName */

/* 3576 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3578 */	NdrFcShort( 0x0 ),	/* X64 Stack size/offset = 0 */
/* 3580 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ChainedFromServerName */

/* 3582 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3584 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3586 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter ChainedForClientName */

/* 3588 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3590 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 3592 */	NdrFcShort( 0x8 ),	/* Type Offset=8 */

	/* Parameter Authenticator */

/* 3594 */	NdrFcShort( 0x10a ),	/* Flags:  must free, in, simple ref, */
/* 3596 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3598 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter ReturnAuthenticator */

/* 3600 */	NdrFcShort( 0x11a ),	/* Flags:  must free, in, out, simple ref, */
/* 3602 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3604 */	NdrFcShort( 0x62 ),	/* Type Offset=98 */

	/* Parameter dwInVersion */

/* 3606 */	NdrFcShort( 0x48 ),	/* Flags:  in, base type, */
/* 3608 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3610 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter pmsgIn */

/* 3612 */	NdrFcShort( 0x10b ),	/* Flags:  must size, must free, in, simple ref, */
/* 3614 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3616 */	NdrFcShort( 0xe1e ),	/* Type Offset=3614 */

	/* Parameter pdwOutVersion */

/* 3618 */	NdrFcShort( 0x158 ),	/* Flags:  in, out, base type, simple ref, */
/* 3620 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3622 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

	/* Parameter pmsgOut */

/* 3624 */	NdrFcShort( 0x11b ),	/* Flags:  must size, must free, in, out, simple ref, */
/* 3626 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 3628 */	NdrFcShort( 0xe6a ),	/* Type Offset=3690 */

	/* Return value */

/* 3630 */	NdrFcShort( 0x70 ),	/* Flags:  out, return, base type, */
/* 3632 */	NdrFcShort( 0x48 ),	/* X64 Stack size/offset = 72 */
/* 3634 */	0x8,		/* FC_LONG */
			0x0,		/* 0 */

			0x0
";


        // NRPC type format string generated by midl
        private const string X64_TYPE_FORMAT_STRING = @"
			NdrFcShort( 0x0 ),	/* 0 */
/*  2 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/*  4 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/*  6 */	
			0x11, 0x8,	/* FC_RP [simple_pointer] */
/*  8 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 10 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 12 */	NdrFcShort( 0x2 ),	/* Offset= 2 (14) */
/* 14 */	
			0x12, 0x0,	/* FC_UP */
/* 16 */	NdrFcShort( 0x2 ),	/* Offset= 2 (18) */
/* 18 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 20 */	NdrFcShort( 0x58 ),	/* 88 */
/* 22 */	NdrFcShort( 0x0 ),	/* 0 */
/* 24 */	NdrFcShort( 0x16 ),	/* Offset= 22 (46) */
/* 26 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 28 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 30 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 32 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 34 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 36 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 38 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 40 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 42 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 44 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 46 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 48 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 50 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 52 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 54 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 56 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 58 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 60 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 62 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 64 */	NdrFcShort( 0x2 ),	/* Offset= 2 (66) */
/* 66 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 68 */	NdrFcShort( 0x8 ),	/* 8 */
/* 70 */	NdrFcShort( 0x0 ),	/* 0 */
/* 72 */	NdrFcShort( 0x0 ),	/* Offset= 0 (72) */
/* 74 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 76 */	0x3e,		/* FC_STRUCTPAD2 */
			0x5b,		/* FC_END */
/* 78 */	
			0x12, 0x0,	/* FC_UP */
/* 80 */	NdrFcShort( 0x12 ),	/* Offset= 18 (98) */
/* 82 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 84 */	NdrFcShort( 0x8 ),	/* 8 */
/* 86 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 88 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 90 */	NdrFcShort( 0x8 ),	/* 8 */
/* 92 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 94 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (82) */
/* 96 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 98 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 100 */	NdrFcShort( 0xc ),	/* 12 */
/* 102 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 104 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (88) */
/* 106 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 108 */	
			0x11, 0x0,	/* FC_RP */
/* 110 */	NdrFcShort( 0x2 ),	/* Offset= 2 (112) */
/* 112 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 114 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 116 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 118 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 120 */	NdrFcShort( 0x2 ),	/* Offset= 2 (122) */
/* 122 */	NdrFcShort( 0x8 ),	/* 8 */
/* 124 */	NdrFcShort( 0x3007 ),	/* 12295 */
/* 126 */	NdrFcLong( 0x1 ),	/* 1 */
/* 130 */	NdrFcShort( 0x28 ),	/* Offset= 40 (170) */
/* 132 */	NdrFcLong( 0x5 ),	/* 5 */
/* 136 */	NdrFcShort( 0x22 ),	/* Offset= 34 (170) */
/* 138 */	NdrFcLong( 0x3 ),	/* 3 */
/* 142 */	NdrFcShort( 0x1c ),	/* Offset= 28 (170) */
/* 144 */	NdrFcLong( 0x7 ),	/* 7 */
/* 148 */	NdrFcShort( 0x16 ),	/* Offset= 22 (170) */
/* 150 */	NdrFcLong( 0x2 ),	/* 2 */
/* 154 */	NdrFcShort( 0x86 ),	/* Offset= 134 (288) */
/* 156 */	NdrFcLong( 0x6 ),	/* 6 */
/* 160 */	NdrFcShort( 0x80 ),	/* Offset= 128 (288) */
/* 162 */	NdrFcLong( 0x4 ),	/* 4 */
/* 166 */	NdrFcShort( 0xbc ),	/* Offset= 188 (354) */
/* 168 */	NdrFcShort( 0x0 ),	/* Offset= 0 (168) */
/* 170 */	
			0x12, 0x0,	/* FC_UP */
/* 172 */	NdrFcShort( 0x5e ),	/* Offset= 94 (266) */
/* 174 */	
			0x1c,		/* FC_CVARRAY */
			0x1,		/* 1 */
/* 176 */	NdrFcShort( 0x2 ),	/* 2 */
/* 178 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 180 */	NdrFcShort( 0x2 ),	/* 2 */
/* 182 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 184 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x55,		/* FC_DIV_2 */
/* 186 */	NdrFcShort( 0x0 ),	/* 0 */
/* 188 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 190 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 192 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 194 */	NdrFcShort( 0x10 ),	/* 16 */
/* 196 */	NdrFcShort( 0x0 ),	/* 0 */
/* 198 */	NdrFcShort( 0x8 ),	/* Offset= 8 (206) */
/* 200 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 202 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 204 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 206 */	
			0x12, 0x0,	/* FC_UP */
/* 208 */	NdrFcShort( 0xffde ),	/* Offset= -34 (174) */
/* 210 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 212 */	NdrFcShort( 0x8 ),	/* 8 */
/* 214 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 216 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 218 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 220 */	NdrFcShort( 0x40 ),	/* 64 */
/* 222 */	NdrFcShort( 0x0 ),	/* 0 */
/* 224 */	NdrFcShort( 0x0 ),	/* Offset= 0 (224) */
/* 226 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 228 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (192) */
/* 230 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 232 */	0x0,		/* 0 */
			NdrFcShort( 0xffe9 ),	/* Offset= -23 (210) */
			0x40,		/* FC_STRUCTPAD4 */
/* 236 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 238 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (192) */
/* 240 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 242 */	NdrFcShort( 0xffce ),	/* Offset= -50 (192) */
/* 244 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 246 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 248 */	NdrFcShort( 0x10 ),	/* 16 */
/* 250 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 252 */	NdrFcShort( 0xff5c ),	/* Offset= -164 (88) */
/* 254 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 256 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 258 */	NdrFcShort( 0x10 ),	/* 16 */
/* 260 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 262 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (246) */
/* 264 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 266 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 268 */	NdrFcShort( 0x60 ),	/* 96 */
/* 270 */	NdrFcShort( 0x0 ),	/* 0 */
/* 272 */	NdrFcShort( 0x0 ),	/* Offset= 0 (272) */
/* 274 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 276 */	NdrFcShort( 0xffc6 ),	/* Offset= -58 (218) */
/* 278 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 280 */	NdrFcShort( 0xffe8 ),	/* Offset= -24 (256) */
/* 282 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 284 */	NdrFcShort( 0xffe4 ),	/* Offset= -28 (256) */
/* 286 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 288 */	
			0x12, 0x0,	/* FC_UP */
/* 290 */	NdrFcShort( 0x26 ),	/* Offset= 38 (328) */
/* 292 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 294 */	NdrFcShort( 0x1 ),	/* 1 */
/* 296 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 298 */	NdrFcShort( 0x2 ),	/* 2 */
/* 300 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 302 */	0x17,		/* Corr desc:  field pointer, FC_USHORT */
			0x0,		/*  */
/* 304 */	NdrFcShort( 0x0 ),	/* 0 */
/* 306 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 308 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 310 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 312 */	NdrFcShort( 0x10 ),	/* 16 */
/* 314 */	NdrFcShort( 0x0 ),	/* 0 */
/* 316 */	NdrFcShort( 0x8 ),	/* Offset= 8 (324) */
/* 318 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 320 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 322 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 324 */	
			0x12, 0x0,	/* FC_UP */
/* 326 */	NdrFcShort( 0xffde ),	/* Offset= -34 (292) */
/* 328 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 330 */	NdrFcShort( 0x68 ),	/* 104 */
/* 332 */	NdrFcShort( 0x0 ),	/* 0 */
/* 334 */	NdrFcShort( 0x0 ),	/* Offset= 0 (334) */
/* 336 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 338 */	NdrFcShort( 0xff88 ),	/* Offset= -120 (218) */
/* 340 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 342 */	NdrFcShort( 0xff02 ),	/* Offset= -254 (88) */
/* 344 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 346 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (310) */
/* 348 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 350 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (310) */
/* 352 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 354 */	
			0x12, 0x0,	/* FC_UP */
/* 356 */	NdrFcShort( 0xe ),	/* Offset= 14 (370) */
/* 358 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 360 */	NdrFcShort( 0x1 ),	/* 1 */
/* 362 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 364 */	NdrFcShort( 0x50 ),	/* 80 */
/* 366 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 368 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 370 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 372 */	NdrFcShort( 0x60 ),	/* 96 */
/* 374 */	NdrFcShort( 0x0 ),	/* 0 */
/* 376 */	NdrFcShort( 0xe ),	/* Offset= 14 (390) */
/* 378 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 380 */	NdrFcShort( 0xff5e ),	/* Offset= -162 (218) */
/* 382 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 384 */	NdrFcShort( 0xff40 ),	/* Offset= -192 (192) */
/* 386 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 388 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 390 */	
			0x12, 0x0,	/* FC_UP */
/* 392 */	NdrFcShort( 0xffde ),	/* Offset= -34 (358) */
/* 394 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 396 */	NdrFcShort( 0x2 ),	/* Offset= 2 (398) */
/* 398 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 400 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 402 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 404 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 406 */	NdrFcShort( 0x2 ),	/* Offset= 2 (408) */
/* 408 */	NdrFcShort( 0x8 ),	/* 8 */
/* 410 */	NdrFcShort( 0x3004 ),	/* 12292 */
/* 412 */	NdrFcLong( 0x2 ),	/* 2 */
/* 416 */	NdrFcShort( 0x16 ),	/* Offset= 22 (438) */
/* 418 */	NdrFcLong( 0x3 ),	/* 3 */
/* 422 */	NdrFcShort( 0xb4 ),	/* Offset= 180 (602) */
/* 424 */	NdrFcLong( 0x5 ),	/* 5 */
/* 428 */	NdrFcShort( 0x13a ),	/* Offset= 314 (742) */
/* 430 */	NdrFcLong( 0x6 ),	/* 6 */
/* 434 */	NdrFcShort( 0x154 ),	/* Offset= 340 (774) */
/* 436 */	NdrFcShort( 0x0 ),	/* Offset= 0 (436) */
/* 438 */	
			0x12, 0x0,	/* FC_UP */
/* 440 */	NdrFcShort( 0x48 ),	/* Offset= 72 (512) */
/* 442 */	
			0x1d,		/* FC_SMFARRAY */
			0x3,		/* 3 */
/* 444 */	NdrFcShort( 0x28 ),	/* 40 */
/* 446 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 448 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 450 */	NdrFcShort( 0x0 ),	/* 0 */
/* 452 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 454 */	NdrFcShort( 0x9c ),	/* 156 */
/* 456 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 458 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 462 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 464 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 466 */	NdrFcShort( 0xff00 ),	/* Offset= -256 (210) */
/* 468 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 470 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 472 */	NdrFcShort( 0x6 ),	/* 6 */
/* 474 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 476 */	
			0x15,		/* FC_STRUCT */
			0x0,		/* 0 */
/* 478 */	NdrFcShort( 0x6 ),	/* 6 */
/* 480 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 482 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (470) */
/* 484 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 486 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 488 */	NdrFcShort( 0x4 ),	/* 4 */
/* 490 */	0x4,		/* Corr desc: FC_USMALL */
			0x0,		/*  */
/* 492 */	NdrFcShort( 0xfff9 ),	/* -7 */
/* 494 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 496 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 498 */	
			0x17,		/* FC_CSTRUCT */
			0x3,		/* 3 */
/* 500 */	NdrFcShort( 0x8 ),	/* 8 */
/* 502 */	NdrFcShort( 0xfff0 ),	/* Offset= -16 (486) */
/* 504 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 506 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 508 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (476) */
/* 510 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 512 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 514 */	NdrFcShort( 0x110 ),	/* 272 */
/* 516 */	NdrFcShort( 0x0 ),	/* 0 */
/* 518 */	NdrFcShort( 0x4c ),	/* Offset= 76 (594) */
/* 520 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 522 */	NdrFcShort( 0xfec8 ),	/* Offset= -312 (210) */
/* 524 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 526 */	NdrFcShort( 0xfec4 ),	/* Offset= -316 (210) */
/* 528 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 530 */	NdrFcShort( 0xfec0 ),	/* Offset= -320 (210) */
/* 532 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 534 */	NdrFcShort( 0xfebc ),	/* Offset= -324 (210) */
/* 536 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 538 */	NdrFcShort( 0xfeb8 ),	/* Offset= -328 (210) */
/* 540 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 542 */	NdrFcShort( 0xfeb4 ),	/* Offset= -332 (210) */
/* 544 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 546 */	NdrFcShort( 0xfe9e ),	/* Offset= -354 (192) */
/* 548 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 550 */	NdrFcShort( 0xfe9a ),	/* Offset= -358 (192) */
/* 552 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 554 */	NdrFcShort( 0xfe96 ),	/* Offset= -362 (192) */
/* 556 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 558 */	NdrFcShort( 0xfe92 ),	/* Offset= -366 (192) */
/* 560 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 562 */	NdrFcShort( 0xfe8e ),	/* Offset= -370 (192) */
/* 564 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 566 */	NdrFcShort( 0xfe8a ),	/* Offset= -374 (192) */
/* 568 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 570 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 572 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 574 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 576 */	0x0,		/* 0 */
			NdrFcShort( 0xfebf ),	/* Offset= -321 (256) */
			0x40,		/* FC_STRUCTPAD4 */
/* 580 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 582 */	NdrFcShort( 0xfe7a ),	/* Offset= -390 (192) */
/* 584 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 586 */	NdrFcShort( 0xfe76 ),	/* Offset= -394 (192) */
/* 588 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 590 */	0x0,		/* 0 */
			NdrFcShort( 0xff6b ),	/* Offset= -149 (442) */
			0x5b,		/* FC_END */
/* 594 */	
			0x12, 0x0,	/* FC_UP */
/* 596 */	NdrFcShort( 0xff6c ),	/* Offset= -148 (448) */
/* 598 */	
			0x12, 0x0,	/* FC_UP */
/* 600 */	NdrFcShort( 0xff9a ),	/* Offset= -102 (498) */
/* 602 */	
			0x12, 0x0,	/* FC_UP */
/* 604 */	NdrFcShort( 0x28 ),	/* Offset= 40 (644) */
/* 606 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 608 */	NdrFcShort( 0x10 ),	/* 16 */
/* 610 */	NdrFcShort( 0x0 ),	/* 0 */
/* 612 */	NdrFcShort( 0x6 ),	/* Offset= 6 (618) */
/* 614 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 616 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 618 */	
			0x12, 0x0,	/* FC_UP */
/* 620 */	NdrFcShort( 0xff86 ),	/* Offset= -122 (498) */
/* 622 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 624 */	NdrFcShort( 0x0 ),	/* 0 */
/* 626 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 628 */	NdrFcShort( 0x110 ),	/* 272 */
/* 630 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 632 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 636 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 638 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 640 */	NdrFcShort( 0xffde ),	/* Offset= -34 (606) */
/* 642 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 644 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 646 */	NdrFcShort( 0x120 ),	/* 288 */
/* 648 */	NdrFcShort( 0x0 ),	/* 0 */
/* 650 */	NdrFcShort( 0x50 ),	/* Offset= 80 (730) */
/* 652 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 654 */	NdrFcShort( 0xfe44 ),	/* Offset= -444 (210) */
/* 656 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 658 */	NdrFcShort( 0xfe40 ),	/* Offset= -448 (210) */
/* 660 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 662 */	NdrFcShort( 0xfe3c ),	/* Offset= -452 (210) */
/* 664 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 666 */	NdrFcShort( 0xfe38 ),	/* Offset= -456 (210) */
/* 668 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 670 */	NdrFcShort( 0xfe34 ),	/* Offset= -460 (210) */
/* 672 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 674 */	NdrFcShort( 0xfe30 ),	/* Offset= -464 (210) */
/* 676 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 678 */	NdrFcShort( 0xfe1a ),	/* Offset= -486 (192) */
/* 680 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 682 */	NdrFcShort( 0xfe16 ),	/* Offset= -490 (192) */
/* 684 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 686 */	NdrFcShort( 0xfe12 ),	/* Offset= -494 (192) */
/* 688 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 690 */	NdrFcShort( 0xfe0e ),	/* Offset= -498 (192) */
/* 692 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 694 */	NdrFcShort( 0xfe0a ),	/* Offset= -502 (192) */
/* 696 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 698 */	NdrFcShort( 0xfe06 ),	/* Offset= -506 (192) */
/* 700 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 702 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 704 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 706 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 708 */	0x0,		/* 0 */
			NdrFcShort( 0xfe3b ),	/* Offset= -453 (256) */
			0x40,		/* FC_STRUCTPAD4 */
/* 712 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 714 */	NdrFcShort( 0xfdf6 ),	/* Offset= -522 (192) */
/* 716 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 718 */	NdrFcShort( 0xfdf2 ),	/* Offset= -526 (192) */
/* 720 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 722 */	0x0,		/* 0 */
			NdrFcShort( 0xfee7 ),	/* Offset= -281 (442) */
			0x8,		/* FC_LONG */
/* 726 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 728 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 730 */	
			0x12, 0x0,	/* FC_UP */
/* 732 */	NdrFcShort( 0xfee4 ),	/* Offset= -284 (448) */
/* 734 */	
			0x12, 0x0,	/* FC_UP */
/* 736 */	NdrFcShort( 0xff12 ),	/* Offset= -238 (498) */
/* 738 */	
			0x12, 0x0,	/* FC_UP */
/* 740 */	NdrFcShort( 0xff8a ),	/* Offset= -118 (622) */
/* 742 */	
			0x12, 0x0,	/* FC_UP */
/* 744 */	NdrFcShort( 0xe ),	/* Offset= 14 (758) */
/* 746 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 748 */	NdrFcShort( 0x1 ),	/* 1 */
/* 750 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 752 */	NdrFcShort( 0x0 ),	/* 0 */
/* 754 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 756 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 758 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 760 */	NdrFcShort( 0x10 ),	/* 16 */
/* 762 */	NdrFcShort( 0x0 ),	/* 0 */
/* 764 */	NdrFcShort( 0x6 ),	/* Offset= 6 (770) */
/* 766 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 768 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 770 */	
			0x12, 0x0,	/* FC_UP */
/* 772 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (746) */
/* 774 */	
			0x12, 0x0,	/* FC_UP */
/* 776 */	NdrFcShort( 0x8 ),	/* Offset= 8 (784) */
/* 778 */	
			0x1d,		/* FC_SMFARRAY */
			0x3,		/* 3 */
/* 780 */	NdrFcShort( 0x4 ),	/* 4 */
/* 782 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 784 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 786 */	NdrFcShort( 0x1e0 ),	/* 480 */
/* 788 */	NdrFcShort( 0x0 ),	/* 0 */
/* 790 */	NdrFcShort( 0x8e ),	/* Offset= 142 (932) */
/* 792 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 794 */	NdrFcShort( 0xfdb8 ),	/* Offset= -584 (210) */
/* 796 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 798 */	NdrFcShort( 0xfdb4 ),	/* Offset= -588 (210) */
/* 800 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 802 */	NdrFcShort( 0xfdb0 ),	/* Offset= -592 (210) */
/* 804 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 806 */	NdrFcShort( 0xfdac ),	/* Offset= -596 (210) */
/* 808 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 810 */	NdrFcShort( 0xfda8 ),	/* Offset= -600 (210) */
/* 812 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 814 */	NdrFcShort( 0xfda4 ),	/* Offset= -604 (210) */
/* 816 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 818 */	NdrFcShort( 0xfd8e ),	/* Offset= -626 (192) */
/* 820 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 822 */	NdrFcShort( 0xfd8a ),	/* Offset= -630 (192) */
/* 824 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 826 */	NdrFcShort( 0xfd86 ),	/* Offset= -634 (192) */
/* 828 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 830 */	NdrFcShort( 0xfd82 ),	/* Offset= -638 (192) */
/* 832 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 834 */	NdrFcShort( 0xfd7e ),	/* Offset= -642 (192) */
/* 836 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 838 */	NdrFcShort( 0xfd7a ),	/* Offset= -646 (192) */
/* 840 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 842 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 844 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 846 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 848 */	0x0,		/* 0 */
			NdrFcShort( 0xfdaf ),	/* Offset= -593 (256) */
			0x40,		/* FC_STRUCTPAD4 */
/* 852 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 854 */	NdrFcShort( 0xfd6a ),	/* Offset= -662 (192) */
/* 856 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 858 */	NdrFcShort( 0xfd66 ),	/* Offset= -666 (192) */
/* 860 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 862 */	0x0,		/* 0 */
			NdrFcShort( 0xfcf3 ),	/* Offset= -781 (82) */
			0x8,		/* FC_LONG */
/* 866 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 868 */	0x0,		/* 0 */
			NdrFcShort( 0xfd6d ),	/* Offset= -659 (210) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 872 */	0x0,		/* 0 */
			NdrFcShort( 0xfd69 ),	/* Offset= -663 (210) */
			0x8,		/* FC_LONG */
/* 876 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 878 */	NdrFcShort( 0xff9c ),	/* Offset= -100 (778) */
/* 880 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 882 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 884 */	0x0,		/* 0 */
			NdrFcShort( 0xfd4b ),	/* Offset= -693 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 888 */	0x0,		/* 0 */
			NdrFcShort( 0xfd47 ),	/* Offset= -697 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 892 */	0x0,		/* 0 */
			NdrFcShort( 0xfd43 ),	/* Offset= -701 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 896 */	0x0,		/* 0 */
			NdrFcShort( 0xfd3f ),	/* Offset= -705 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 900 */	0x0,		/* 0 */
			NdrFcShort( 0xfd3b ),	/* Offset= -709 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 904 */	0x0,		/* 0 */
			NdrFcShort( 0xfd37 ),	/* Offset= -713 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 908 */	0x0,		/* 0 */
			NdrFcShort( 0xfd33 ),	/* Offset= -717 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 912 */	0x0,		/* 0 */
			NdrFcShort( 0xfd2f ),	/* Offset= -721 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 916 */	0x0,		/* 0 */
			NdrFcShort( 0xfd2b ),	/* Offset= -725 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 920 */	0x0,		/* 0 */
			NdrFcShort( 0xfd27 ),	/* Offset= -729 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 924 */	0x0,		/* 0 */
			NdrFcShort( 0xfd23 ),	/* Offset= -733 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 928 */	0x0,		/* 0 */
			NdrFcShort( 0xfd1f ),	/* Offset= -737 (192) */
			0x5b,		/* FC_END */
/* 932 */	
			0x12, 0x0,	/* FC_UP */
/* 934 */	NdrFcShort( 0xfe1a ),	/* Offset= -486 (448) */
/* 936 */	
			0x12, 0x0,	/* FC_UP */
/* 938 */	NdrFcShort( 0xfe48 ),	/* Offset= -440 (498) */
/* 940 */	
			0x12, 0x0,	/* FC_UP */
/* 942 */	NdrFcShort( 0xfec0 ),	/* Offset= -320 (622) */
/* 944 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 946 */	0x2,		/* FC_CHAR */
			0x5c,		/* FC_PAD */
/* 948 */	
			0x11, 0x0,	/* FC_RP */
/* 950 */	NdrFcShort( 0x2 ),	/* Offset= 2 (952) */
/* 952 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 954 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 956 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 958 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 960 */	NdrFcShort( 0xfcba ),	/* Offset= -838 (122) */
/* 962 */	
			0x11, 0x0,	/* FC_RP */
/* 964 */	NdrFcShort( 0xfc94 ),	/* Offset= -876 (88) */
/* 966 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 968 */	NdrFcShort( 0xfc90 ),	/* Offset= -880 (88) */
/* 970 */	
			0x11, 0x0,	/* FC_RP */
/* 972 */	NdrFcShort( 0xfc96 ),	/* Offset= -874 (98) */
/* 974 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 976 */	NdrFcShort( 0xfc92 ),	/* Offset= -878 (98) */
/* 978 */	
			0x11, 0x0,	/* FC_RP */
/* 980 */	NdrFcShort( 0xfd2c ),	/* Offset= -724 (256) */
/* 982 */	
			0x11, 0x0,	/* FC_RP */
/* 984 */	NdrFcShort( 0x2 ),	/* Offset= 2 (986) */
/* 986 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 988 */	NdrFcShort( 0x8 ),	/* 8 */
/* 990 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 992 */	NdrFcShort( 0xfcf2 ),	/* Offset= -782 (210) */
/* 994 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 996 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 998 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1000) */
/* 1000 */	
			0x12, 0x0,	/* FC_UP */
/* 1002 */	NdrFcShort( 0x536 ),	/* Offset= 1334 (2336) */
/* 1004 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1006 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 1008 */	NdrFcShort( 0xfff8 ),	/* -8 */
/* 1010 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1012 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1014) */
/* 1014 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1016 */	NdrFcShort( 0x3015 ),	/* 12309 */
/* 1018 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1022 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1024 */	NdrFcLong( 0x2 ),	/* 2 */
/* 1028 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1030 */	NdrFcLong( 0x3 ),	/* 3 */
/* 1034 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1036 */	NdrFcLong( 0x4 ),	/* 4 */
/* 1040 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1042 */	NdrFcLong( 0x5 ),	/* 5 */
/* 1046 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1048 */	NdrFcLong( 0x6 ),	/* 6 */
/* 1052 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1054 */	NdrFcLong( 0x7 ),	/* 7 */
/* 1058 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1060 */	NdrFcLong( 0x8 ),	/* 8 */
/* 1064 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1066 */	NdrFcLong( 0x9 ),	/* 9 */
/* 1070 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1072 */	NdrFcLong( 0xa ),	/* 10 */
/* 1076 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1078 */	NdrFcLong( 0xb ),	/* 11 */
/* 1082 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1084 */	NdrFcLong( 0xc ),	/* 12 */
/* 1088 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1090 */	NdrFcLong( 0x14 ),	/* 20 */
/* 1094 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1096 */	NdrFcLong( 0x15 ),	/* 21 */
/* 1100 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 1102 */	NdrFcLong( 0xd ),	/* 13 */
/* 1106 */	NdrFcShort( 0x28 ),	/* Offset= 40 (1146) */
/* 1108 */	NdrFcLong( 0xe ),	/* 14 */
/* 1112 */	NdrFcShort( 0x22 ),	/* Offset= 34 (1146) */
/* 1114 */	NdrFcLong( 0xf ),	/* 15 */
/* 1118 */	NdrFcShort( 0x1c ),	/* Offset= 28 (1146) */
/* 1120 */	NdrFcLong( 0x10 ),	/* 16 */
/* 1124 */	NdrFcShort( 0x16 ),	/* Offset= 22 (1146) */
/* 1126 */	NdrFcLong( 0x11 ),	/* 17 */
/* 1130 */	NdrFcShort( 0x10 ),	/* Offset= 16 (1146) */
/* 1132 */	NdrFcLong( 0x12 ),	/* 18 */
/* 1136 */	NdrFcShort( 0xfb92 ),	/* Offset= -1134 (2) */
/* 1138 */	NdrFcLong( 0x13 ),	/* 19 */
/* 1142 */	NdrFcShort( 0xfb8c ),	/* Offset= -1140 (2) */
/* 1144 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1144) */
/* 1146 */	
			0x12, 0x0,	/* FC_UP */
/* 1148 */	NdrFcShort( 0xfd76 ),	/* Offset= -650 (498) */
/* 1150 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 1152 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 1154 */	NdrFcShort( 0xfff0 ),	/* -16 */
/* 1156 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1158 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1160) */
/* 1160 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1162 */	NdrFcShort( 0x3010 ),	/* 12304 */
/* 1164 */	NdrFcLong( 0x1 ),	/* 1 */
/* 1168 */	NdrFcShort( 0x5e ),	/* Offset= 94 (1262) */
/* 1170 */	NdrFcLong( 0x2 ),	/* 2 */
/* 1174 */	NdrFcShort( 0xa0 ),	/* Offset= 160 (1334) */
/* 1176 */	NdrFcLong( 0x4 ),	/* 4 */
/* 1180 */	NdrFcShort( 0xd8 ),	/* Offset= 216 (1396) */
/* 1182 */	NdrFcLong( 0x5 ),	/* 5 */
/* 1186 */	NdrFcShort( 0xfc ),	/* Offset= 252 (1438) */
/* 1188 */	NdrFcLong( 0x7 ),	/* 7 */
/* 1192 */	NdrFcShort( 0xcc ),	/* Offset= 204 (1396) */
/* 1194 */	NdrFcLong( 0x8 ),	/* 8 */
/* 1198 */	NdrFcShort( 0x1b4 ),	/* Offset= 436 (1634) */
/* 1200 */	NdrFcLong( 0x9 ),	/* 9 */
/* 1204 */	NdrFcShort( 0x1d8 ),	/* Offset= 472 (1676) */
/* 1206 */	NdrFcLong( 0xb ),	/* 11 */
/* 1210 */	NdrFcShort( 0xba ),	/* Offset= 186 (1396) */
/* 1212 */	NdrFcLong( 0xc ),	/* 12 */
/* 1216 */	NdrFcShort( 0x206 ),	/* Offset= 518 (1734) */
/* 1218 */	NdrFcLong( 0xd ),	/* 13 */
/* 1222 */	NdrFcShort( 0x24a ),	/* Offset= 586 (1808) */
/* 1224 */	NdrFcLong( 0xe ),	/* 14 */
/* 1228 */	NdrFcShort( 0x2b6 ),	/* Offset= 694 (1922) */
/* 1230 */	NdrFcLong( 0x10 ),	/* 16 */
/* 1234 */	NdrFcShort( 0x306 ),	/* Offset= 774 (2008) */
/* 1236 */	NdrFcLong( 0x12 ),	/* 18 */
/* 1240 */	NdrFcShort( 0x368 ),	/* Offset= 872 (2112) */
/* 1242 */	NdrFcLong( 0x14 ),	/* 20 */
/* 1246 */	NdrFcShort( 0x3c8 ),	/* Offset= 968 (2214) */
/* 1248 */	NdrFcLong( 0x15 ),	/* 21 */
/* 1252 */	NdrFcShort( 0x3e8 ),	/* Offset= 1000 (2252) */
/* 1254 */	NdrFcLong( 0x16 ),	/* 22 */
/* 1258 */	NdrFcShort( 0x408 ),	/* Offset= 1032 (2290) */
/* 1260 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1260) */
/* 1262 */	
			0x12, 0x0,	/* FC_UP */
/* 1264 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1266) */
/* 1266 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1268 */	NdrFcShort( 0xb0 ),	/* 176 */
/* 1270 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1272 */	NdrFcShort( 0x3a ),	/* Offset= 58 (1330) */
/* 1274 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1276 */	NdrFcShort( 0xfbc4 ),	/* Offset= -1084 (192) */
/* 1278 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1280 */	NdrFcShort( 0xfbc0 ),	/* Offset= -1088 (192) */
/* 1282 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1284 */	NdrFcShort( 0xfbce ),	/* Offset= -1074 (210) */
/* 1286 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1288 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1290 */	NdrFcShort( 0xfbc8 ),	/* Offset= -1080 (210) */
/* 1292 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1294 */	NdrFcShort( 0xfbc4 ),	/* Offset= -1084 (210) */
/* 1296 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1298 */	NdrFcShort( 0xfbc0 ),	/* Offset= -1088 (210) */
/* 1300 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1302 */	NdrFcShort( 0xfbbc ),	/* Offset= -1092 (210) */
/* 1304 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1306 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1308 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1310 */	NdrFcShort( 0xfba2 ),	/* Offset= -1118 (192) */
/* 1312 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1314 */	NdrFcShort( 0xfb9e ),	/* Offset= -1122 (192) */
/* 1316 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1318 */	NdrFcShort( 0xfb9a ),	/* Offset= -1126 (192) */
/* 1320 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1322 */	NdrFcShort( 0xfb96 ),	/* Offset= -1130 (192) */
/* 1324 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1326 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1328 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1330 */	
			0x12, 0x0,	/* FC_UP */
/* 1332 */	NdrFcShort( 0xfc32 ),	/* Offset= -974 (358) */
/* 1334 */	
			0x12, 0x0,	/* FC_UP */
/* 1336 */	NdrFcShort( 0xe ),	/* Offset= 14 (1350) */
/* 1338 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1340 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1342 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1344 */	NdrFcShort( 0x2c ),	/* 44 */
/* 1346 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1348 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1350 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1352 */	NdrFcShort( 0x88 ),	/* 136 */
/* 1354 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1356 */	NdrFcShort( 0x24 ),	/* Offset= 36 (1392) */
/* 1358 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1360 */	NdrFcShort( 0xfb70 ),	/* Offset= -1168 (192) */
/* 1362 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1364 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1366 */	NdrFcShort( 0xfb6a ),	/* Offset= -1174 (192) */
/* 1368 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1370 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1372 */	0x0,		/* 0 */
			NdrFcShort( 0xfb63 ),	/* Offset= -1181 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1376 */	0x0,		/* 0 */
			NdrFcShort( 0xfb5f ),	/* Offset= -1185 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1380 */	0x0,		/* 0 */
			NdrFcShort( 0xfb5b ),	/* Offset= -1189 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1384 */	0x0,		/* 0 */
			NdrFcShort( 0xfb57 ),	/* Offset= -1193 (192) */
			0x8,		/* FC_LONG */
/* 1388 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1390 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1392 */	
			0x12, 0x0,	/* FC_UP */
/* 1394 */	NdrFcShort( 0xffc8 ),	/* Offset= -56 (1338) */
/* 1396 */	
			0x12, 0x0,	/* FC_UP */
/* 1398 */	NdrFcShort( 0x2 ),	/* Offset= 2 (1400) */
/* 1400 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1402 */	NdrFcShort( 0x70 ),	/* 112 */
/* 1404 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1406 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1406) */
/* 1408 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1410 */	NdrFcShort( 0xfb3e ),	/* Offset= -1218 (192) */
/* 1412 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1414 */	NdrFcShort( 0xfb3a ),	/* Offset= -1222 (192) */
/* 1416 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1418 */	NdrFcShort( 0xfb36 ),	/* Offset= -1226 (192) */
/* 1420 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1422 */	NdrFcShort( 0xfb32 ),	/* Offset= -1230 (192) */
/* 1424 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1426 */	NdrFcShort( 0xfb2e ),	/* Offset= -1234 (192) */
/* 1428 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1430 */	NdrFcShort( 0xfb2a ),	/* Offset= -1238 (192) */
/* 1432 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1434 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1436 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1438 */	
			0x12, 0x0,	/* FC_UP */
/* 1440 */	NdrFcShort( 0x4e ),	/* Offset= 78 (1518) */
/* 1442 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 1444 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1446 */	0x40,		/* Corr desc:  constant, val=1260 */
			0x0,		/* 0 */
/* 1448 */	NdrFcShort( 0x4ec ),	/* 1260 */
/* 1450 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1452 */	0x10,		/* Corr desc:  field pointer,  */
			0x59,		/* FC_CALLBACK */
/* 1454 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1456 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1458 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1460 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1462 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1464 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1466 */	NdrFcShort( 0x6 ),	/* Offset= 6 (1472) */
/* 1468 */	0x6,		/* FC_SHORT */
			0x42,		/* FC_STRUCTPAD6 */
/* 1470 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1472 */	
			0x12, 0x0,	/* FC_UP */
/* 1474 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (1442) */
/* 1476 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1478 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1480 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1482 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1484 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1486 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1488 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1490 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1492 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1494 */	NdrFcShort( 0x8 ),	/* Offset= 8 (1502) */
/* 1496 */	0x2,		/* FC_CHAR */
			0x3f,		/* FC_STRUCTPAD3 */
/* 1498 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 1500 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1502 */	
			0x12, 0x0,	/* FC_UP */
/* 1504 */	NdrFcShort( 0xffe4 ),	/* Offset= -28 (1476) */
/* 1506 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1508 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1510 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1512 */	NdrFcShort( 0x114 ),	/* 276 */
/* 1514 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1516 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1518 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1520 */	NdrFcShort( 0x170 ),	/* 368 */
/* 1522 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1524 */	NdrFcShort( 0x6a ),	/* Offset= 106 (1630) */
/* 1526 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1528 */	NdrFcShort( 0xfac8 ),	/* Offset= -1336 (192) */
/* 1530 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1532 */	NdrFcShort( 0xfac4 ),	/* Offset= -1340 (192) */
/* 1534 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1536 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1538 */	NdrFcShort( 0xfabe ),	/* Offset= -1346 (192) */
/* 1540 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1542 */	NdrFcShort( 0xfaba ),	/* Offset= -1350 (192) */
/* 1544 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1546 */	NdrFcShort( 0xfab6 ),	/* Offset= -1354 (192) */
/* 1548 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1550 */	NdrFcShort( 0xfab2 ),	/* Offset= -1358 (192) */
/* 1552 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1554 */	NdrFcShort( 0xfaae ),	/* Offset= -1362 (192) */
/* 1556 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1558 */	NdrFcShort( 0xfabc ),	/* Offset= -1348 (210) */
/* 1560 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1562 */	NdrFcShort( 0xfab8 ),	/* Offset= -1352 (210) */
/* 1564 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1566 */	NdrFcShort( 0xff96 ),	/* Offset= -106 (1460) */
/* 1568 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 1570 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1572 */	NdrFcShort( 0xfaae ),	/* Offset= -1362 (210) */
/* 1574 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1576 */	NdrFcShort( 0xfaaa ),	/* Offset= -1366 (210) */
/* 1578 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1580 */	0x0,		/* 0 */
			NdrFcShort( 0xfad3 ),	/* Offset= -1325 (256) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1584 */	0x0,		/* 0 */
			NdrFcShort( 0xfacf ),	/* Offset= -1329 (256) */
			0x2,		/* FC_CHAR */
/* 1588 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 1590 */	0x41,		/* FC_STRUCTPAD5 */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1592 */	0x0,		/* 0 */
			NdrFcShort( 0xfa87 ),	/* Offset= -1401 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1596 */	0x0,		/* 0 */
			NdrFcShort( 0xfa83 ),	/* Offset= -1405 (192) */
			0x6,		/* FC_SHORT */
/* 1600 */	0x6,		/* FC_SHORT */
			0x40,		/* FC_STRUCTPAD4 */
/* 1602 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1604 */	NdrFcShort( 0xff8c ),	/* Offset= -116 (1488) */
/* 1606 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1608 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1610 */	0x0,		/* 0 */
			NdrFcShort( 0xfa75 ),	/* Offset= -1419 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1614 */	0x0,		/* 0 */
			NdrFcShort( 0xfa71 ),	/* Offset= -1423 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1618 */	0x0,		/* 0 */
			NdrFcShort( 0xfa6d ),	/* Offset= -1427 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1622 */	0x0,		/* 0 */
			NdrFcShort( 0xfa69 ),	/* Offset= -1431 (192) */
			0x8,		/* FC_LONG */
/* 1626 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1628 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1630 */	
			0x12, 0x0,	/* FC_UP */
/* 1632 */	NdrFcShort( 0xff82 ),	/* Offset= -126 (1506) */
/* 1634 */	
			0x12, 0x0,	/* FC_UP */
/* 1636 */	NdrFcShort( 0xe ),	/* Offset= 14 (1650) */
/* 1638 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 1640 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1642 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1644 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1646 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1648 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1650 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1652 */	NdrFcShort( 0x28 ),	/* 40 */
/* 1654 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1656 */	NdrFcShort( 0xc ),	/* Offset= 12 (1668) */
/* 1658 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 1660 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1662 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1664 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1666 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1668 */	
			0x12, 0x0,	/* FC_UP */
/* 1670 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (1638) */
/* 1672 */	
			0x12, 0x0,	/* FC_UP */
/* 1674 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (1638) */
/* 1676 */	
			0x12, 0x0,	/* FC_UP */
/* 1678 */	NdrFcShort( 0xe ),	/* Offset= 14 (1692) */
/* 1680 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1682 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1684 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1686 */	NdrFcShort( 0x18 ),	/* 24 */
/* 1688 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1690 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1692 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1694 */	NdrFcShort( 0x78 ),	/* 120 */
/* 1696 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1698 */	NdrFcShort( 0x20 ),	/* Offset= 32 (1730) */
/* 1700 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1702 */	NdrFcShort( 0xfa1a ),	/* Offset= -1510 (192) */
/* 1704 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1706 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1708 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1710 */	0x0,		/* 0 */
			NdrFcShort( 0xfa11 ),	/* Offset= -1519 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1714 */	0x0,		/* 0 */
			NdrFcShort( 0xfa0d ),	/* Offset= -1523 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1718 */	0x0,		/* 0 */
			NdrFcShort( 0xfa09 ),	/* Offset= -1527 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1722 */	0x0,		/* 0 */
			NdrFcShort( 0xfa05 ),	/* Offset= -1531 (192) */
			0x8,		/* FC_LONG */
/* 1726 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1728 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1730 */	
			0x12, 0x0,	/* FC_UP */
/* 1732 */	NdrFcShort( 0xffcc ),	/* Offset= -52 (1680) */
/* 1734 */	
			0x12, 0x0,	/* FC_UP */
/* 1736 */	NdrFcShort( 0x36 ),	/* Offset= 54 (1790) */
/* 1738 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1740 */	NdrFcShort( 0x8 ),	/* 8 */
/* 1742 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1744 */	NdrFcShort( 0x4 ),	/* Offset= 4 (1748) */
/* 1746 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1748 */	
			0x12, 0x0,	/* FC_UP */
/* 1750 */	NdrFcShort( 0xfb1c ),	/* Offset= -1252 (498) */
/* 1752 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1754 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1756 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1758 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1760 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1762 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1766 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1768 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1770 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (1738) */
/* 1772 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1774 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1776 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1778 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1780 */	NdrFcShort( 0x6 ),	/* Offset= 6 (1786) */
/* 1782 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1784 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 1786 */	
			0x12, 0x0,	/* FC_UP */
/* 1788 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (1752) */
/* 1790 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1792 */	NdrFcShort( 0x20 ),	/* 32 */
/* 1794 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1796 */	NdrFcShort( 0x0 ),	/* Offset= 0 (1796) */
/* 1798 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1800 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (1774) */
/* 1802 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1804 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1806 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1808 */	
			0x12, 0x0,	/* FC_UP */
/* 1810 */	NdrFcShort( 0x28 ),	/* Offset= 40 (1850) */
/* 1812 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 1814 */	NdrFcShort( 0x1c ),	/* 28 */
/* 1816 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1818 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1820 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1822 */	0x0,		/* 0 */
			NdrFcShort( 0xf9b3 ),	/* Offset= -1613 (210) */
			0x5b,		/* FC_END */
/* 1826 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 1828 */	NdrFcShort( 0x4 ),	/* 4 */
/* 1830 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x57,		/* FC_ADD_1 */
/* 1832 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1834 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1836 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1838 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1840 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1842 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1844 */	NdrFcShort( 0x68 ),	/* 104 */
/* 1846 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1848 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1850 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1852 */	NdrFcShort( 0xc8 ),	/* 200 */
/* 1854 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1856 */	NdrFcShort( 0x36 ),	/* Offset= 54 (1910) */
/* 1858 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1860 */	0x0,		/* 0 */
			NdrFcShort( 0xf98d ),	/* Offset= -1651 (210) */
			0x2,		/* FC_CHAR */
/* 1864 */	0x3f,		/* FC_STRUCTPAD3 */
			0x8,		/* FC_LONG */
/* 1866 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 1868 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1870 */	NdrFcShort( 0xf972 ),	/* Offset= -1678 (192) */
/* 1872 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1874 */	0x0,		/* 0 */
			NdrFcShort( 0xffc1 ),	/* Offset= -63 (1812) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1878 */	0x0,		/* 0 */
			NdrFcShort( 0xf97b ),	/* Offset= -1669 (210) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1882 */	0x0,		/* 0 */
			NdrFcShort( 0xf977 ),	/* Offset= -1673 (210) */
			0x8,		/* FC_LONG */
/* 1886 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1888 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1890 */	0x0,		/* 0 */
			NdrFcShort( 0xf95d ),	/* Offset= -1699 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1894 */	0x0,		/* 0 */
			NdrFcShort( 0xf959 ),	/* Offset= -1703 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1898 */	0x0,		/* 0 */
			NdrFcShort( 0xf955 ),	/* Offset= -1707 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 1902 */	0x0,		/* 0 */
			NdrFcShort( 0xf951 ),	/* Offset= -1711 (192) */
			0x8,		/* FC_LONG */
/* 1906 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1908 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 1910 */	
			0x12, 0x0,	/* FC_UP */
/* 1912 */	NdrFcShort( 0xffaa ),	/* Offset= -86 (1826) */
/* 1914 */	
			0x12, 0x0,	/* FC_UP */
/* 1916 */	NdrFcShort( 0xfa76 ),	/* Offset= -1418 (498) */
/* 1918 */	
			0x12, 0x0,	/* FC_UP */
/* 1920 */	NdrFcShort( 0xffae ),	/* Offset= -82 (1838) */
/* 1922 */	
			0x12, 0x0,	/* FC_UP */
/* 1924 */	NdrFcShort( 0x24 ),	/* Offset= 36 (1960) */
/* 1926 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 1928 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1930 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1932 */	NdrFcShort( 0x10 ),	/* 16 */
/* 1934 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1936 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 1940 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 1942 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1944 */	NdrFcShort( 0xf928 ),	/* Offset= -1752 (192) */
/* 1946 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 1948 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 1950 */	NdrFcShort( 0x1 ),	/* 1 */
/* 1952 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 1954 */	NdrFcShort( 0x24 ),	/* 36 */
/* 1956 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 1958 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 1960 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 1962 */	NdrFcShort( 0x80 ),	/* 128 */
/* 1964 */	NdrFcShort( 0x0 ),	/* 0 */
/* 1966 */	NdrFcShort( 0x22 ),	/* Offset= 34 (2000) */
/* 1968 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1970 */	NdrFcShort( 0xf90e ),	/* Offset= -1778 (192) */
/* 1972 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 1974 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 1976 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 1978 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1980 */	NdrFcShort( 0xf904 ),	/* Offset= -1788 (192) */
/* 1982 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1984 */	NdrFcShort( 0xf900 ),	/* Offset= -1792 (192) */
/* 1986 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1988 */	NdrFcShort( 0xf8fc ),	/* Offset= -1796 (192) */
/* 1990 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 1992 */	NdrFcShort( 0xf8f8 ),	/* Offset= -1800 (192) */
/* 1994 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1996 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 1998 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2000 */	
			0x12, 0x0,	/* FC_UP */
/* 2002 */	NdrFcShort( 0xffb4 ),	/* Offset= -76 (1926) */
/* 2004 */	
			0x12, 0x0,	/* FC_UP */
/* 2006 */	NdrFcShort( 0xffc6 ),	/* Offset= -58 (1948) */
/* 2008 */	
			0x12, 0x0,	/* FC_UP */
/* 2010 */	NdrFcShort( 0x30 ),	/* Offset= 48 (2058) */
/* 2012 */	
			0x1b,		/* FC_CARRAY */
			0x3,		/* 3 */
/* 2014 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2016 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2018 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2020 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2022 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2024 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2026 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2028 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2030 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2032 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2034 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2038 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2040 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2042 */	NdrFcShort( 0xf8c6 ),	/* Offset= -1850 (192) */
/* 2044 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2046 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2048 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2050 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2052 */	NdrFcShort( 0x3c ),	/* 60 */
/* 2054 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2056 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2058 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2060 */	NdrFcShort( 0x98 ),	/* 152 */
/* 2062 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2064 */	NdrFcShort( 0x24 ),	/* Offset= 36 (2100) */
/* 2066 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2068 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2070 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2072 */	NdrFcShort( 0xfefc ),	/* Offset= -260 (1812) */
/* 2074 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2076 */	0x8,		/* FC_LONG */
			0x36,		/* FC_POINTER */
/* 2078 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2080 */	NdrFcShort( 0xf8a0 ),	/* Offset= -1888 (192) */
/* 2082 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2084 */	NdrFcShort( 0xf89c ),	/* Offset= -1892 (192) */
/* 2086 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2088 */	NdrFcShort( 0xf898 ),	/* Offset= -1896 (192) */
/* 2090 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2092 */	NdrFcShort( 0xf894 ),	/* Offset= -1900 (192) */
/* 2094 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2096 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2098 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2100 */	
			0x12, 0x0,	/* FC_UP */
/* 2102 */	NdrFcShort( 0xffa6 ),	/* Offset= -90 (2012) */
/* 2104 */	
			0x12, 0x0,	/* FC_UP */
/* 2106 */	NdrFcShort( 0xffae ),	/* Offset= -82 (2024) */
/* 2108 */	
			0x12, 0x0,	/* FC_UP */
/* 2110 */	NdrFcShort( 0xffc0 ),	/* Offset= -64 (2046) */
/* 2112 */	
			0x12, 0x0,	/* FC_UP */
/* 2114 */	NdrFcShort( 0x30 ),	/* Offset= 48 (2162) */
/* 2116 */	
			0x1c,		/* FC_CVARRAY */
			0x0,		/* 0 */
/* 2118 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2120 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2122 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2124 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2126 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2128 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2130 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2132 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2134 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2136 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2138 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2140 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2146) */
/* 2142 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2144 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2146 */	
			0x12, 0x0,	/* FC_UP */
/* 2148 */	NdrFcShort( 0xffe0 ),	/* Offset= -32 (2116) */
/* 2150 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2152 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2154 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2156 */	NdrFcShort( 0x34 ),	/* 52 */
/* 2158 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2160 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2162 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2164 */	NdrFcShort( 0x90 ),	/* 144 */
/* 2166 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2168 */	NdrFcShort( 0x2a ),	/* Offset= 42 (2210) */
/* 2170 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2172 */	NdrFcShort( 0xffda ),	/* Offset= -38 (2134) */
/* 2174 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2176 */	NdrFcShort( 0xf852 ),	/* Offset= -1966 (210) */
/* 2178 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2180 */	NdrFcShort( 0xffd2 ),	/* Offset= -46 (2134) */
/* 2182 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2184 */	NdrFcShort( 0xf84a ),	/* Offset= -1974 (210) */
/* 2186 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2188 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2190 */	0x0,		/* 0 */
			NdrFcShort( 0xf831 ),	/* Offset= -1999 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2194 */	0x0,		/* 0 */
			NdrFcShort( 0xf82d ),	/* Offset= -2003 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2198 */	0x0,		/* 0 */
			NdrFcShort( 0xf829 ),	/* Offset= -2007 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2202 */	0x0,		/* 0 */
			NdrFcShort( 0xf825 ),	/* Offset= -2011 (192) */
			0x8,		/* FC_LONG */
/* 2206 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2208 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2210 */	
			0x12, 0x0,	/* FC_UP */
/* 2212 */	NdrFcShort( 0xffc2 ),	/* Offset= -62 (2150) */
/* 2214 */	
			0x12, 0x0,	/* FC_UP */
/* 2216 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2218) */
/* 2218 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2220 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2222 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2224 */	NdrFcShort( 0x18 ),	/* Offset= 24 (2248) */
/* 2226 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2228 */	0x0,		/* 0 */
			NdrFcShort( 0xf80b ),	/* Offset= -2037 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2232 */	0x0,		/* 0 */
			NdrFcShort( 0xf807 ),	/* Offset= -2041 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2236 */	0x0,		/* 0 */
			NdrFcShort( 0xf803 ),	/* Offset= -2045 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2240 */	0x0,		/* 0 */
			NdrFcShort( 0xf7ff ),	/* Offset= -2049 (192) */
			0x8,		/* FC_LONG */
/* 2244 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2246 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2248 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2250 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2252 */	
			0x12, 0x0,	/* FC_UP */
/* 2254 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2256) */
/* 2256 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2258 */	NdrFcShort( 0x58 ),	/* 88 */
/* 2260 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2262 */	NdrFcShort( 0x18 ),	/* Offset= 24 (2286) */
/* 2264 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2266 */	0x0,		/* 0 */
			NdrFcShort( 0xf7e5 ),	/* Offset= -2075 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2270 */	0x0,		/* 0 */
			NdrFcShort( 0xf7e1 ),	/* Offset= -2079 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2274 */	0x0,		/* 0 */
			NdrFcShort( 0xf7dd ),	/* Offset= -2083 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2278 */	0x0,		/* 0 */
			NdrFcShort( 0xf7d9 ),	/* Offset= -2087 (192) */
			0x8,		/* FC_LONG */
/* 2282 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2284 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2286 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2288 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2290 */	
			0x12, 0x0,	/* FC_UP */
/* 2292 */	NdrFcShort( 0xfae6 ),	/* Offset= -1306 (986) */
/* 2294 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2296 */	NdrFcShort( 0x18 ),	/* 24 */
/* 2298 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2300 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2300) */
/* 2302 */	0xd,		/* FC_ENUM16 */
			0x40,		/* FC_STRUCTPAD4 */
/* 2304 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2306 */	NdrFcShort( 0xfaea ),	/* Offset= -1302 (1004) */
/* 2308 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2310 */	NdrFcShort( 0xfb78 ),	/* Offset= -1160 (1150) */
/* 2312 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2314 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2316 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2318 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2320 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2322 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2324 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 2328 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2330 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2332 */	NdrFcShort( 0xffda ),	/* Offset= -38 (2294) */
/* 2334 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2336 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2338 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2340 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2342 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2348) */
/* 2344 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2346 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2348 */	
			0x12, 0x0,	/* FC_UP */
/* 2350 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (2314) */
/* 2352 */	
			0x11, 0x8,	/* FC_RP [simple_pointer] */
/* 2354 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 2356 */	
			0x11, 0x0,	/* FC_RP */
/* 2358 */	NdrFcShort( 0x8 ),	/* Offset= 8 (2366) */
/* 2360 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 2362 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2364 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2366 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 2368 */	NdrFcShort( 0x18 ),	/* 24 */
/* 2370 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2372 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (2360) */
/* 2374 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2376 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2378 */	
			0x11, 0x0,	/* FC_RP */
/* 2380 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2382) */
/* 2382 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2384 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2386 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2388 */	NdrFcShort( 0x40 ),	/* X64 Stack size/offset = 64 */
/* 2390 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2392 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2394 */	
			0x11, 0xc,	/* FC_RP [alloced_on_stack] [simple_pointer] */
/* 2396 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */
/* 2398 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2400 */	NdrFcShort( 0xffde ),	/* Offset= -34 (2366) */
/* 2402 */	
			0x11, 0x0,	/* FC_RP */
/* 2404 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2406) */
/* 2406 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2408 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2410 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2412 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 2414 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2416 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2418 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2420 */	NdrFcShort( 0xf68e ),	/* Offset= -2418 (2) */
/* 2422 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2424 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2426) */
/* 2426 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2428 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2430 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2432 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2434 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2436) */
/* 2436 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2438 */	NdrFcShort( 0x3004 ),	/* 12292 */
/* 2440 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2444 */	NdrFcShort( 0x16 ),	/* Offset= 22 (2466) */
/* 2446 */	NdrFcLong( 0x2 ),	/* 2 */
/* 2450 */	NdrFcShort( 0x14 ),	/* Offset= 20 (2470) */
/* 2452 */	NdrFcLong( 0x3 ),	/* 3 */
/* 2456 */	NdrFcShort( 0x24 ),	/* Offset= 36 (2492) */
/* 2458 */	NdrFcLong( 0x4 ),	/* 4 */
/* 2462 */	NdrFcShort( 0x2e ),	/* Offset= 46 (2508) */
/* 2464 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2464) */
/* 2466 */	
			0x12, 0x0,	/* FC_UP */
/* 2468 */	NdrFcShort( 0xf72e ),	/* Offset= -2258 (210) */
/* 2470 */	
			0x12, 0x0,	/* FC_UP */
/* 2472 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2474) */
/* 2474 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2476 */	NdrFcShort( 0x18 ),	/* 24 */
/* 2478 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2480 */	NdrFcShort( 0x8 ),	/* Offset= 8 (2488) */
/* 2482 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2484 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 2486 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 2488 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2490 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2492 */	
			0x12, 0x0,	/* FC_UP */
/* 2494 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2496) */
/* 2496 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 2498 */	NdrFcShort( 0x1c ),	/* 28 */
/* 2500 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2502 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2504 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2506 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2508 */	
			0x12, 0x0,	/* FC_UP */
/* 2510 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2512) */
/* 2512 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2514 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2516 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2518 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2524) */
/* 2520 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2522 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2524 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2526 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2528 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2530 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2532 */	
			0x11, 0x0,	/* FC_RP */
/* 2534 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2536) */
/* 2536 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2538 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2540 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2542 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2544 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2546) */
/* 2546 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2548 */	NdrFcShort( 0x3006 ),	/* 12294 */
/* 2550 */	NdrFcLong( 0x5 ),	/* 5 */
/* 2554 */	NdrFcShort( 0xf608 ),	/* Offset= -2552 (2) */
/* 2556 */	NdrFcLong( 0x6 ),	/* 6 */
/* 2560 */	NdrFcShort( 0xf602 ),	/* Offset= -2558 (2) */
/* 2562 */	NdrFcLong( 0x9 ),	/* 9 */
/* 2566 */	NdrFcShort( 0xf5fc ),	/* Offset= -2564 (2) */
/* 2568 */	NdrFcLong( 0xa ),	/* 10 */
/* 2572 */	NdrFcShort( 0xf5f6 ),	/* Offset= -2570 (2) */
/* 2574 */	NdrFcLong( 0xfffe ),	/* 65534 */
/* 2578 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 2580 */	NdrFcLong( 0x8 ),	/* 8 */
/* 2584 */	NdrFcShort( 0xf5ea ),	/* Offset= -2582 (2) */
/* 2586 */	NdrFcShort( 0x0 ),	/* Offset= 0 (2586) */
/* 2588 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2590 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2592) */
/* 2592 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2594 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2596 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2598 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2600 */	NdrFcShort( 0xff5c ),	/* Offset= -164 (2436) */
/* 2602 */	
			0x11, 0x0,	/* FC_RP */
/* 2604 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2606) */
/* 2606 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2608 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2610 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2612 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 2614 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2616 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2618 */	
			0x11, 0x0,	/* FC_RP */
/* 2620 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2622) */
/* 2622 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2624 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2626 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 2628 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2630 */	NdrFcShort( 0xffac ),	/* Offset= -84 (2546) */
/* 2632 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2634 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2636) */
/* 2636 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2638 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2640 */	NdrFcShort( 0x10 ),	/* X64 Stack size/offset = 16 */
/* 2642 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2644 */	NdrFcShort( 0xff30 ),	/* Offset= -208 (2436) */
/* 2646 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2648 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2650) */
/* 2650 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2652 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2654 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2656 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2662) */
/* 2658 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2660 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2662 */	
			0x12, 0x0,	/* FC_UP */
/* 2664 */	NdrFcShort( 0xf882 ),	/* Offset= -1918 (746) */
/* 2666 */	
			0x12, 0x0,	/* FC_UP */
/* 2668 */	NdrFcShort( 0x8 ),	/* Offset= 8 (2676) */
/* 2670 */	
			0x1d,		/* FC_SMFARRAY */
			0x0,		/* 0 */
/* 2672 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2674 */	0x1,		/* FC_BYTE */
			0x5b,		/* FC_END */
/* 2676 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 2678 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2680 */	0x8,		/* FC_LONG */
			0x6,		/* FC_SHORT */
/* 2682 */	0x6,		/* FC_SHORT */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2684 */	0x0,		/* 0 */
			NdrFcShort( 0xfff1 ),	/* Offset= -15 (2670) */
			0x5b,		/* FC_END */
/* 2688 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 2690 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2692) */
/* 2692 */	
			0x12, 0x0,	/* FC_UP */
/* 2694 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2696) */
/* 2696 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2698 */	NdrFcShort( 0x50 ),	/* 80 */
/* 2700 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2702 */	NdrFcShort( 0x12 ),	/* Offset= 18 (2720) */
/* 2704 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2706 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2708 */	0x0,		/* 0 */
			NdrFcShort( 0xffdf ),	/* Offset= -33 (2676) */
			0x40,		/* FC_STRUCTPAD4 */
/* 2712 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2714 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2716 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2718 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2720 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2722 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2724 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2726 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2728 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2730 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2732 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2734 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2736 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2738 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2740 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2742 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2744 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2746 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2748) */
/* 2748 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2750 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2752 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2754 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2756 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2758) */
/* 2758 */	NdrFcShort( 0x4 ),	/* 4 */
/* 2760 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 2762 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2766 */	NdrFcShort( 0x8008 ),	/* Simple arm type: FC_LONG */
/* 2768 */	NdrFcShort( 0xffff ),	/* Offset= -1 (2767) */
/* 2770 */	
			0x11, 0x0,	/* FC_RP */
/* 2772 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2774) */
/* 2774 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 2776 */	NdrFcShort( 0x1 ),	/* 1 */
/* 2778 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2780 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 2782 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 2784 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 2786 */	
			0x11, 0x0,	/* FC_RP */
/* 2788 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2790) */
/* 2790 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2792 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2794 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2796 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2798 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2800) */
/* 2800 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2802 */	NdrFcShort( 0x3002 ),	/* 12290 */
/* 2804 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2808 */	NdrFcShort( 0xa ),	/* Offset= 10 (2818) */
/* 2810 */	NdrFcLong( 0x2 ),	/* 2 */
/* 2814 */	NdrFcShort( 0x4 ),	/* Offset= 4 (2818) */
/* 2816 */	NdrFcShort( 0xffff ),	/* Offset= -1 (2815) */
/* 2818 */	
			0x12, 0x0,	/* FC_UP */
/* 2820 */	NdrFcShort( 0x12 ),	/* Offset= 18 (2838) */
/* 2822 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2824 */	NdrFcShort( 0x10 ),	/* 16 */
/* 2826 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2828 */	NdrFcShort( 0x6 ),	/* Offset= 6 (2834) */
/* 2830 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 2832 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 2834 */	
			0x12, 0x0,	/* FC_UP */
/* 2836 */	NdrFcShort( 0xf7d6 ),	/* Offset= -2090 (746) */
/* 2838 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2840 */	NdrFcShort( 0x90 ),	/* 144 */
/* 2842 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2844 */	NdrFcShort( 0x22 ),	/* Offset= 34 (2878) */
/* 2846 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2848 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (2822) */
/* 2850 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2852 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2854 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 2856 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2858 */	NdrFcShort( 0xf596 ),	/* Offset= -2666 (192) */
/* 2860 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2862 */	NdrFcShort( 0xf592 ),	/* Offset= -2670 (192) */
/* 2864 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2866 */	NdrFcShort( 0xf58e ),	/* Offset= -2674 (192) */
/* 2868 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2870 */	NdrFcShort( 0xf58a ),	/* Offset= -2678 (192) */
/* 2872 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2874 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2876 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 2878 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2880 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2882 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2884 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2886 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2888 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2890 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2892 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2894 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2896 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2898 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 2900 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 2902 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 2904 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2906) */
/* 2906 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 2908 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 2910 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 2912 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2914 */	NdrFcShort( 0x2 ),	/* Offset= 2 (2916) */
/* 2916 */	NdrFcShort( 0x8 ),	/* 8 */
/* 2918 */	NdrFcShort( 0x3002 ),	/* 12290 */
/* 2920 */	NdrFcLong( 0x1 ),	/* 1 */
/* 2924 */	NdrFcShort( 0xa ),	/* Offset= 10 (2934) */
/* 2926 */	NdrFcLong( 0x2 ),	/* 2 */
/* 2930 */	NdrFcShort( 0x7c ),	/* Offset= 124 (3054) */
/* 2932 */	NdrFcShort( 0xffff ),	/* Offset= -1 (2931) */
/* 2934 */	
			0x12, 0x0,	/* FC_UP */
/* 2936 */	NdrFcShort( 0x4a ),	/* Offset= 74 (3010) */
/* 2938 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 2940 */	NdrFcShort( 0x98 ),	/* 152 */
/* 2942 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2944 */	NdrFcShort( 0x28 ),	/* Offset= 40 (2984) */
/* 2946 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2948 */	NdrFcShort( 0xf53c ),	/* Offset= -2756 (192) */
/* 2950 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2952 */	NdrFcShort( 0xf538 ),	/* Offset= -2760 (192) */
/* 2954 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2956 */	NdrFcShort( 0xf534 ),	/* Offset= -2764 (192) */
/* 2958 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 2960 */	NdrFcShort( 0xfee4 ),	/* Offset= -284 (2676) */
/* 2962 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2964 */	0x0,		/* 0 */
			NdrFcShort( 0xf52b ),	/* Offset= -2773 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2968 */	0x0,		/* 0 */
			NdrFcShort( 0xf527 ),	/* Offset= -2777 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2972 */	0x0,		/* 0 */
			NdrFcShort( 0xf523 ),	/* Offset= -2781 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 2976 */	0x0,		/* 0 */
			NdrFcShort( 0xf51f ),	/* Offset= -2785 (192) */
			0x8,		/* FC_LONG */
/* 2980 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 2982 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 2984 */	
			0x12, 0x0,	/* FC_UP */
/* 2986 */	NdrFcShort( 0xf648 ),	/* Offset= -2488 (498) */
/* 2988 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 2990 */	NdrFcShort( 0x0 ),	/* 0 */
/* 2992 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 2994 */	NdrFcShort( 0x98 ),	/* 152 */
/* 2996 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 2998 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 3002 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3004 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3006 */	NdrFcShort( 0xffbc ),	/* Offset= -68 (2938) */
/* 3008 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3010 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3012 */	NdrFcShort( 0x108 ),	/* 264 */
/* 3014 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3016 */	NdrFcShort( 0x22 ),	/* Offset= 34 (3050) */
/* 3018 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3020 */	NdrFcShort( 0xffae ),	/* Offset= -82 (2938) */
/* 3022 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3024 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3026 */	0x0,		/* 0 */
			NdrFcShort( 0xff33 ),	/* Offset= -205 (2822) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3030 */	0x0,		/* 0 */
			NdrFcShort( 0xf4e9 ),	/* Offset= -2839 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3034 */	0x0,		/* 0 */
			NdrFcShort( 0xf4e5 ),	/* Offset= -2843 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3038 */	0x0,		/* 0 */
			NdrFcShort( 0xf4e1 ),	/* Offset= -2847 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3042 */	0x0,		/* 0 */
			NdrFcShort( 0xf4dd ),	/* Offset= -2851 (192) */
			0x8,		/* FC_LONG */
/* 3046 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3048 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3050 */	
			0x12, 0x0,	/* FC_UP */
/* 3052 */	NdrFcShort( 0xffc0 ),	/* Offset= -64 (2988) */
/* 3054 */	
			0x12, 0x0,	/* FC_UP */
/* 3056 */	NdrFcShort( 0xff16 ),	/* Offset= -234 (2822) */
/* 3058 */	
			0x11, 0x0,	/* FC_RP */
/* 3060 */	NdrFcShort( 0x8 ),	/* Offset= 8 (3068) */
/* 3062 */	
			0x1d,		/* FC_SMFARRAY */
			0x1,		/* 1 */
/* 3064 */	NdrFcShort( 0x200 ),	/* 512 */
/* 3066 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3068 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 3070 */	NdrFcShort( 0x204 ),	/* 516 */
/* 3072 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3074 */	NdrFcShort( 0xfff4 ),	/* Offset= -12 (3062) */
/* 3076 */	0x8,		/* FC_LONG */
			0x5b,		/* FC_END */
/* 3078 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 3080 */	NdrFcShort( 0xf4f8 ),	/* Offset= -2824 (256) */
/* 3082 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 3084 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3088 */	NdrFcLong( 0x7d00 ),	/* 32000 */
/* 3092 */	
			0x11, 0x0,	/* FC_RP */
/* 3094 */	NdrFcShort( 0x1e ),	/* Offset= 30 (3124) */
/* 3096 */	
			0x1b,		/* FC_CARRAY */
			0x0,		/* 0 */
/* 3098 */	NdrFcShort( 0x1 ),	/* 1 */
/* 3100 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3102 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3104 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3106 */	0x2,		/* FC_CHAR */
			0x5b,		/* FC_END */
/* 3108 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3110 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3112 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3114 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3120) */
/* 3116 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 3118 */	0x40,		/* FC_STRUCTPAD4 */
			0x5b,		/* FC_END */
/* 3120 */	
			0x12, 0x0,	/* FC_UP */
/* 3122 */	NdrFcShort( 0xffe6 ),	/* Offset= -26 (3096) */
/* 3124 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 3126 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3128 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 3130 */	NdrFcShort( 0x8 ),	/* X64 Stack size/offset = 8 */
/* 3132 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3134 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 3138 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3140 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3142 */	NdrFcShort( 0xffde ),	/* Offset= -34 (3108) */
/* 3144 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3146 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 3148 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3150) */
/* 3150 */	
			0x12, 0x0,	/* FC_UP */
/* 3152 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3154) */
/* 3154 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3156 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3158 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3160 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3166) */
/* 3162 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3164 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 3166 */	
			0x12, 0x0,	/* FC_UP */
/* 3168 */	NdrFcShort( 0xfb88 ),	/* Offset= -1144 (2024) */
/* 3170 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 3172 */	NdrFcShort( 0x38 ),	/* Offset= 56 (3228) */
/* 3174 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3176 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3178 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3180 */	NdrFcShort( 0xe ),	/* Offset= 14 (3194) */
/* 3182 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 3184 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3186 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3188 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3190 */	0x0,		/* 0 */
			NdrFcShort( 0xfdfd ),	/* Offset= -515 (2676) */
			0x5b,		/* FC_END */
/* 3194 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3196 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3198 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3200 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3202 */	
			0x12, 0x0,	/* FC_UP */
/* 3204 */	NdrFcShort( 0xf56e ),	/* Offset= -2706 (498) */
/* 3206 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 3208 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3210 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3212 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3214 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3216 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 3220 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3222 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3224 */	NdrFcShort( 0xffce ),	/* Offset= -50 (3174) */
/* 3226 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3228 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3230 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3232 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3234 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3240) */
/* 3236 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3238 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 3240 */	
			0x12, 0x0,	/* FC_UP */
/* 3242 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (3206) */
/* 3244 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 3246 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3250 */	NdrFcLong( 0x7d00 ),	/* 32000 */
/* 3254 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 3256 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3258) */
/* 3258 */	
			0x12, 0x0,	/* FC_UP */
/* 3260 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3262) */
/* 3262 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3264 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3266 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3268 */	NdrFcShort( 0x8 ),	/* Offset= 8 (3276) */
/* 3270 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3272 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 3274 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3276 */	
			0x12, 0x0,	/* FC_UP */
/* 3278 */	NdrFcShort( 0xfb1a ),	/* Offset= -1254 (2024) */
/* 3280 */	
			0x12, 0x0,	/* FC_UP */
/* 3282 */	NdrFcShort( 0xfb16 ),	/* Offset= -1258 (2024) */
/* 3284 */	
			0x11, 0x0,	/* FC_RP */
/* 3286 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3288) */
/* 3288 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 3290 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 3292 */	NdrFcShort( 0x18 ),	/* X64 Stack size/offset = 24 */
/* 3294 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3296 */	NdrFcShort( 0xf39a ),	/* Offset= -3174 (122) */
/* 3298 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 3300 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3302) */
/* 3302 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 3304 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 3306 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3308 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3310 */	NdrFcShort( 0xf4aa ),	/* Offset= -2902 (408) */
/* 3312 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 3314 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3316) */
/* 3316 */	
			0x12, 0x0,	/* FC_UP */
/* 3318 */	NdrFcShort( 0x92 ),	/* Offset= 146 (3464) */
/* 3320 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 3322 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3326 */	NdrFcLong( 0xfa0 ),	/* 4000 */
/* 3330 */	
			0x15,		/* FC_STRUCT */
			0x7,		/* 7 */
/* 3332 */	NdrFcShort( 0x8 ),	/* 8 */
/* 3334 */	0xb,		/* FC_HYPER */
			0x5b,		/* FC_END */
/* 3336 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 3338 */	0x6,		/* Corr desc: FC_SHORT */
			0x0,		/*  */
/* 3340 */	NdrFcShort( 0xfff4 ),	/* -12 */
/* 3342 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3344 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3346) */
/* 3346 */	NdrFcShort( 0x28 ),	/* 40 */
/* 3348 */	NdrFcShort( 0x3003 ),	/* 12291 */
/* 3350 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3354 */	NdrFcShort( 0xf3a6 ),	/* Offset= -3162 (192) */
/* 3356 */	NdrFcLong( 0x1 ),	/* 1 */
/* 3360 */	NdrFcShort( 0xf3a0 ),	/* Offset= -3168 (192) */
/* 3362 */	NdrFcLong( 0x2 ),	/* 2 */
/* 3366 */	NdrFcShort( 0x4 ),	/* Offset= 4 (3370) */
/* 3368 */	NdrFcShort( 0x22 ),	/* Offset= 34 (3402) */
/* 3370 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3372 */	NdrFcShort( 0x28 ),	/* 40 */
/* 3374 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3376 */	NdrFcShort( 0xc ),	/* Offset= 12 (3388) */
/* 3378 */	0x36,		/* FC_POINTER */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3380 */	0x0,		/* 0 */
			NdrFcShort( 0xf38b ),	/* Offset= -3189 (192) */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3384 */	0x0,		/* 0 */
			NdrFcShort( 0xf387 ),	/* Offset= -3193 (192) */
			0x5b,		/* FC_END */
/* 3388 */	
			0x12, 0x0,	/* FC_UP */
/* 3390 */	NdrFcShort( 0xf4b4 ),	/* Offset= -2892 (498) */
/* 3392 */	0xb7,		/* FC_RANGE */
			0x8,		/* 8 */
/* 3394 */	NdrFcLong( 0x0 ),	/* 0 */
/* 3398 */	NdrFcLong( 0x20000 ),	/* 131072 */
/* 3402 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3404 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3406 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3408 */	NdrFcShort( 0xa ),	/* Offset= 10 (3418) */
/* 3410 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3412 */	NdrFcShort( 0xffec ),	/* Offset= -20 (3392) */
/* 3414 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 3416 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3418 */	
			0x12, 0x0,	/* FC_UP */
/* 3420 */	NdrFcShort( 0xf58e ),	/* Offset= -2674 (746) */
/* 3422 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x7,		/* 7 */
/* 3424 */	NdrFcShort( 0x38 ),	/* 56 */
/* 3426 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3428 */	NdrFcShort( 0x0 ),	/* Offset= 0 (3428) */
/* 3430 */	0x8,		/* FC_LONG */
			0xd,		/* FC_ENUM16 */
/* 3432 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3434 */	NdrFcShort( 0xff98 ),	/* Offset= -104 (3330) */
/* 3436 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3438 */	NdrFcShort( 0xff9a ),	/* Offset= -102 (3336) */
/* 3440 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3442 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 3444 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3446 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3448 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3450 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3452 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 3456 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3458 */	
			0x12, 0x0,	/* FC_UP */
/* 3460 */	NdrFcShort( 0xffda ),	/* Offset= -38 (3422) */
/* 3462 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3464 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3466 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3468 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3470 */	NdrFcShort( 0xa ),	/* Offset= 10 (3480) */
/* 3472 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3474 */	NdrFcShort( 0xff66 ),	/* Offset= -154 (3320) */
/* 3476 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 3478 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3480 */	
			0x12, 0x0,	/* FC_UP */
/* 3482 */	NdrFcShort( 0xffd8 ),	/* Offset= -40 (3442) */
/* 3484 */	
			0x11, 0x0,	/* FC_RP */
/* 3486 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3488) */
/* 3488 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 3490 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 3492 */	NdrFcShort( 0x20 ),	/* X64 Stack size/offset = 32 */
/* 3494 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3496 */	NdrFcShort( 0xf2d2 ),	/* Offset= -3374 (122) */
/* 3498 */	
			0x11, 0x4,	/* FC_RP [alloced_on_stack] */
/* 3500 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3502) */
/* 3502 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0xd,		/* FC_ENUM16 */
/* 3504 */	0x26,		/* Corr desc:  parameter, FC_SHORT */
			0x0,		/*  */
/* 3506 */	NdrFcShort( 0x30 ),	/* X64 Stack size/offset = 48 */
/* 3508 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3510 */	NdrFcShort( 0xf3e2 ),	/* Offset= -3102 (408) */
/* 3512 */	
			0x11, 0x14,	/* FC_RP [alloced_on_stack] [pointer_deref] */
/* 3514 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3516) */
/* 3516 */	
			0x12, 0x0,	/* FC_UP */
/* 3518 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3520) */
/* 3520 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3522 */	NdrFcShort( 0x20 ),	/* 32 */
/* 3524 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3526 */	NdrFcShort( 0xa ),	/* Offset= 10 (3536) */
/* 3528 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3530 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 3532 */	0x40,		/* FC_STRUCTPAD4 */
			0x36,		/* FC_POINTER */
/* 3534 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3536 */	
			0x12, 0x0,	/* FC_UP */
/* 3538 */	NdrFcShort( 0xfa0a ),	/* Offset= -1526 (2012) */
/* 3540 */	
			0x12, 0x0,	/* FC_UP */
/* 3542 */	NdrFcShort( 0xf9b0 ),	/* Offset= -1616 (1926) */
/* 3544 */	
			0x11, 0x0,	/* FC_RP */
/* 3546 */	NdrFcShort( 0x30 ),	/* Offset= 48 (3594) */
/* 3548 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3550 */	NdrFcShort( 0x28 ),	/* 40 */
/* 3552 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3554 */	NdrFcShort( 0xe ),	/* Offset= 14 (3568) */
/* 3556 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3558 */	0x36,		/* FC_POINTER */
			0x8,		/* FC_LONG */
/* 3560 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3562 */	0x8,		/* FC_LONG */
			0x2,		/* FC_CHAR */
/* 3564 */	0x3f,		/* FC_STRUCTPAD3 */
			0x8,		/* FC_LONG */
/* 3566 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3568 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3570 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3572 */	
			0x21,		/* FC_BOGUS_ARRAY */
			0x3,		/* 3 */
/* 3574 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3576 */	0x19,		/* Corr desc:  field pointer, FC_ULONG */
			0x0,		/*  */
/* 3578 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3580 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3582 */	NdrFcLong( 0xffffffff ),	/* -1 */
/* 3586 */	NdrFcShort( 0x0 ),	/* Corr flags:  */
/* 3588 */	0x4c,		/* FC_EMBEDDED_COMPLEX */
			0x0,		/* 0 */
/* 3590 */	NdrFcShort( 0xffd6 ),	/* Offset= -42 (3548) */
/* 3592 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3594 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3596 */	NdrFcShort( 0x10 ),	/* 16 */
/* 3598 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3600 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3606) */
/* 3602 */	0x8,		/* FC_LONG */
			0x40,		/* FC_STRUCTPAD4 */
/* 3604 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 3606 */	
			0x12, 0x0,	/* FC_UP */
/* 3608 */	NdrFcShort( 0xffdc ),	/* Offset= -36 (3572) */
/* 3610 */	
			0x11, 0x0,	/* FC_RP */
/* 3612 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3614) */
/* 3614 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 3616 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x0,		/*  */
/* 3618 */	NdrFcShort( 0x28 ),	/* X64 Stack size/offset = 40 */
/* 3620 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3622 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3624) */
/* 3624 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3626 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 3628 */	NdrFcLong( 0x1 ),	/* 1 */
/* 3632 */	NdrFcShort( 0x1e ),	/* Offset= 30 (3662) */
/* 3634 */	NdrFcShort( 0xffff ),	/* Offset= -1 (3633) */
/* 3636 */	
			0x1d,		/* FC_SMFARRAY */
			0x1,		/* 1 */
/* 3638 */	NdrFcShort( 0x100 ),	/* 256 */
/* 3640 */	0x5,		/* FC_WCHAR */
			0x5b,		/* FC_END */
/* 3642 */	
			0x15,		/* FC_STRUCT */
			0x3,		/* 3 */
/* 3644 */	NdrFcShort( 0x11c ),	/* 284 */
/* 3646 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3648 */	0x8,		/* FC_LONG */
			0x8,		/* FC_LONG */
/* 3650 */	0x8,		/* FC_LONG */
			0x4c,		/* FC_EMBEDDED_COMPLEX */
/* 3652 */	0x0,		/* 0 */
			NdrFcShort( 0xffef ),	/* Offset= -17 (3636) */
			0x6,		/* FC_SHORT */
/* 3656 */	0x6,		/* FC_SHORT */
			0x6,		/* FC_SHORT */
/* 3658 */	0x2,		/* FC_CHAR */
			0x2,		/* FC_CHAR */
/* 3660 */	0x5c,		/* FC_PAD */
			0x5b,		/* FC_END */
/* 3662 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3664 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3666 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3668 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3674) */
/* 3670 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 3672 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 3674 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3676 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3678 */	
			0x12, 0x0,	/* FC_UP */
/* 3680 */	NdrFcShort( 0xffda ),	/* Offset= -38 (3642) */
/* 3682 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3684 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3686 */	
			0x11, 0x0,	/* FC_RP */
/* 3688 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3690) */
/* 3690 */	
			0x2b,		/* FC_NON_ENCAPSULATED_UNION */
			0x9,		/* FC_ULONG */
/* 3692 */	0x29,		/* Corr desc:  parameter, FC_ULONG */
			0x54,		/* FC_DEREFERENCE */
/* 3694 */	NdrFcShort( 0x38 ),	/* X64 Stack size/offset = 56 */
/* 3696 */	NdrFcShort( 0x1 ),	/* Corr flags:  early, */
/* 3698 */	NdrFcShort( 0x2 ),	/* Offset= 2 (3700) */
/* 3700 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3702 */	NdrFcShort( 0x3001 ),	/* 12289 */
/* 3704 */	NdrFcLong( 0x1 ),	/* 1 */
/* 3708 */	NdrFcShort( 0x4 ),	/* Offset= 4 (3712) */
/* 3710 */	NdrFcShort( 0xffff ),	/* Offset= -1 (3709) */
/* 3712 */	
			0x1a,		/* FC_BOGUS_STRUCT */
			0x3,		/* 3 */
/* 3714 */	NdrFcShort( 0x18 ),	/* 24 */
/* 3716 */	NdrFcShort( 0x0 ),	/* 0 */
/* 3718 */	NdrFcShort( 0x6 ),	/* Offset= 6 (3724) */
/* 3720 */	0x36,		/* FC_POINTER */
			0x36,		/* FC_POINTER */
/* 3722 */	0x36,		/* FC_POINTER */
			0x5b,		/* FC_END */
/* 3724 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3726 */	
			0x25,		/* FC_C_WSTRING */
			0x5c,		/* FC_PAD */
/* 3728 */	
			0x12, 0x10,	/* FC_UP [pointer_deref] */
/* 3730 */	NdrFcShort( 0xf170 ),	/* Offset= -3728 (2) */
/* 3732 */	
			0x12, 0x8,	/* FC_UP [simple_pointer] */
/* 3734 */	0x8,		/* FC_LONG */
			0x5c,		/* FC_PAD */

			0x0
";
        #endregion
    }

}
